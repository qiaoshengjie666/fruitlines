{"version":3,"sources":["assets\\framework\\plugin_boosts\\ui\\UIFunctions.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export default class UIFunctions\n{\n    \n    static getChildrenAnimations(node): cc.Animation[] {\n        let animations:cc.Animation[] = []\n        var anim = node.getComponent(cc.Animation)\n        if(anim)\n            animations.push(anim)\n        for (var i = 0; i< node.childrenCount; i++)\n        {\n            let child = node.children[i];\n            var anim = child.getComponent(cc.Animation)\n            if(anim)\n                animations.push(anim)\n        }\n        return animations\n    }\n\n    static stopAnimations(animations)\n    {\n        animations.forEach((anim:cc.Animation)=>{\n            anim.stop();\n        })\n    }\n\n    static doShowAnimations(animations,finishCallback?:Function,target?)\n    {\n        let maxDuration = 0 ;\n        let maxDurationAnimation:cc.Animation;\n        animations.forEach((anim:cc.Animation)=>{\n            let clips = anim.getClips()\n            if(clips.length > 0)\n            {\n                let clip = clips[0]\n                let animState = anim.play(clip.name)\n                animState.wrapMode = cc.WrapMode.Normal\n                if (clip.duration > maxDuration)\n                {\n                    maxDuration  = clip.duration;\n                    maxDurationAnimation = anim;\n                }\n            }\n        })\n        if (finishCallback)\n        {\n            let func = function()\n            {\n                // console.log(\"finish animations\")\n                if(maxDurationAnimation)\n                    maxDurationAnimation.off(\"finished\",func);\n                finishCallback.call(target);\n            }\n            if(maxDurationAnimation)\n                maxDurationAnimation.on(\"finished\",func);\n            else \n                finishCallback.call(target);\n            \n        }\n    }\n\n    // static getLongestAnimation(animations)\n    // {\n    //     animations.forEach((anim:cc.Animation)=>{\n    //         let clips = anim.getClips()\n    //         for (clips)\n            \n    //         //以最长的为准\n    //     }\n    // }\n\n    //TODO:还未实现\n    static isAnimationRunning(animations: cc.Animation[]): any {\n        return false;\n    }\n\n    static doHideAnimations(animations,finishCallback?:Function,target?)\n    {\n        let hasHideAnimation = false;\n        let maxDuration = 0 ;\n        let maxDurationAnimation:cc.Animation;\n        animations.forEach((anim:cc.Animation)=>{\n            let clips = anim.getClips()\n            if(clips.length == 2)\n            {\n                let clip = clips[clips.length-1]\n                // anim.on(\"finished\",onHideAnimationFinished)\n                hasHideAnimation = true;\n                anim.play(clip.name)\n                if (clip.duration > maxDuration)\n                {\n                    maxDuration  = clip.duration;\n                    maxDurationAnimation = anim;\n                }\n            }else if(clips.length == 1)\n            {\n                let clip = clips[0];\n                // clip.wrapMode = cc.WrapMode.Reverse;\n                hasHideAnimation = true;\n                let animState = anim.play(clip.name)\n                animState.wrapMode = cc.WrapMode.Reverse\n                if (clip.duration > maxDuration)\n                {\n                    maxDuration  = clip.duration;\n                    maxDurationAnimation = anim;\n                }   \n            }\n        })\n        if (maxDurationAnimation && finishCallback)\n        {\n            let func = function()\n            {\n                // console.log(\"finish animations\")\n                maxDurationAnimation.off(\"finished\",func);\n                finishCallback.call(target);\n            }\n            maxDurationAnimation.on(\"finished\",func);\n        }\n        return hasHideAnimation;\n    }\n\n    static getToggleIndex(toggle:cc.Toggle)\n    {\n        let container = toggle.node.getParent();\n        for (var i = 0 ;i < container.childrenCount;i++)\n        {\n            let child = container.children[i]\n            if(toggle.node == child )\n            {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    static selectToggleIndex(toggleContainer:cc.Node,index)\n    {\n        if(toggleContainer == null) {\n            console.warn(\"[UIFunction.selectToggleIndex] : invalid toggleContainer :\" )\n            return;\n        }\n        let toggleNode = toggleContainer.children[index]\n        if(toggleNode)\n        {\n            let toggle = toggleNode.getComponent(cc.Toggle)\n            if(toggle)\n            {\n                console.log(\"[UIFunction.selectToggleIndex] :\" + index)\n                toggle.check()\n            }\n        }else{\n            console.warn(\"[UIFunction.selectToggleIndex] :cannot find toggle with index:\"+ index)\n        }\n    }\n\n    // set btn \n    static setTouchEnabled(node,b)\n    {\n        // g.foreachNode(node,child=>{\n        //     let btn:cc.Button = child.getComponent(cc.Button)\n        //     if(btn)\n        //     {\n        //         console.log(\"[UIFunction] \" + child.name + \" touch : \" + b)\n        //         btn.interactable = b;\n        //     }\n        // })\n    }\n\n    static setButtonEnabled(btn,b)\n    {\n        btn.node.opacity = b?255:125;\n        btn.interactable = b\n    }\n\n}"]}