{"version":3,"sources":["assets\\framework\\plugin_boosts\\gamesys\\PoolManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nexport default class PoolManager\n{\n    nodePool:any = {}\n    \n    nodes = {}\n\n    onCreateObject:Function;\n    target:any;\n    root:cc.Node;\n\n    managed:boolean = false;\n    aliveObjects:cc.Node[] = []\n\n    constructor(root?:cc.Node,onCreateObject?,target?)\n    {\n        this.onCreateObject = onCreateObject;\n        this.target = target;\n        this.root = root;\n        if(root)\n        {\n            root.on(cc.Node.EventType.CHILD_REMOVED, this.onNodeRemove, this)\n        }\n    }\n\n    onNodeRemove(node)\n    {\n        this.put(node);\n    }\n\n    objects()\n    {\n        return this.aliveObjects;\n    }\n\n    clearAlives()\n    {\n        for (var i = 0; i< this.aliveObjects.length;)\n        {\n            let obj = this.aliveObjects[i]\n            obj.removeFromParent()\n        }\n    }\n\n    getPool(type):cc.NodePool\n    {\n        if(typeof(type) != \"string\" || typeof(type)!= \"number\" )\n        {\n            type = type._uuid || type.name;\n        }\n        let pool = this.nodePool[type];\n        if(pool == null)\n        {\n            pool = new cc.NodePool();\n            this.nodePool[type] = pool;\n        }\n        return pool;\n    }\n\n    get(type):cc.Node\n    {\n        let node =  this.getPool(type).get();\n        if(this.onCreateObject)\n        {\n            if(node == null)\n            {\n                node = this.onCreateObject.call(this.target,type)\n                if(this.root)\n                    node.setParent(this.root);\n                if(!node )\n                    console.warn(node,\"onCreateObject must return an object\")\n                if(this.managed)\n                    this.aliveObjects.push(node);\n                this.nodes[node.uuid] = type;\n                return node;\n            }\n        }\n        if(this.root)\n            node.setParent(this.root);\n        if(this.managed)\n            this.aliveObjects.push(node);\n        return node;\n    }\n\n    tag(node,type)\n    {\n        this.nodes[node.uuid] = type;\n    }\n\n    put(node:cc.Node,type = null)\n    {\n        if(type == null)\n            type = this.nodes[node.uuid];\n        this.getPool(type).put(node);\n        if(this.managed)\n            this.aliveObjects.splice(this.aliveObjects.indexOf(node),1);\n    }\n\n    clear(type?)\n    {\n        if(this.managed)\n            this.aliveObjects.splice(0,this.aliveObjects.length);\n        if(type)\n            this.getPool(type).clear();\n        else\n        {\n            for (var t in this.nodePool)\n            {\n                let pool = this.nodePool[t]\n                pool.clear();\n            }\n        }\n    }\n\n    size(type)\n    {\n        return this.getPool(type).size();\n    }\n}"]}