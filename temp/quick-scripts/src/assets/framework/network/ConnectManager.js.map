{"version":3,"sources":["assets\\framework\\network\\ConnectManager.ts"],"names":[],"mappings":";;;;;;AAAA,mCAAkC;AAIlC;IAaC;QAFQ,cAAS,GAA6B,IAAI,CAAC;QAGlD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACrB,CAAC;IAZa,0BAAW,GAAzB;QACC,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,cAAc,EAAE,CAAC;SACtC;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IASM,+BAAM,GAAb,UAAc,IAAY,EAAE,IAAS;QACpC,IAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,EAAC;YAC/B,IAAI,MAAM,GAAG,IAAI,eAAM,CAAC,IAAI,CAAC,CAAC;YAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;YAC9B,IAAG,IAAI,CAAC,WAAW,IAAI,IAAI;gBAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;IACF,CAAC;IAEM,sCAAa,GAApB,UAAqB,GAAW;QAC/B,IAAG,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;SACvB;IACF,CAAC;IAEM,mCAAU,GAAjB;QACC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAEM,gCAAO,GAAd,UAAe,IAAY;QAC1B,IAAG,IAAI,IAAI,IAAI;YAAE,OAAO,IAAI,CAAC;QAC7B,IAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,EAAC;YAC/B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC5B;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,oCAAW,GAAlB,UAAmB,GAAY,EAAE,IAAa;QAC7C,IAAG,IAAI,IAAI,IAAI;YAAE,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QACzC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAG,IAAI,IAAI,IAAI,EAAC;YACf,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;SACtB;IACF,CAAC;IAEM,wCAAe,GAAtB,UAAuB,IAAY;QAClC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAEM,0CAAiB,GAAxB,UAAyB,GAAY;QACpC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,IAAI,IAAI,IAAI;YAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAEM,+BAAM,GAAb,UAAc,IAAY;QACzB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAG,IAAI,IAAI,IAAI,EAAC;YACf,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,KAAK,EAAE,CAAC;SACb;IACF,CAAC;IAlEc,wBAAS,GAAmB,IAAI,CAAC;IAoEjD,qBAAC;CAtED,AAsEC,IAAA;AAEU,QAAA,WAAW,GAAmB,cAAc,CAAC,WAAW,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import { Socket } from \"./Socket\";\nimport { Message } from \"./Message\";\n\n\nclass ConnectManager {\n\t\n\tprivate static _instance: ConnectManager = null;\n\tpublic static getInstance(): ConnectManager{\n\t\tif(this._instance == null){\n\t\t\tthis._instance = new ConnectManager();\n\t\t}\n\t\treturn this._instance;\n\t}\n\t\n\tprivate _defaultKey: string;\n\tprivate _allConns: { [name:string]: Socket} = null;\n\n\tpublic constructor(){\n\t\tthis._allConns = {};\n\t}\n\n\tpublic create(name: string, conf: any){\n\t\tif(this._allConns[name] == null){\n\t\t\tlet socket = new Socket(conf);\n\t\t\tthis._allConns[name] = socket;\n\t\t\tif(this._defaultKey == null)\n\t\t\t\tthis._defaultKey = name;\n\t\t}\n\t}\n\n\tpublic setDefaultKey(key: string){\n\t\tif(key != null && this._allConns[key]) {\n\t\t\tthis._defaultKey = key;\n\t\t}\n\t}\n\n\tpublic getDefault() {\n\t\treturn this.getConn(this._defaultKey);\n\t}\n\n\tpublic getConn(name: string){\n\t\tif(name == null) return null;\n\t\tif(this._allConns[name] != null){\n\t\t\treturn this._allConns[name];\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic sendMessage(msg: Message, name?: string){\n\t\tif(name == null) name = this._defaultKey;\n\t\tlet conn = this.getConn(name);\n\t\tif(conn != null){\n\t\t\tconn.sendMessage(msg);\n\t\t}\n\t}\n\n\tpublic enableHeartbeat(name: string) {\n\t\tlet conn = this.getConn(name);\n\t\tconn.enableHeartbeat(true);\n\t}\n\n\tpublic sendCustomMessage(msg: Message){\n\t\tlet conn = this.getConn(this._defaultKey);\n\t\tif (conn != null) conn.sendCustomMessage(msg);\n\t}\n\n\tpublic remove(name: string){\n\t\tlet conn = this.getConn(name);\n\t\tif(conn != null){\n\t\t\tdelete this._allConns[name];\n\t\t\tconn.close();\n\t\t}\n\t}\n\t\n}\n\nexport var connManager: ConnectManager = ConnectManager.getInstance();"]}