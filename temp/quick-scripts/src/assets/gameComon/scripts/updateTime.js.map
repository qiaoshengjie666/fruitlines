{"version":3,"sources":["assets\\gameComon\\scripts\\updateTime.js"],"names":["countDownInterval","cc","Class","Component","properties","clockNode","Node","onLoad","appGame","gameServerRoom","on","updateTime","getComponent","ProgressBar","progress","_count","onDestroy","off","clearInterval","start","type","count","totalcount","durationtime","setInterval","emit","bind"],"mappings":";;;;;;AAAA,IAAIA,iBAAJ;AACAC,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,SAAS,EAACJ,EAAE,CAACK;AADL,GAHP;AAOL;AAEAC,EAAAA,MATK,oBASK;AACN;AACAC,IAAAA,OAAO,CAACC,cAAR,CAAuBC,EAAvB,CAA0B,uBAA1B,EAAmD,KAAKC,UAAxD,EAAmE,IAAnE;AACA,SAAKN,SAAL,CAAeO,YAAf,CAA4BX,EAAE,CAACY,WAA/B,EAA4CC,QAA5C,GAAuD,CAAvD;AACA,SAAKC,MAAL,GAAc,CAAd;AACH,GAdI;AAgBLC,EAAAA,SAhBK,uBAgBQ;AACV;AACAR,IAAAA,OAAO,CAACC,cAAR,CAAuBQ,GAAvB,CAA2B,uBAA3B,EAAoD,KAAKN,UAAzD,EAAoE,IAApE;AACAO,IAAAA,aAAa,CAAClB,iBAAD,CAAb;AACF,GApBI;AAsBLmB,EAAAA,KAtBK,mBAsBI,CAER,CAxBI;AA0BLR,EAAAA,UA1BK,sBA0BMS,IA1BN,EA0BWC,KA1BX,EA0BiBC,UA1BjB,EA0B4B;AAC7B,QAAGF,IAAI,IAAE,CAAT,EAAW;AAAC;AACRC,MAAAA,KAAK,GAAGA,KAAK,GAAC,IAAd;AACAC,MAAAA,UAAU,GAAGA,UAAU,GAAC,IAAxB;AACA,UAAIC,YAAY,GAAG,GAAnB;AACA,WAAKR,MAAL,GAAcM,KAAd;;AACA,UAAG,KAAKhB,SAAR,EAAkB;AACd,aAAKA,SAAL,CAAeO,YAAf,CAA4BX,EAAE,CAACY,WAA/B,EAA4CC,QAA5C,GAAuD,KAAKC,MAAL,GAAYO,UAAnE;AACH;;AACDJ,MAAAA,aAAa,CAAClB,iBAAD,CAAb;AACAA,MAAAA,iBAAiB,GAAGwB,WAAW,CAAC,YAAW;AACvC,YAAG,KAAKT,MAAL,GAAYQ,YAAf,EAA4B;AACxB,eAAKR,MAAL,IAAaQ,YAAb;AACH,SAFD,MAEK;AACD,eAAKR,MAAL,GAAc,CAAd;AACAP,UAAAA,OAAO,CAACC,cAAR,CAAuBgB,IAAvB,CAA4B,qBAA5B,EAAmD,CAAnD;AACAP,UAAAA,aAAa,CAAClB,iBAAD,CAAb;AACH;;AACD,YAAG,KAAKK,SAAR,EAAkB;AACd,eAAKA,SAAL,CAAeO,YAAf,CAA4BX,EAAE,CAACY,WAA/B,EAA4CC,QAA5C,GAAuD,KAAKC,MAAL,GAAYO,UAAnE;AACH;AACJ,OAX+B,CAW9BI,IAX8B,CAWzB,IAXyB,CAAD,EAWjBH,YAXiB,CAA/B;AAYH,KArBD,MAqBK;AAAC;AACFL,MAAAA,aAAa,CAAClB,iBAAD,CAAb;AACH;AACJ,GAnDI,CAqDL;;AArDK,CAAT","sourceRoot":"/","sourcesContent":["var countDownInterval;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        clockNode:cc.Node\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        //注册监听事件\r\n        appGame.gameServerRoom.on(\"updateCompetitionTime\", this.updateTime,this);\r\n        this.clockNode.getComponent(cc.ProgressBar).progress = 1;\r\n        this._count = 0;\r\n    },\r\n\r\n    onDestroy () {\r\n       //删除监听事件\r\n       appGame.gameServerRoom.off(\"updateCompetitionTime\", this.updateTime,this);\r\n       clearInterval(countDownInterval);\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    updateTime(type,count,totalcount){\r\n        if(type==1){//开始倒计时\r\n            count = count*1000;\r\n            totalcount = totalcount*1000;\r\n            let durationtime = 100;\r\n            this._count = count;\r\n            if(this.clockNode){\r\n                this.clockNode.getComponent(cc.ProgressBar).progress = this._count/totalcount;\r\n            }\r\n            clearInterval(countDownInterval);\r\n            countDownInterval = setInterval(function() {\r\n                if(this._count>durationtime){\r\n                    this._count-=durationtime;\r\n                }else{\r\n                    this._count = 0;\r\n                    appGame.gameServerRoom.emit(\"competitionGameOver\", 2);\r\n                    clearInterval(countDownInterval);\r\n                }\r\n                if(this.clockNode){\r\n                    this.clockNode.getComponent(cc.ProgressBar).progress = this._count/totalcount;\r\n                }\r\n            }.bind(this), durationtime);\r\n        }else{//关闭倒计时\r\n            clearInterval(countDownInterval);\r\n        }\r\n    }\r\n\r\n    // update (dt) {},\r\n});\r\n"]}