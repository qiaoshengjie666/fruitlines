{"version":3,"sources":["assets\\Game\\Scripts\\hex-lines-game\\Animal.ts"],"names":[],"mappings":";;;;;AAEM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAoC,0BAAY;IAAhD;QAAA,qEA6CC;QA1CG,YAAM,GAAa,IAAI,CAAC;QAGxB,eAAS,GAAgB,IAAI,CAAC;;IAuClC,CAAC;IArCG,uBAAM,GAAN;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAA;IACrD,CAAC;IAED,yBAAQ,GAAR,UAAS,CAAC,EAAC,CAAmB;QAE1B,IAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,aAAa,EAC/B;YACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;SACrC;IACL,CAAC;IAED,sBAAK,GAAL;QACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACvC,CAAC;IAED,0BAAS,GAAT;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/C,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC;IACxC,CAAC;IAED,0BAAS,GAAT;QAEI,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;QAC9C,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;IACtC,CAAC;IAED,yBAAQ,GAAR,UAAS,CAAC;QAEN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA;IAC5D,CAAC;IAED,4BAAW,GAAX,UAAa,GAAU,EAAC,GAAU;QAE9B,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IAC7C,CAAC;IAAA,CAAC;IAzCF;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;0CACI;IAHP,MAAM;QAD1B,OAAO;OACa,MAAM,CA6C1B;IAAD,aAAC;CA7CD,AA6CC,CA7CmC,EAAE,CAAC,SAAS,GA6C/C;kBA7CoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["import { R } from \"./Res\";\nimport G from\"../g - 001\";\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Animal extends cc.Component {\n\n    @property(cc.Sprite)\n    sprite:cc.Sprite = null;\n\n\n    animation:cc.Animation = null;\n    \n    onLoad () {\n        this.animation = this.getComponentInChildren(cc.Animation);\n        this.animation.on(\"finished\", this.onFinish,this)\n    }\n\n    onFinish(s,a:cc.AnimationState)\n    {\n        if(a.clip.name == \"animal_jump\")\n        {\n            this.animation.play(\"animal_idle\")\n        }\n    }\n\n    start () {\n        this.animation.play(\"animal_idle\");\n    }\n\n    connected() {\n        let state = this.animation.play(\"animal_jump\");\n        state.wrapMode = cc.WrapMode.Normal;\n    }\n\n    _loopJump()\n    {\n        let state = this.animation.play(\"animal_jump\")\n        state.wrapMode = cc.WrapMode.Loop;\n    }\n\n    loopJump(d)\n    {\n        this.scheduleOnce(this._loopJump, this.randomFloat(0,d))\n    }\n\n    randomFloat (min:number,max:number)\n    {\n        return Math.random() * (max - min) + min;\n    };\n}"]}