
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__qc_index__.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
require('./assets/Game/Scripts/Info');
require('./assets/Game/Scripts/Main');
require('./assets/Game/Scripts/g - 001');
require('./assets/Game/Scripts/hex-lines-game/Animal');
require('./assets/Game/Scripts/hex-lines-game/Consts');
require('./assets/Game/Scripts/hex-lines-game/Game');
require('./assets/Game/Scripts/hex-lines-game/GridManager');
require('./assets/Game/Scripts/hex-lines-game/HexonTile');
require('./assets/Game/Scripts/hex-lines-game/Res');
require('./assets/Game/Scripts/hex-lines-game/base/com');
require('./assets/Game/Scripts/hex-lines-game/ds/IntMap');
require('./assets/Game/Scripts/ui/DCBackground');
require('./assets/Game/Scripts/ui/DCParticleSystem');
require('./assets/Game/Scripts/ui/DailyGetDialog');
require('./assets/Game/Scripts/ui/GetDialog');
require('./assets/Game/Scripts/ui/HbDialog');
require('./assets/Game/Scripts/ui/LevelDialog');
require('./assets/Game/Scripts/ui/LevelupDialog');
require('./assets/Game/Scripts/ui/LuckyDialog');
require('./assets/Game/Scripts/ui/PauseDialog');
require('./assets/Game/Scripts/ui/ShopDialog');
require('./assets/Game/Scripts/ui/ShopItemTemplate');
require('./assets/Game/Scripts/ui/WinDialog');
require('./assets/framework/network/ConnectManager');
require('./assets/framework/network/Message');
require('./assets/framework/network/MessageBase');
require('./assets/framework/network/MessageDispatch');
require('./assets/framework/network/MessageHandler');
require('./assets/framework/network/MessageType');
require('./assets/framework/network/Socket');
require('./assets/framework/plugin_boosts/gamesys/Device');
require('./assets/framework/plugin_boosts/gamesys/FSM');
require('./assets/framework/plugin_boosts/gamesys/InfiniteBackground');
require('./assets/framework/plugin_boosts/gamesys/LocalLifeSystem');
require('./assets/framework/plugin_boosts/gamesys/LocalTimeSystem');
require('./assets/framework/plugin_boosts/gamesys/PoolManager');
require('./assets/framework/plugin_boosts/gamesys/PsFx');
require('./assets/framework/plugin_boosts/gamesys/PsFxPlayer');
require('./assets/framework/plugin_boosts/gamesys/PsSpawner');
require('./assets/framework/plugin_boosts/libs/easing');
require('./assets/framework/plugin_boosts/misc/BoostsAction');
require('./assets/framework/plugin_boosts/misc/ClickAudio');
require('./assets/framework/plugin_boosts/misc/ClickAudioManager');
require('./assets/framework/plugin_boosts/misc/DataCenter');
require('./assets/framework/plugin_boosts/misc/FrameSwitch');
require('./assets/framework/plugin_boosts/misc/InputSystem');
require('./assets/framework/plugin_boosts/misc/JoyStick');
require('./assets/framework/plugin_boosts/misc/Net');
require('./assets/framework/plugin_boosts/misc/Signal');
require('./assets/framework/plugin_boosts/misc/SpriteFrameCache');
require('./assets/framework/plugin_boosts/ui/DCLabel');
require('./assets/framework/plugin_boosts/ui/DCPandoraPoint');
require('./assets/framework/plugin_boosts/ui/DCSprite');
require('./assets/framework/plugin_boosts/ui/DCToggle');
require('./assets/framework/plugin_boosts/ui/DCUI');
require('./assets/framework/plugin_boosts/ui/LoadingManager');
require('./assets/framework/plugin_boosts/ui/MessageBoxComponent');
require('./assets/framework/plugin_boosts/ui/MessageBoxManager');
require('./assets/framework/plugin_boosts/ui/PandoraPoint');
require('./assets/framework/plugin_boosts/ui/ToastComponent');
require('./assets/framework/plugin_boosts/ui/ToastManager');
require('./assets/framework/plugin_boosts/ui/UIComponent');
require('./assets/framework/plugin_boosts/ui/UIFunctions');
require('./assets/framework/plugin_boosts/ui/View');
require('./assets/framework/plugin_boosts/ui/ViewManager');
require('./assets/framework/plugin_boosts/ui/game/LevelSelector');
require('./assets/framework/plugin_boosts/utils/Common');
require('./assets/framework/plugin_boosts/utils/EventManager');
require('./assets/framework/plugin_boosts/utils/Intersection');
require('./assets/gameComon/lucky/lucky');
require('./assets/gameComon/result/result');
require('./assets/gameComon/result/revive');
require('./assets/gameComon/screenRecord/screenShareAuto');
require('./assets/gameComon/screenRecord/screenrecordAuto');
require('./assets/gameComon/screenRecord/screenrecordHand');
require('./assets/gameComon/scripts/ad/banner');
require('./assets/gameComon/scripts/ad/interstitialAd');
require('./assets/gameComon/scripts/ad/nativeAd');
require('./assets/gameComon/scripts/ad/qqAppBox');
require('./assets/gameComon/scripts/ad/qqBlockAd');
require('./assets/gameComon/scripts/ad/videoBanner');
require('./assets/gameComon/scripts/ad/wxgridAd');
require('./assets/gameComon/scripts/ad/wxnativeAd');
require('./assets/gameComon/scripts/audio/audioMgr');
require('./assets/gameComon/scripts/changeGame');
require('./assets/gameComon/scripts/dialogBox');
require('./assets/gameComon/scripts/gameSceneManager');
require('./assets/gameComon/scripts/horn');
require('./assets/gameComon/scripts/item');
require('./assets/gameComon/scripts/loadTip');
require('./assets/gameComon/scripts/model/androidHelper');
require('./assets/gameComon/scripts/model/appGame');
require('./assets/gameComon/scripts/model/async');
require('./assets/gameComon/scripts/model/consts');
require('./assets/gameComon/scripts/model/emitter');
require('./assets/gameComon/scripts/model/httpUtils');
require('./assets/gameComon/scripts/model/underscore');
require('./assets/gameComon/scripts/model/util');
require('./assets/gameComon/scripts/platformFun');
require('./assets/gameComon/scripts/room');
require('./assets/gameComon/scripts/roomGame');
require('./assets/gameComon/scripts/updateTime');
require('./assets/gameComon/sign/sign');
require('./assets/migration/use_v2.0.x_cc.Toggle_event');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/libs/easing.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e6742QWT6FGKZZTNPiWFV4s', 'easing');
// framework/plugin_boosts/libs/easing.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.easeInOutBounce = exports.easeOutBounce = exports.easeInBounce = exports.easeInOutBack = exports.easeOutBack = exports.easeInBack = exports.easeInOutElastic = exports.easeOutElastic = exports.easeInElastic = exports.easeInOutCirc = exports.easeOutCirc = exports.easeInCirc = exports.easeInOutExpo = exports.easeOutExpo = exports.easeInExpo = exports.easeInOutSine = exports.easeOutSine = exports.easeInSine = exports.easeInOutQuint = exports.easeOutQuint = exports.easeInQuint = exports.easeInOutQuart = exports.easeOutQuart = exports.easeInQuart = exports.easeInOutCubic = exports.easeOutCubic = exports.easeInCubic = exports.easeInOutQuad = exports.easeOutQuad = exports.easeInQuad = exports.linear = void 0;
function linear(t, b, c, d) {
    return c * t / d + b;
}
exports.linear = linear;
function easeInQuad(elapsed, initialValue, amountOfChange, duration) {
    return amountOfChange * (elapsed /= duration) * elapsed + initialValue;
}
exports.easeInQuad = easeInQuad;
function easeOutQuad(elapsed, initialValue, amountOfChange, duration) {
    return -amountOfChange * (elapsed /= duration) * (elapsed - 2) + initialValue;
}
exports.easeOutQuad = easeOutQuad;
function easeInOutQuad(elapsed, initialValue, amountOfChange, duration) {
    if ((elapsed /= duration / 2) < 1) {
        return amountOfChange / 2 * elapsed * elapsed + initialValue;
    }
    return -amountOfChange / 2 * (--elapsed * (elapsed - 2) - 1) + initialValue;
}
exports.easeInOutQuad = easeInOutQuad;
function easeInCubic(elapsed, initialValue, amountOfChange, duration) {
    return amountOfChange * (elapsed /= duration) * elapsed * elapsed + initialValue;
}
exports.easeInCubic = easeInCubic;
function easeOutCubic(elapsed, initialValue, amountOfChange, duration) {
    return amountOfChange * ((elapsed = elapsed / duration - 1) * elapsed * elapsed + 1) + initialValue;
}
exports.easeOutCubic = easeOutCubic;
function easeInOutCubic(elapsed, initialValue, amountOfChange, duration) {
    if ((elapsed /= duration / 2) < 1) {
        return amountOfChange / 2 * elapsed * elapsed * elapsed + initialValue;
    }
    return amountOfChange / 2 * ((elapsed -= 2) * elapsed * elapsed + 2) + initialValue;
}
exports.easeInOutCubic = easeInOutCubic;
function easeInQuart(elapsed, initialValue, amountOfChange, duration) {
    return amountOfChange * (elapsed /= duration) * elapsed * elapsed * elapsed + initialValue;
}
exports.easeInQuart = easeInQuart;
function easeOutQuart(elapsed, initialValue, amountOfChange, duration) {
    return -amountOfChange * ((elapsed = elapsed / duration - 1) * elapsed * elapsed * elapsed - 1) + initialValue;
}
exports.easeOutQuart = easeOutQuart;
function easeInOutQuart(elapsed, initialValue, amountOfChange, duration) {
    if ((elapsed /= duration / 2) < 1) {
        return amountOfChange / 2 * elapsed * elapsed * elapsed * elapsed + initialValue;
    }
    return -amountOfChange / 2 * ((elapsed -= 2) * elapsed * elapsed * elapsed - 2) + initialValue;
}
exports.easeInOutQuart = easeInOutQuart;
function easeInQuint(elapsed, initialValue, amountOfChange, duration) {
    return amountOfChange * (elapsed /= duration) * elapsed * elapsed * elapsed * elapsed + initialValue;
}
exports.easeInQuint = easeInQuint;
function easeOutQuint(elapsed, initialValue, amountOfChange, duration) {
    return amountOfChange * ((elapsed = elapsed / duration - 1) * elapsed * elapsed * elapsed * elapsed + 1) + initialValue;
}
exports.easeOutQuint = easeOutQuint;
function easeInOutQuint(elapsed, initialValue, amountOfChange, duration) {
    if ((elapsed /= duration / 2) < 1) {
        return amountOfChange / 2 * elapsed * elapsed * elapsed * elapsed * elapsed + initialValue;
    }
    return amountOfChange / 2 * ((elapsed -= 2) * elapsed * elapsed * elapsed * elapsed + 2) + initialValue;
}
exports.easeInOutQuint = easeInOutQuint;
function easeInSine(elapsed, initialValue, amountOfChange, duration) {
    return -amountOfChange * Math.cos(elapsed / duration * (Math.PI / 2)) + amountOfChange + initialValue;
}
exports.easeInSine = easeInSine;
function easeOutSine(elapsed, initialValue, amountOfChange, duration) {
    return amountOfChange * Math.sin(elapsed / duration * (Math.PI / 2)) + initialValue;
}
exports.easeOutSine = easeOutSine;
function easeInOutSine(elapsed, initialValue, amountOfChange, duration) {
    return -amountOfChange / 2 * (Math.cos(Math.PI * elapsed / duration) - 1) + initialValue;
}
exports.easeInOutSine = easeInOutSine;
function easeInExpo(elapsed, initialValue, amountOfChange, duration) {
    return elapsed === 0 ? initialValue : amountOfChange * Math.pow(2, 10 * (elapsed / duration - 1)) + initialValue;
}
exports.easeInExpo = easeInExpo;
function easeOutExpo(elapsed, initialValue, amountOfChange, duration) {
    return elapsed === duration
        ? initialValue + amountOfChange
        : amountOfChange * (-Math.pow(2, -10 * elapsed / duration) + 1) + initialValue;
}
exports.easeOutExpo = easeOutExpo;
function easeInOutExpo(elapsed, initialValue, amountOfChange, duration) {
    if (elapsed === 0) {
        return initialValue;
    }
    if (elapsed === duration) {
        return initialValue + amountOfChange;
    }
    if ((elapsed /= duration / 2) < 1) {
        return amountOfChange / 2 * Math.pow(2, 10 * (elapsed - 1)) + initialValue;
    }
    return amountOfChange / 2 * (-Math.pow(2, -10 * --elapsed) + 2) + initialValue;
}
exports.easeInOutExpo = easeInOutExpo;
function easeInCirc(elapsed, initialValue, amountOfChange, duration) {
    return -amountOfChange * (Math.sqrt(1 - (elapsed /= duration) * elapsed) - 1) + initialValue;
}
exports.easeInCirc = easeInCirc;
function easeOutCirc(elapsed, initialValue, amountOfChange, duration) {
    return amountOfChange * Math.sqrt(1 - (elapsed = elapsed / duration - 1) * elapsed) + initialValue;
}
exports.easeOutCirc = easeOutCirc;
function easeInOutCirc(elapsed, initialValue, amountOfChange, duration) {
    if ((elapsed /= duration / 2) < 1) {
        return -amountOfChange / 2 * (Math.sqrt(1 - elapsed * elapsed) - 1) + initialValue;
    }
    return amountOfChange / 2 * (Math.sqrt(1 - (elapsed -= 2) * elapsed) + 1) + initialValue;
}
exports.easeInOutCirc = easeInOutCirc;
function easeInElastic(elapsed, initialValue, amountOfChange, duration) {
    var s = 1.70158;
    var p = 0;
    var a = amountOfChange;
    if (elapsed === 0) {
        return initialValue;
    }
    if ((elapsed /= duration) === 1) {
        return initialValue + amountOfChange;
    }
    if (!p) {
        p = duration * 0.3;
    }
    if (a < Math.abs(amountOfChange)) {
        a = amountOfChange;
        s = p / 4;
    }
    else {
        s = p / (2 * Math.PI) * Math.asin(amountOfChange / a);
    }
    return -(a * Math.pow(2, 10 * (elapsed -= 1)) * Math.sin((elapsed * duration - s) * (2 * Math.PI) / p)) + initialValue;
}
exports.easeInElastic = easeInElastic;
function easeOutElastic(elapsed, initialValue, amountOfChange, duration) {
    var s = 1.70158;
    var p = 0;
    var a = amountOfChange;
    if (elapsed === 0) {
        return initialValue;
    }
    if ((elapsed /= duration) === 1) {
        return initialValue + amountOfChange;
    }
    if (!p) {
        p = duration * 0.3;
    }
    if (a < Math.abs(amountOfChange)) {
        a = amountOfChange;
        s = p / 4;
    }
    else {
        s = p / (2 * Math.PI) * Math.asin(amountOfChange / a);
    }
    return a * Math.pow(2, -10 * elapsed) * Math.sin((elapsed * duration - s) * (2 * Math.PI) / p) + amountOfChange + initialValue;
}
exports.easeOutElastic = easeOutElastic;
function easeInOutElastic(elapsed, initialValue, amountOfChange, duration) {
    var s = 1.70158;
    var p = 0;
    var a = amountOfChange;
    if (elapsed === 0) {
        return initialValue;
    }
    if ((elapsed /= duration / 2) === 2) {
        return initialValue + amountOfChange;
    }
    if (!p) {
        p = duration * (0.3 * 1.5);
    }
    if (a < Math.abs(amountOfChange)) {
        a = amountOfChange;
        s = p / 4;
    }
    else {
        s = p / (2 * Math.PI) * Math.asin(amountOfChange / a);
    }
    if (elapsed < 1) {
        return -0.5 * (a * Math.pow(2, 10 * (elapsed -= 1)) * Math.sin((elapsed * duration - s) * (2 * Math.PI) / p)) + initialValue;
    }
    return (a * Math.pow(2, -10 * (elapsed -= 1)) * Math.sin((elapsed * duration - s) * (2 * Math.PI) / p) * 0.5 + amountOfChange + initialValue);
}
exports.easeInOutElastic = easeInOutElastic;
function easeInBack(elapsed, initialValue, amountOfChange, duration, s) {
    if (s === void 0) { s = 1.70158; }
    return amountOfChange * (elapsed /= duration) * elapsed * ((s + 1) * elapsed - s) + initialValue;
}
exports.easeInBack = easeInBack;
function easeOutBack(elapsed, initialValue, amountOfChange, duration, s) {
    if (s === void 0) { s = 1.70158; }
    return amountOfChange * ((elapsed = elapsed / duration - 1) * elapsed * ((s + 1) * elapsed + s) + 1) + initialValue;
}
exports.easeOutBack = easeOutBack;
function easeInOutBack(elapsed, initialValue, amountOfChange, duration, s) {
    if (s === void 0) { s = 1.70158; }
    if ((elapsed /= duration / 2) < 1) {
        return amountOfChange / 2 * (elapsed * elapsed * (((s *= 1.525) + 1) * elapsed - s)) + initialValue;
    }
    return amountOfChange / 2 * ((elapsed -= 2) * elapsed * (((s *= 1.525) + 1) * elapsed + s) + 2) + initialValue;
}
exports.easeInOutBack = easeInOutBack;
function easeInBounce(elapsed, initialValue, amountOfChange, duration) {
    return amountOfChange - easeOutBounce(duration - elapsed, 0, amountOfChange, duration) + initialValue;
}
exports.easeInBounce = easeInBounce;
function easeOutBounce(elapsed, initialValue, amountOfChange, duration) {
    if ((elapsed /= duration) < 1 / 2.75) {
        return amountOfChange * (7.5625 * elapsed * elapsed) + initialValue;
    }
    else if (elapsed < 2 / 2.75) {
        return amountOfChange * (7.5625 * (elapsed -= 1.5 / 2.75) * elapsed + 0.75) + initialValue;
    }
    else if (elapsed < 2.5 / 2.75) {
        return amountOfChange * (7.5625 * (elapsed -= 2.25 / 2.75) * elapsed + 0.9375) + initialValue;
    }
    else {
        return amountOfChange * (7.5625 * (elapsed -= 2.625 / 2.75) * elapsed + 0.984375) + initialValue;
    }
}
exports.easeOutBounce = easeOutBounce;
function easeInOutBounce(elapsed, initialValue, amountOfChange, duration) {
    if (elapsed < duration / 2) {
        return easeInBounce(elapsed * 2, 0, amountOfChange, duration) * 0.5 + initialValue;
    }
    return easeOutBounce(elapsed * 2 - duration, 0, amountOfChange, duration) * 0.5 + amountOfChange * 0.5 + initialValue;
}
exports.easeInOutBounce = easeInOutBounce;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/ViewManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c0f79TopoBICobmtQjrjutG', 'ViewManager');
// framework/plugin_boosts/ui/ViewManager.ts

Object.defineProperty(exports, "__esModule", { value: true });
var View_1 = require("./View");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var TAG = "[ViewManager]";
var ViewManager = /** @class */ (function (_super) {
    __extends(ViewManager, _super);
    function ViewManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // onLoad () {}
        // baseDir:string = "assets/"
        _this._views = {};
        // 
        _this.modal = null;
        _this.modalOpacity = 160;
        return _this;
        // update (dt) {}
    }
    ViewManager_1 = ViewManager;
    ViewManager.prototype.onLoad = function () {
        ViewManager_1.instance = this;
        this.modal.active = false;
        this.modal.zIndex = 999;
        //g.setGlobalInstance(this);
        // cc.game.addPersistRootNode(this.node);
        // this.node.getComponent(cc.Widget).target = cc.find("Canvas")
    };
    ViewManager.prototype.onEnable = function () {
    };
    ViewManager.prototype.onDestroy = function () {
        // cc.game.removePersistRootNode(this.node);
        for (var key in this._views) {
            delete this._views[key];
        }
    };
    ViewManager.prototype.start = function () {
        //load prefab
        // this.modal.active = false;
        // this.sprite = this.getComponent(cc.Sprite)
        // this.modal.zIndex = 999;
    };
    ViewManager.prototype.getVisibleDialog = function () {
        for (var name in this._views) {
            var view = this._views[name];
            if (view.isDialog) {
                if (this.isVisible(name)) {
                    return view;
                }
            }
        }
        return null;
    };
    ViewManager.prototype.hasVisibleDialog = function () {
        for (var name in this._views) {
            var view = this._views[name];
            if (view.isDialog) {
                if (this.isVisible(name)) {
                    return true;
                }
            }
        }
        return false;
    };
    ViewManager.prototype.isVisible = function (viewname) {
        var view = null;
        if (typeof (viewname) == "string")
            view = this._views[viewname];
        else
            view = viewname;
        //todo check type 
        if (view) {
            return view.node.active;
        }
        return false;
    };
    ViewManager.prototype.attachViewComp = function (existingView) {
        var viewComp = null;
        if (viewComp == null || viewComp == undefined) {
            viewComp = existingView.getComponent(View_1.default);
            if (viewComp == null) {
                viewComp = existingView.addComponent(View_1.default);
                viewComp.init(existingView.name);
            }
            this._views[existingView.name] = viewComp;
        }
        return viewComp;
    };
    ViewManager.prototype.showView = function (view) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        this.modal.active = view.isDialog;
        //check has popuped dialog and  all currentview is dialog show modal forcely.
        if (this.hasVisibleDialog() || view.isDialog) {
            this.modal.active = true;
        }
        if (view.isDialog) {
            this.modal.opacity = view.opacity;
        }
        return view.show.apply(view, params);
    };
    ViewManager.prototype.showFromPrefab = function (prefab, prefabPath) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        var view = this._views[prefabPath];
        if (view == null) {
            var node = cc.instantiate(prefab);
            view = node.getComponent(View_1.default);
            if (view == null) {
                view = node.addComponent(View_1.default);
                view.isDialog = true;
                //default is dialog
            }
            var widget = view.getComponent(cc.Widget);
            if (widget)
                widget.target = cc.find("Canvas");
            view.init(prefabPath);
            this._views[prefabPath] = view;
            if (view.isDialog) {
                this.node.addChild(node, 1000);
            }
            else {
                this.node.addChild(node, 1000);
            }
            // g.foreachNode(view.node,this.updateWidgets,this)
        }
        // node = view.node;
        this.node.color.setA(255);
        console.log(TAG, "show view:" + prefabPath);
        return this.showView.apply(this, __spreadArrays([view], params));
    };
    ViewManager.prototype.showFromPrefabPath = function (prefabPath) {
        var _this = this;
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        var view = this._views[prefabPath];
        if (view == null || view == undefined) {
            console.log("start load prefab:" + prefabPath);
            var beforeTime_1 = new Date().getTime();
            cc.loader.loadRes(prefabPath, cc.Prefab, function (e, prefab) {
                console.log(TAG, "prefab loaded : " + prefabPath + " " + (new Date().getTime() - beforeTime_1) + "ms");
                _this.showFromPrefab.apply(_this, __spreadArrays([prefab, prefabPath], params));
            });
        }
        else {
            // this.sprite.enabled = false;
            this.modal.active = view.isDialog;
            if (this.hasVisibleDialog() || view.isDialog) {
                this.modal.active = true;
                this.modal.opacity = view.opacity;
            }
            console.log(TAG, "show view:" + prefabPath, params);
            // let viewnode = view.node;
            // view.node.x = 0;
            // view.node.y = 0;
            return view.show.apply(view, params);
        }
    };
    ViewManager.prototype.preload = function (prefabPath) {
        var _this = this;
        var view = this._views[prefabPath];
        if (view == null || view == undefined) {
            cc.loader.loadRes(prefabPath, cc.Prefab, function (e, prefab) {
                console.log(TAG, "preload view" + prefabPath);
                var node = cc.instantiate(prefab);
                view = node.getComponent(View_1.default);
                var widget = view.getComponent(cc.Widget);
                if (widget)
                    widget.target = cc.find("Canvas");
                view.init(prefabPath);
                _this._views[prefabPath] = view;
                // this.scheduleOnce(_=>node.active = false,0);
                if (view.isDialog) {
                    _this.node.addChild(node, 1000);
                }
                else {
                    _this.node.addChild(node, 1000);
                }
                view.hide();
            });
        }
        else {
        }
    };
    // will enableTouch next show up
    ViewManager.prototype.disableTouch = function (viewNode) {
        var view = viewNode.getComponent(View_1.default);
        if (view) {
            view.touchEnabled = false;
        }
    };
    ViewManager.prototype.enableTouch = function (viewNode) {
        var view = viewNode.getComponent(View_1.default);
        if (view) {
            view.touchEnabled = true;
        }
    };
    ViewManager.prototype.show = function (view) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        // disable current view 's touch  
        if (typeof (view) == "string") {
            return this.showFromPrefabPath.apply(this, __spreadArrays([view], params));
        }
        else {
            if (view == null || view == undefined)
                return;
            if (view.node)
                view = view.node;
            var v = this.attachViewComp(view);
            return this.showView.apply(this, __spreadArrays([v], params));
        }
    };
    ViewManager.prototype.hide = function (viewname, playHideAnim) {
        if (playHideAnim === void 0) { playHideAnim = true; }
        if (typeof (viewname) != "string") {
            // get view name 
            if (viewname == null || viewname == undefined)
                return;
            this.attachViewComp(viewname);
            viewname = viewname.name;
        }
        var view = this._views[viewname];
        if (view != null && view != undefined) {
            view.node.active = false;
            if (view.isDialog) {
                //todo: should support dialog hide animtion  later 
                this.modal.active = false;
            }
            if (this.hasVisibleDialog()) {
                this.modal.active = true;
            }
            // if(view.isInHideAnimation())
            //     return;
            // view.hide();
            if (playHideAnim)
                view.doHideAnimation();
            view.onHidden();
        }
    };
    ViewManager.prototype.checkViewStacks = function () {
        var dialog = this.getVisibleDialog();
        if (dialog) {
            this.modal.active = true;
            this.modal.opacity = dialog.opacity;
        }
    };
    ViewManager.prototype.hideAll = function () {
        for (var viewname in this._views) {
            // let view = this._views[viewname]
            this.hide(viewname);
        }
    };
    var ViewManager_1;
    __decorate([
        property(cc.Node)
    ], ViewManager.prototype, "modal", void 0);
    __decorate([
        property
    ], ViewManager.prototype, "modalOpacity", void 0);
    ViewManager = ViewManager_1 = __decorate([
        ccclass
    ], ViewManager);
    return ViewManager;
}(cc.Component));
exports.default = ViewManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/utils/Intersection.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2f4dfDdP95AjIAwGFL34sfm', 'Intersection');
// framework/plugin_boosts/utils/Intersection.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Intersection = /** @class */ (function () {
    function Intersection() {
    }
    // contains and intesect
    Intersection.circleIntersectRect = function (circle_pt, radius, rect) {
        var cx = 0;
        var cy = 0;
        //Find the point on the collision box closest to the center of the circle
        if (circle_pt.x < rect.x)
            cx = rect.x;
        else if (circle_pt.x > rect.x + rect.width)
            cx = rect.x + rect.width;
        else
            cx = circle_pt.x;
        if (circle_pt.y < rect.y)
            cy = rect.y;
        else if (circle_pt.y > rect.y + rect.height)
            cy = rect.y + rect.height;
        else
            cy = circle_pt.y;
        var v2 = cc.v2(cx, cy);
        v2.subSelf(circle_pt);
        if (v2.magSqr() < radius * radius)
            return true;
        return false;
    };
    return Intersection;
}());
exports.default = Intersection;
/***
// 矩形和圆形碰撞检测
bool IsCirlceCollisionRect(float circleXPos, float circleYPos, float radius, float rectX, float rectY, float rectW, float rectH)
{
    float arcR  = radius;
    float arcOx = circleXPos;
    float arcOy = circleYPos;

    //分别判断矩形4个顶点与圆心的距离是否<=圆半径；如果<=，说明碰撞成功
    if(((rectX-arcOx) * (rectX-arcOx) + (rectY-arcOy) * (rectY-arcOy)) <= arcR * arcR)
        return true;
    if(((rectX+rectW-arcOx) * (rectX+rectW-arcOx) + (rectY-arcOy) * (rectY-arcOy)) <= arcR * arcR)
        return true;
    if(((rectX-arcOx) * (rectX-arcOx) + (rectY+rectH-arcOy) * (rectY+rectH-arcOy)) <= arcR * arcR)
        return true;
    if(((rectX+rectW-arcOx) * (rectX+rectW-arcOx) + (rectY+rectH-arcOy) * (rectY+rectH-arcOy)) <= arcR * arcR)
        return true;

    //判断当圆心的Y坐标进入矩形内时X的位置，如果X在(rectX-arcR)到(rectX+rectW+arcR)这个范围内，则碰撞成功
    float minDisX = 0;
    if(arcOy >= rectY && arcOy <= rectY + rectH)
    {
        if(arcOx < rectX)
            minDisX = rectX - arcOx;
        else if(arcOx > rectX + rectW)
            minDisX = arcOx - rectX - rectW;
        else
            return true;
        if(minDisX <= arcR)
            return true;
    }

    //判断当圆心的X坐标进入矩形内时Y的位置，如果X在(rectY-arcR)到(rectY+rectH+arcR)这个范围内，则碰撞成功
    float minDisY = 0;
    if(arcOx >= rectX && arcOx <= rectX + rectW)
    {
        if(arcOy < rectY)
            minDisY = rectY - arcOy;
        else if(arcOy > rectY + rectH)
            minDisY = arcOy - rectY - rectH;
        else
            return true;
        if(minDisY <= arcR)
            return true;
    }

    return false;
}

// 线段和线段碰撞检测
bool IsLineCollisionLine(cocos2d::CCPoint p1, cocos2d::CCPoint p2, cocos2d::CCPoint p3, cocos2d::CCPoint p4)
{
    float x1 = p1.x, x2 = p2.x, x3 = p3.x, x4 = p4.x;
    float y1 = p1.y, y2 = p2.y, y3 = p3.y, y4 = p4.y;

    float d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);
    // If d is zero, there is no intersection
    if (d == 0)
        return false;

    // Get the x and y
    float pre = (x1*y2 - y1*x2), post = (x3*y4 - y3*x4);
    float x = ( pre * (x3 - x4) - (x1 - x2) * post ) / d;
    float y = ( pre * (y3 - y4) - (y1 - y2) * post ) / d;

    // Check if the x and y coordinates are within both lines
    if ( x < MIN(x1, x2) || x > MAX(x1, x2) ||
        x < MIN(x3, x4) || x > MAX(x3, x4) )
        return false;

    if ( y < MIN(y1, y2) || y > MAX(y1, y2) ||
        y < MIN(y3, y4) || y > MAX(y3, y4) )
        return false;

    return true;
}

static float mult(cocos2d::CCPoint a, cocos2d::CCPoint b, cocos2d::CCPoint c)
{
    return (a.x-c.x)*(b.y-c.y)-(b.x-c.x)*(a.y-c.y);
}

bool IsLineCollisionLine2(cocos2d::CCPoint aa, cocos2d::CCPoint bb, cocos2d::CCPoint cc, cocos2d::CCPoint dd)
{
    if ( MAX(aa.x, bb.x)<MIN(cc.x, dd.x) )
        return false;

    if ( MAX(aa.y, bb.y)<MIN(cc.y, dd.y) )
        return false;

    if ( MAX(cc.x, dd.x)<MIN(aa.x, bb.x) )
        return false;

    if ( MAX(cc.y, dd.y)<MIN(aa.y, bb.y) )
        return false;

    if (mult(cc, bb, aa)*mult(bb, dd, aa)<0.0001f)
        return false;

    if (mult(aa, dd, cc)*mult(dd, bb, cc)<0.0001f)
        return false;

    return true;
}

// 线段和矩形碰撞检测
bool IsLineCollisionRect(cocos2d::CCPoint lineStartPoint, cocos2d::CCPoint lineEndPoint, cocos2d::CCPoint rectleftBottomPoint, float width, float height)
{
    // 因为这个方法专门进行射线光束的碰撞检测，所以暂不进行线段在矩形内的碰撞检测
    cocos2d::CCPoint leftLineStartPoint = rectleftBottomPoint;
    cocos2d::CCPoint leftLineEndPoint   = cocos2d::CCPoint(leftLineStartPoint.x, leftLineStartPoint.y+height);

    cocos2d::CCPoint rightLineStartPoint= cocos2d::CCPoint(leftLineStartPoint.x+width, leftLineStartPoint.y);
    cocos2d::CCPoint rightLineEndPoint  = cocos2d::CCPoint(leftLineStartPoint.x+width, leftLineStartPoint.y+height);

    cocos2d::CCPoint topLineStartPoint  = cocos2d::CCPoint(leftLineStartPoint.x, leftLineStartPoint.y+height);
    cocos2d::CCPoint topLineEndPoint    = cocos2d::CCPoint(leftLineStartPoint.x+width, leftLineStartPoint.y+height);

    cocos2d::CCPoint bottomLineStartPoint= cocos2d::CCPoint(leftLineStartPoint.x, leftLineStartPoint.y);
    cocos2d::CCPoint bottomLineEndPoint  = cocos2d::CCPoint(leftLineStartPoint.x+width, leftLineStartPoint.y);
    
    cocos2d::CCPoint leftBottomLineStartPoint= rectleftBottomPoint;
    cocos2d::CCPoint rightTopLineEndPoint    = rightLineEndPoint;

    cocos2d::CCPoint leftTopLineStartPoint   = leftLineEndPoint;
    cocos2d::CCPoint rightBottomLineEndPoint = rightLineStartPoint;


    do
    {
        if (IsLineCollisionLine2(lineStartPoint, lineEndPoint, leftLineStartPoint, leftLineEndPoint))
            break;

        if (IsLineCollisionLine2(lineStartPoint, lineEndPoint, rightLineStartPoint, rightLineEndPoint))
            break;

        if (IsLineCollisionLine2(lineStartPoint, lineEndPoint, topLineStartPoint, topLineEndPoint))
            break;

        if (IsLineCollisionLine2(lineStartPoint, lineEndPoint, bottomLineStartPoint, bottomLineEndPoint))
            break;

        if (IsLineCollisionLine2(lineStartPoint, lineEndPoint, leftBottomLineStartPoint, rightTopLineEndPoint))
            break;

        if (IsLineCollisionLine2(lineStartPoint, lineEndPoint, leftTopLineStartPoint, rightBottomLineEndPoint))
            break;

        return false;
    }
    while (false);

    return true;
}

static  bool  IsRectCollisionRect2(cocos2d::CCPoint rect1CenterPoint, float rect1W, float rect1H, cocos2d::CCPoint rect2CenterPoint, float rect2W, float rect2H)
{
    cocos2d::CCPoint leftTopPoint     = cocos2d::CCPoint(rect2CenterPoint.x-rect2W/2.0f, rect2CenterPoint.y+rect2H/2.0f);
    cocos2d::CCPoint leftBottomPoint  = cocos2d::CCPoint(rect2CenterPoint.x-rect2W/2.0f, rect2CenterPoint.y-rect2H/2.0f);
    cocos2d::CCPoint rightTopPoint    = cocos2d::CCPoint(rect2CenterPoint.x+rect2W/2.0f, rect2CenterPoint.y+rect2H/2.0f);
    cocos2d::CCPoint rightBottomPoint = cocos2d::CCPoint(rect2CenterPoint.x+rect2W/2.0f, rect2CenterPoint.y-rect2H/2.0f);

    if ( (leftTopPoint.x>(rect1CenterPoint.x-rect1W/2.0f)) && (leftTopPoint.x<(rect1CenterPoint.x+rect1W/2.0f))
        && (leftTopPoint.y>(rect1CenterPoint.y-rect1H/2.0f)) && (leftTopPoint.y<(rect1CenterPoint.y+rect1H/2.0f)))
        return true;

    if ( (leftBottomPoint.x>(rect1CenterPoint.x-rect1W/2.0f)) && (leftBottomPoint.x<(rect1CenterPoint.x+rect1W/2.0f))
        && (leftBottomPoint.y>(rect1CenterPoint.y-rect1H/2.0f)) && (leftBottomPoint.y<(rect1CenterPoint.y+rect1H/2.0f)))
        return true;

    if ( (rightTopPoint.x>(rect1CenterPoint.x-rect1W/2.0f)) && (rightTopPoint.x<(rect1CenterPoint.x+rect1W/2.0f))
        && (rightTopPoint.y>(rect1CenterPoint.y-rect1H/2.0f)) && (rightTopPoint.y<(rect1CenterPoint.y+rect1H/2.0f)))
        return true;

    if ( (rightBottomPoint.x>(rect1CenterPoint.x-rect1W/2.0f)) && (rightBottomPoint.x<(rect1CenterPoint.x+rect1W/2.0f))
        && (rightBottomPoint.y>(rect1CenterPoint.y-rect1H/2.0f)) && (rightBottomPoint.y<(rect1CenterPoint.y+rect1H/2.0f)))
        return true;

    return false;
}

// 矩形和矩形碰撞检测
bool  IsRectCollisionRect(cocos2d::CCPoint rect1CenterPoint, float rect1W, float rect1H, cocos2d::CCPoint rect2CenterPoint, float rect2W, float rect2H)
{
    if (IsRectCollisionRect2(rect1CenterPoint, rect1W, rect1H, rect2CenterPoint, rect2W, rect2H))
        return true;
    
    if (IsRectCollisionRect2(rect2CenterPoint, rect2W, rect2H, rect1CenterPoint, rect1W, rect1H))
        return true;

    return false;
}

**/ 

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/gameSceneManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6be4flAQQJHL6gxxNXHg9Az', 'gameSceneManager');
// gameComon/scripts/gameSceneManager.js

"use strict";

var AppGame = null;
var GameSceneManager = cc.Class({
  "extends": cc.Component,
  properties: {},
  onLoad: function onLoad() {
    if (AppGame == null) {
      AppGame = require('appGame');
      AppGame.init();
      this.initAppData(function () {
        var RoomGame = require('roomGame');

        appGame.gameServerRoom = RoomGame.create({});
      }.bind(this));
    }

    appGame.emitter.on(consts.HTTP_EVENT_MIDDLE_DESK_CONFIG, this.refreshGameConfig);
    appGame.emitter.on(consts.LOCAL_EVENT_POPUP_LOADTIP, this.showLoadTipFun);
    appGame.emitter.on(consts.LOCAL_EVENT_POPUP_DIALOG, this.showDialogFun);
    appGame.emitter.on(consts.LOCAL_EVENT_POPUP_GAME_COMMON, this.showCommonUIFun);
  },
  onDestroy: function onDestroy() {
    appGame.emitter.off(consts.HTTP_EVENT_MIDDLE_DESK_CONFIG, this.refreshGameConfig);
    appGame.emitter.off(consts.LOCAL_EVENT_POPUP_DIALOG, this.showDialogFun);
    appGame.emitter.off(consts.LOCAL_EVENT_POPUP_LOADTIP, this.showLoadTipFun);
    appGame.emitter.off(consts.LOCAL_EVENT_POPUP_GAME_COMMON, this.showCommonUIFun);
  },
  refreshGameConfig: function refreshGameConfig(data) {
    var VideoBanner = require('videoBanner');

    appGame.videoBanner = VideoBanner.create({});

    var InterstitialAd = require('interstitialAd');

    appGame.interstitialAd = InterstitialAd.create({});

    var Banner = require('banner');

    appGame.banner = Banner.create({});

    var WXNativeAd = require('wxnativeAd');

    appGame.nativeAd = WXNativeAd.create({});

    var WwxgridAd = require('wxgridAd');

    appGame.gridAd = WwxgridAd.create({});

    var AppBoxAd = require('qqAppBox');

    appGame.appBoxAd = AppBoxAd.create({});

    var BlockAd = require('qqBlockAd');

    appGame.blockAd = BlockAd.create({});

    var ScreenrecordAuto = require('screenrecordAuto');

    appGame.screenAuto = ScreenrecordAuto.create({});
  },
  initAppData: function initAppData(cb) {
    appGame.userId = cc.sys.localStorage.getItem("snmi_guid");

    if (appGame.userId == null || appGame.userId == '') {
      appGame.userId = util.guid();
      cc.sys.localStorage.setItem("snmi_guid", appGame.userId);
    }

    if (cc.sys.platform === cc.sys.VIVO_GAME) {
      if (qg) {
        qg.getSystemInfo({
          success: function success(data) {
            appGame.deviceInfo = data;
          }
        });
      }
    } else if (cc.sys.platform == cc.sys.BAIDU_GAME) {
      swan.getSystemInfo({
        success: function success(res) {
          console.log(res);
          appGame.deviceInfo = res;
        },
        fail: function fail(res) {
          console.log("getSystemInfo \u8C03\u7528\u5931\u8D25");
        }
      });
    } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
      tt.getSystemInfo({
        success: function success(res) {
          console.log(res);
          appGame.deviceInfo = res;
        },
        fail: function fail(res) {
          console.log("getSystemInfo \u8C03\u7528\u5931\u8D25");
        }
      });
    } else if (cc.sys.platform == cc.sys.MOBILE_BROWSER || cc.sys.platform == cc.sys.DESKTOP_BROWSER) {
      appGame.deviceInfo = '';
    } else if (cc.sys.platform == cc.sys.OPPO_GAME) {
      qg.getSystemInfo({
        success: function success(res) {
          appGame.deviceInfo = res;
        },
        fail: function fail(err) {},
        complete: function complete(res) {}
      });
    } else if (cc.sys.platform == cc.sys.XIAOMI_GAME) {
      qg.getSystemInfo({
        success: function success(res) {
          appGame.deviceInfo = res;
        },
        fail: function fail(err) {},
        complete: function complete(res) {}
      });
    } else if (cc.sys.platform == cc.sys.ANDROID) {
      appGame.deviceInfo = '';
    } else {
      appGame.deviceInfo = '';
    }

    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '登录',
      content: '进入主界面'
    }, function () {});
    appGame.appStartTime = new Date().getTime();
    var countEnter = cc.sys.localStorage.getItem("snmi_entercount");

    if (countEnter == null || countEnter == '') {
      countEnter = 1;
      cc.sys.localStorage.setItem("snmi_entercount", 1);
    } else {
      countEnter = parseInt(countEnter);
      countEnter++;
      cc.sys.localStorage.setItem("snmi_entercount", countEnter);
    }

    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '打开APP',
      content: '进入游戏次数统计',
      desc: countEnter
    }, function () {});
    cb();
  },
  disConnectFun: function disConnectFun() {
    appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_DIALOG, {
      title: '提示',
      content: "网络已断开\n是否退出重连？",
      okLabel: "确定",
      okCB: function () {//App.SceneManager.changeScene("Login");
        //App.isReconnect = false;
      }.bind(this)
    });
  },
  showCommonUIFun: function showCommonUIFun(opts) {
    var popupPanelEventCallback = function popupPanelEventCallback(opts, zIndex, cb) {
      if (opts && opts.prefabName) {
        cc.log("prefabName==" + opts.prefabName);
        cc.assetManager.loadBundle(opts.bundle, function (err, bundle) {
          bundle.load(opts.prefabName, cc.Prefab, function (error, prefab) {
            if (error) {
              cc.error(error);
              return;
            }

            var isShowing = false;
            var canvasParent = cc.find('Canvas');

            if (canvasParent.childrenCount > 0) {
              for (var i = 0; i < canvasParent.children.length; i++) {
                if (canvasParent.children[i].name == opts.prefabName) {
                  isShowing = true;
                  break;
                }
              }
            }

            if (isShowing) {
              return;
            } // let canvasParent = cc.find('Canvas');
            // if(canvasParent.childrenCount>0){
            //     for(let i=0;i<canvasParent.children.length;i++){
            //         if(canvasParent.children[i].name == opts.prefabName){
            //             cc.log("prefabName==删除")
            //             canvasParent.children[i].removeFromParent();
            //         }
            //     }
            // }


            var instance = cc.instantiate(prefab);
            canvasParent.addChild(instance);
            var controlComponent = instance.getComponent(opts.prefabName);
            controlComponent && controlComponent.show && controlComponent.show(opts); //所有弹出层控制组件都应实现这个函数，确保触发事件时传递的参数能传递到界面

            instance.zIndex = zIndex;
            instance.active = true;
            cb && cb(null, instance);
          }.bind(this));
        }.bind(this));
      }
    };

    opts = opts || {};
    popupPanelEventCallback(opts, opts.zIndex || 1300);
  },
  showDialogFun: function showDialogFun(opts) {
    var popupPanelEventCallback = function popupPanelEventCallback(prefabName, opts, zIndex, cb) {
      cc.assetManager.loadBundle('comPrefab', function (err, bundle) {
        bundle.load(prefabName, cc.Prefab, function (error, prefab) {
          if (error) {
            cc.error(error);
            return;
          }

          var canvasParent = cc.find('Canvas');

          if (canvasParent.childrenCount > 0) {
            for (var i = 0; i < canvasParent.children.length; i++) {
              if (canvasParent.children[i].name == 'dialogBox') {
                canvasParent.children[i].removeFromParent();
              }
            }
          }

          var instance = cc.instantiate(prefab);
          canvasParent.addChild(instance);
          var controlComponent = instance.getComponent(prefabName);
          controlComponent && controlComponent.show && controlComponent.show(opts); //所有弹出层控制组件都应实现这个函数，确保触发事件时传递的参数能传递到界面

          instance.zIndex = zIndex;
          instance.active = true;
          cb && cb(null, instance);
        }.bind(this));
      }.bind(this));
    };

    opts = opts || {};
    popupPanelEventCallback('dialogBox', opts, opts.zIndex || 1400);
  },
  showLoadTipFun: function showLoadTipFun(opts) {
    var popupPanelEventCallback = function popupPanelEventCallback(prefabName, opts, zIndex, cb) {
      cc.assetManager.loadBundle('comPrefab', function (err, bundle) {
        bundle.load(prefabName, cc.Prefab, function (error, prefab) {
          if (error) {
            cc.error(error);
            return;
          }

          var canvasParent = cc.find('Canvas');

          if (canvasParent.childrenCount > 0) {
            for (var i = 0; i < canvasParent.children.length; i++) {
              if (canvasParent.children[i].name == 'loadTip') {
                canvasParent.children[i].removeFromParent();
              }
            }
          }

          var instance = cc.instantiate(prefab);
          canvasParent.addChild(instance);
          var controlComponent = instance.getComponent(prefabName);
          controlComponent && controlComponent.show && controlComponent.show(opts); //所有弹出层控制组件都应实现这个函数，确保触发事件时传递的参数能传递到界面

          instance.zIndex = zIndex;
          instance.active = true;
          cb && cb(null, instance);
        }.bind(this));
      }.bind(this));
    };

    opts = opts || {};
    popupPanelEventCallback('loadTip', opts, opts.zIndex || 1500);
  },
  showGameHelpFun: function showGameHelpFun(opts) {
    var popupPanelEventCallback = function popupPanelEventCallback(prefabName, opts, zIndex, cb) {
      var prefabPath = 'gameComon/prefab/' + prefabName;
      cc.loader.loadRes(prefabPath, cc.Prefab, function (error, prefab) {
        if (error) {
          cc.error(error);
          return;
        }

        var instance = cc.instantiate(prefab);
        cc.find('Canvas').addChild(instance); //cc.find("Canvas/alert").addChild(instance);

        var controlComponent = instance.getComponent(prefabName);
        controlComponent && controlComponent.show && controlComponent.show(opts); //所有弹出层控制组件都应实现这个函数，确保触发事件时传递的参数能传递到界面

        instance.zIndex = zIndex;
        instance.active = true;
        cb && cb(null, instance);
      });
    };

    opts = opts || {};
    popupPanelEventCallback('helpPanel', opts, opts.zIndex || 1000);
  }
});
module.exports = GameSceneManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/ad/videoBanner.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '984cbg+bTFE9qHzstOIM3zd', 'videoBanner');
// gameComon/scripts/ad/videoBanner.js

"use strict";

var videoAdId = '';
var appId = '';
var isPlaySuccess = false;
var countDownTimeOut;
var VideoBanner = cc.Class({
  properties: {},
  ctor: function ctor() {
    this.instance = null;
  },
  statics: {
    create: function create(data) {
      if (!this.instance) {
        this.instance = new VideoBanner();
        this.instance.initWithData(data);
        return this.instance;
      }
    }
  },
  initWithData: function initWithData(data) {
    isPlaySuccess = false;
    this.callback = null;
    this.count = 1;

    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
      //头条平台
      videoAdId = '1gr8f7hvpon3mb2llf';

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.videoId && appGame.gameServerRoom.adConfig.videoId.toutiao) {
        videoAdId = appGame.gameServerRoom.adConfig.videoId.toutiao.adUnitId;
      }

      this.globalData = {
        videoAd: tt.createRewardedVideoAd({
          adUnitId: videoAdId
        })
      };
      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '广告位激励视频',
        content: '创建成功',
        desc: videoAdId
      }, function () {});
    } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'WX') {
      //微信
      videoAdId = 'adunit-168ed0ed4d9f8fad';

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.videoId && appGame.gameServerRoom.adConfig.videoId.WX) {
        videoAdId = appGame.gameServerRoom.adConfig.videoId.WX.adUnitId;
      }

      this.globalData = {
        videoAd: wx.createRewardedVideoAd({
          adUnitId: videoAdId
        })
      };
      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '广告位激励视频',
        content: '创建成功',
        desc: videoAdId
      }, function () {});
    } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'QQ') {
      //qq
      videoAdId = 'adunit-168ed0ed4d9f8fad';

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.videoId && appGame.gameServerRoom.adConfig.videoId.QQ) {
        videoAdId = appGame.gameServerRoom.adConfig.videoId.QQ.adUnitId;
      }

      this.globalData = {
        videoAd: qq.createRewardedVideoAd({
          adUnitId: videoAdId
        })
      };
      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '广告位激励视频',
        content: '创建成功',
        desc: videoAdId
      }, function () {});
    } else if (cc.sys.platform == cc.sys.BAIDU_GAME) {
      //百度
      videoAdId = '7433930';

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.videoId && appGame.gameServerRoom.adConfig.videoId.baidu) {
        videoAdId = appGame.gameServerRoom.adConfig.videoId.baidu.adUnitId;
      }

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.videoId && appGame.gameServerRoom.adConfig.videoId.baidu) {
        appId = appGame.gameServerRoom.adConfig.videoId.baidu.appSid;
      }

      this.globalData = {
        videoAd: swan.createRewardedVideoAd({
          adUnitId: videoAdId,
          appSid: appId
        })
      };
    }

    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '广告位激励视频',
      content: '创建成功',
      desc: videoAdId
    }, function () {});

    if (cc.sys.platform != cc.sys.WECHAT_GAME) {
      if (this.globalData && this.globalData.videoAd) {
        this.globalData.videoAd.onClose(function (res) {
          if (res.isEnded) {
            console.log("看完视频关闭");
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '广告位激励视频',
              content: '点击关闭',
              desc: videoAdId + "播放成功"
            }, function () {});
            clearTimeout(countDownTimeOut);
            this.callback && this.callback(1);
            appGame.audioMgr.getMusicStatus(function (onOff) {
              if (onOff) {
                appGame.audioMgr.setMusicOnOff(onOff);
              }
            }.bind(this));
          } else {
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '广告位激励视频',
              content: '点击关闭',
              desc: videoAdId + "播放失败"
            }, function () {});
            console.log("未看完视频关闭");
            clearTimeout(countDownTimeOut);
            this.callback && this.callback(2);
            appGame.audioMgr.getMusicStatus(function (onOff) {
              if (onOff) {
                appGame.audioMgr.setMusicOnOff(onOff);
              }
            }.bind(this));
          }
        }.bind(this));

        var onErrorFuc = function (listener) {
          console.log("播放视频广告出问题" + listener.errCode + listener.errMsg);
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '广告位激励视频',
            content: videoAdId,
            desc: listener.errCode + listener.errMsg
          }, function () {});
          clearTimeout(countDownTimeOut);
          this.callback && this.callback(3);
          appGame.audioMgr.getMusicStatus(function (onOff) {
            if (onOff) {
              appGame.audioMgr.setMusicOnOff(onOff);
            }
          }.bind(this));
        }.bind(this);

        this.globalData.videoAd.onError(onErrorFuc); //this.globalData.videoAd.offError(onErrorFuc);
      }
    }
  },
  playVideoAd: function playVideoAd(sceneId, cb) {
    isPlaySuccess = false;
    console.log("播放视频广告");
    this.count++;
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '广告位激励视频',
      content: this.count,
      desc: videoAdId
    }, function () {});
    clearTimeout(countDownTimeOut);

    if (this.globalData && this.globalData.videoAd) {
      appGame.audioMgr.getMusicStatus(function (onOff) {
        if (onOff) {
          appGame.audioMgr.setMusicOnOff(onOff);
        }
      }.bind(this));
      countDownTimeOut = setTimeout(function () {
        if (!isPlaySuccess) {
          console.log("倒计时到返回回调");
          clearTimeout(countDownTimeOut);
          appGame.audioMgr.getMusicStatus(function (onOff) {
            if (onOff) {
              appGame.audioMgr.setMusicOnOff(onOff);
            }
          }.bind(this));
          cb(3);
        }
      }.bind(this), 5000);
      var videoAd = this.globalData.videoAd;

      if (cc.sys.platform == cc.sys.WECHAT_GAME && (appGame.platform == 'WX' || appGame.platform == 'QQ')) {
        console.log("播放微信视频");

        if (_videoAd) {
          _videoAd.destroy();
        }

        var _videoAd = null;

        if (appGame.platform == 'WX') {
          _videoAd = wx.createRewardedVideoAd({
            adUnitId: videoAdId
          });
        } else {
          _videoAd = qq.createRewardedVideoAd({
            adUnitId: videoAdId
          });
        }

        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '广告位激励视频',
          content: '创建成功',
          desc: videoAdId
        }, function () {});

        _videoAd.onError(function (res) {
          clearTimeout(countDownTimeOut);
          this.callback && this.callback(3);
          appGame.audioMgr.getMusicStatus(function (onOff) {
            if (onOff) {
              appGame.audioMgr.setMusicOnOff(onOff);
            }
          }.bind(this));
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '广告位激励视频',
            content: videoAdId,
            desc: res.errCode + res.errMsg
          }, function () {});
          console.log('videoAd onError', res);
        }.bind(this));

        _videoAd.onLoad(function (res) {
          console.log('videoAd onLoad', res);
        });

        _videoAd.onClose(function (res) {
          console.log("关闭微信视频========" + res.isEnded);

          if (res.isEnded) {
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '广告位激励视频',
              content: '点击关闭',
              desc: videoAdId + "播放成功"
            }, function () {});
            clearTimeout(countDownTimeOut);
            this.callback && this.callback(1);
            appGame.audioMgr.getMusicStatus(function (onOff) {
              if (onOff) {
                appGame.audioMgr.setMusicOnOff(onOff);
              }
            }.bind(this));
          } else {
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '广告位激励视频',
              content: '点击关闭',
              desc: videoAdId + "播放失败"
            }, function () {});
            clearTimeout(countDownTimeOut);
            this.callback && this.callback(2);
            appGame.audioMgr.getMusicStatus(function (onOff) {
              if (onOff) {
                appGame.audioMgr.setMusicOnOff(onOff);
              }
            }.bind(this));
          }

          _videoAd.offClose();
        }.bind(this));

        _videoAd.load().then(function () {
          console.log('激励视频加载成功');

          _videoAd.show().then(function () {
            isPlaySuccess = true;
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '广告位激励视频',
              content: '展示成功',
              desc: videoAdId + sceneId
            }, function () {});
            console.log('激励视频 广告显示成功');
          })["catch"](function (err) {
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '广告位激励视频',
              content: '展示失败',
              desc: videoAdId + sceneId
            }, function () {});
            console.log('激励视频 广告显示失败');
          });
        })["catch"](function (err) {
          console.log('激励视频加载失败');
        });

        this.callback = cb;
      } else {
        videoAd.show().then(function () {
          isPlaySuccess = true;
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '广告位激励视频',
            content: '展示成功',
            desc: videoAdId + sceneId
          }, function () {});
          console.log("广告显示成功");
        })["catch"](function (err) {
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '广告位激励视频',
            content: '展示失败',
            desc: videoAdId + sceneId
          }, function () {});
          console.log("广告组件出现问题", err); // 可以手动加载一次

          videoAd.load().then(function () {
            console.log("手动加载成功"); // 加载成功后需要再显示广告

            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '广告位激励视频',
              content: '手动加载成功',
              desc: videoAdId
            }, function () {});
            isPlaySuccess = true;
            return videoAd.show();
          });
        });
        this.callback = cb;
      }
    } else {
      //没有激励视频的直接返回
      appGame.audioMgr.getMusicStatus(function (onOff) {
        if (onOff) {
          appGame.audioMgr.setMusicOnOff(onOff);
        }
      }.bind(this));
      cb(1);
    }
  }
});
module.exports = VideoBanner;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/model/util.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8a9f96OA6hCcY7Fl9XOa3ug', 'util');
// gameComon/scripts/model/util.js

"use strict";

module.exports = {
  format: function format(f) {
    if (typeof f !== 'string') {
      var objects = [];

      for (var i = 0; i < arguments.length; i++) {
        objects.push(inspect(arguments[i]));
      }

      return objects.join(' ');
    }

    var i = 1;
    var args = arguments;
    var len = args.length;
    var formatRegExp = new RegExp("%%|%s|%d|%j", "g");
    var str = String(f).replace(formatRegExp, function (x) {
      if (x === '%%') return '%';
      if (i >= len) return x;

      switch (x) {
        case '%s':
          return String(args[i++]);

        case '%d':
          return Number(args[i++]);

        case '%j':
          return JSON.stringify(args[i++]);

        default:
          return x;
      }
    });

    for (var x = args[i]; i < len; x = args[++i]) {
      if (x === null || typeof x !== 'object') {
        str += ' ' + x;
      } else {
        str += ' ' + inspect(x);
      }
    }

    return str;
  },
  loadGameAutoAtlas: function loadGameAutoAtlas(url, spriteName, node, cb) {
    if (CC_BUILD) {
      cc.resources.load(url, cc.SpriteAtlas, function (err, atlas) {
        var frame = atlas.getSpriteFrame(spriteName);
        node.spriteFrame = frame;
        cb(true);
      }.bind(this));
    } else {
      cc.resources.load(url + spriteName, cc.SpriteFrame, function (err, spriteFrame) {
        if (err) {
          cc.log(err.message || err);
          cb(false);
          return;
        }

        node.spriteFrame = spriteFrame;
        cb(true);
      }.bind(this));
    }
  },
  loadJSONData: function loadJSONData(bundleName, name, callback) {
    cc.assetManager.loadBundle(bundleName, function (err, bundle) {
      bundle.load(name, cc.JsonAsset, function (error, res) {
        if (error) {
          return;
        }

        var jsondata = res.json;
        callback(jsondata); //cc.log("jsondata=="+JSON.stringify(jsondata.data))
      }.bind(this));
    }.bind(this));
  },
  loadBundleSprite: function loadBundleSprite(bundlename, loadname, node, cb) {
    cc.assetManager.loadBundle(bundlename, function (err, bundle) {
      bundle.load(loadname, cc.SpriteFrame, function (err, spriteframe) {
        if (err) {
          return;
        }

        node.spriteFrame = spriteframe;
        cb(true);
      }.bind(this));
    }.bind(this));
  },
  guid: function guid() {
    function S4() {
      return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);
    }

    return S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4();
  },
  timeConvertInt: function timeConvertInt(time) {
    //let converttime = 0;
    var sceond = parseInt(time / 1000); // if(sceond<=10){
    //     converttime = sceond;
    // }else{
    //     let timestr = sceond+'';
    //     let s1 = timestr.substring(0,timestr.length-1);
    //     s1 = s1+'0';
    //     converttime = parseInt(s1)
    // }

    return sceond;
  },
  random: function random(lower, upper) {
    return Math.floor(Math.random() * (upper - lower)) + lower;
  },
  distance: function distance(p1, p2) {
    var dx = Math.abs(p2.x - p1.x);
    var dy = Math.abs(p2.y - p1.y);
    return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));
  },
  //货币进位
  goldCrarryBit: function goldCrarryBit(gold) {
    var array = [[100000000, 'N'], [10000000, 'T'], [1000000, 'G'], [100000, 'M'], [10000, 'K'], [1000, 'B']];

    for (var i = 0; i < array.length; i++) {
      var value = gold / array[i][0];

      if (value > 1) {
        return '' + value.toFixed(1) + array[i][1];
      }
    }

    return gold;
  },
  setVirusColor: function setVirusColor(node, color) {
    for (var i = 0; i < node.children.length; i++) {
      var js = node.children[i].getComponent('color');

      if (js != null) {
        node.children[i].color = color;
      }

      this.setVirusColor(node.children[i], color);
    }
  },
  getVirusColorByHp: function getVirusColorByHp(hp) {
    for (var i = 0; i < gVirusColor.length; i++) {
      if (hp <= gVirusColor[i].pro) {
        return gVirusColor[i].color;
      }
    }
  },
  getVirusScaleByHp: function getVirusScaleByHp(hp) {
    for (var i = 0; i < gVirusColor.length; i++) {
      if (hp <= gVirusColor[i].pro) {
        return gVirusScale[i].scale;
      }
    }
  },
  getRandomSpeed: function getRandomSpeed() {
    var index = random(0, gSpeed.length - 1);
    return gSpeed[index];
  },
  randAlloc: function randAlloc(total, min, max, length) {
    // 首先要判断是否符合 min 和 max 条件
    if (min * length > total || max * length < total) {
      throw Error("\u6CA1\u6CD5\u6EE1\u8DB3\u6700\u6700\u5C11 " + min + " \u6700\u5927 " + max + " \u7684\u6761\u4EF6");
    }

    var result = [];
    var restValue = total;
    var restLength = length;

    for (var i = 0; i < length - 1; i++) {
      restLength--; // 这一次要发的数量必须保证剩下的要足最小量
      // 同进要保证剩下的不能大于需要的最大量

      var restMin = restLength * min;
      var restMax = restLength * max; // 可发的量

      var usable = restValue - restMin; // 最少要发的量

      var minValue = Math.max(min, restValue - restMax); // 以 minValue 为最左，max 为中线来进行随机，即随机范围是 (max - minValue) * 2
      // 如果这个范围大于 usable - minValue，取 usable - minValue

      var limit = Math.min(usable - minValue, (max - minValue) * 2); // 随机部分加上最少要发的部分就是应该发的，但是如果大于 max，最大取到 max

      result[i] = Math.min(max, minValue + Math.floor(limit * Math.random()));
      restValue -= result[i];
    }

    result[length - 1] = restValue;
    return result;
  },
  copyText: function copyText(word, rid) {
    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME || cc.sys.platform == cc.sys.WECHAT_GAME || cc.sys.platform == cc.sys.BAIDU_GAME) {
      //头条平台
      var comObject;

      if (cc.sys.platform == cc.sys.BAIDU_GAME) {
        comObject = swan;
      } else if (cc.sys.platform == cc.sys.WECHAT_GAME) {
        comObject = wx;
      } else {
        comObject = tt;
      }

      comObject.setClipboardData({
        data: word,
        success: function success(res) {
          if (cc.sys.platform == cc.sys.BAIDU_GAME) {
            comObject.showToast({
              title: '加载完成',
              icon: 'none'
            });
          }

          comObject.getClipboardData({
            success: function success(res) {
              var spreadUrl = consts.HTTP_SPREAD_REPORT + 'rid=' + rid + '&status=' + 1;
              httpUtils.httpSendRequest(spreadUrl, function (spreadRes) {});
            },
            fail: function fail(res) {
              var spreadUrl = consts.HTTP_SPREAD_REPORT + 'rid=' + rid + '&status=' + 0;
              httpUtils.httpSendRequest(spreadUrl, function (spreadRes) {});
            }
          });
        },
        fail: function fail(res) {
          var spreadUrl = consts.HTTP_SPREAD_REPORT + 'rid=' + rid + '&status=' + 0;
          httpUtils.httpSendRequest(spreadUrl, function (spreadRes) {});
        }
      });
    }
  },
  spreadWordFun: function spreadWordFun() {
    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME || cc.sys.platform == cc.sys.WECHAT_GAME || cc.sys.platform == cc.sys.BAIDU_GAME) {
      //头条平台
      var comApp, combrand, commodel;

      if (cc.sys.platform == cc.sys.BAIDU_GAME) {
        var _swan$getSystemInfoSy = swan.getSystemInfoSync(),
            host = _swan$getSystemInfoSy.host,
            brand = _swan$getSystemInfoSy.brand,
            model = _swan$getSystemInfoSy.model;

        comApp = host;
        combrand = brand;
        commodel = model;
      } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'WX') {
        var _wx$getSystemInfoSync = wx.getSystemInfoSync(),
            appName = _wx$getSystemInfoSync.appName,
            _brand = _wx$getSystemInfoSync.brand,
            _model = _wx$getSystemInfoSync.model;

        comApp = appName;
        combrand = _brand;
        commodel = _model;
      } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'QQ') {
        var _qq$getSystemInfoSync = qq.getSystemInfoSync(),
            _appName = _qq$getSystemInfoSync.appName,
            _brand2 = _qq$getSystemInfoSync.brand,
            _model2 = _qq$getSystemInfoSync.model;

        comApp = _appName;
        combrand = _brand2;
        commodel = _model2;
      } else {
        var _tt$getSystemInfoSync = tt.getSystemInfoSync(),
            _appName2 = _tt$getSystemInfoSync.appName,
            _brand3 = _tt$getSystemInfoSync.brand,
            _model3 = _tt$getSystemInfoSync.model;

        comApp = _appName2;
        combrand = _brand3;
        commodel = _model3;
      }

      var param = {
        "did": appGame.userId,
        "package": consts.HTTP_RECORD_PACKAGE,
        "app": comApp,
        "brand": combrand,
        "model": commodel
      }; //console.log("param=="+JSON.stringify(param))

      httpUtils.httpPostParam(consts.HTTP_SPREAD_WORD, param, function (resWord) {
        //console.log("resWord =="+JSON.stringify(resWord))
        if (resWord) {
          if (resWord.code == 200 && resWord.data) {
            appGame.gameServerRoom.wordRid = resWord.rid;
            util.copyText(resWord.data, resWord.rid);
          } else {
            appGame.gameServerRoom.wordRid = '';
          }
        }
      }.bind(this));
    } // let param = {"did":appGame.userId,"package":consts.HTTP_RECORD_PACKAGE,"app":"Toutiao"};
    // cc.log("param=="+JSON.stringify(param))
    // httpUtils.httpPostParam(consts.HTTP_SPREAD_WORD,param,function(resWord){
    //     cc.log("resWord =="+JSON.stringify(resWord))
    //     if(resWord){
    //         if(resWord.data && resWord.code == 200){
    //              appGame.gameServerRoom.wordRid = resWord.rid
    //             let spreadUrl =consts.HTTP_SPREAD_REPORT+'rid='+resWord.rid+'&status='+0;
    //             httpUtils.httpSendRequest(spreadUrl,function(spreadRes){}.bind(this));
    //             util.copyText(resWord.data,resWord.rid);
    //         }else{
    //             appGame.gameServerRoom.wordRid = '';
    //         }
    //     }else{
    //         appGame.gameServerRoom.wordRid = '';
    //     }
    // }.bind(this));

  },
  spreadClose: function spreadClose(rid) {
    var ridUrl = consts.HTTP_SPREAD_CLOSE + rid;
    httpUtils.httpSendRequest(ridUrl, function (spreadRes) {});
  },

  /*
  * url 获取配置url
  * bundle  本地配置bundle
  * json  本地配置文件名
  * config  存在该字段 
  * cb 回调
  */
  getUrlSerConfig: function getUrlSerConfig(url, bundle, json, cb) {
    httpUtils.httpSendRequest(url, function (res) {
      //console.log("room =="+JSON.stringify(res))
      if (res && res.Code == 200) {
        var detailparse = JSON.parse(res.Detail);
        cb(detailparse);
      } else {
        util.loadJSONData(bundle, json, function (data) {
          cb(data);
        }.bind(this));
      }
    }.bind(this));
  },

  /*
  *比较版本号
  */
  compareVersion: function compareVersion(v1, v2) {
    v1 = v1.split('.');
    v2 = v2.split('.');
    var len = Math.max(v1.length, v2.length);

    while (v1.length < len) {
      v1.push('0');
    }

    while (v2.length < len) {
      v2.push('0');
    }

    for (var i = 0; i < len; i++) {
      var num1 = parseInt(v1[i]);
      var num2 = parseInt(v2[i]);

      if (num1 > num2) {
        return 1;
      } else if (num1 < num2) {
        return -1;
      }
    }

    return 0;
  }
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/lucky/lucky.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '70c5be0DtlNPI44MyAR/Qdw', 'lucky');
// gameComon/lucky/lucky.js

"use strict";

var unsealtimeOut;
var bannerTimeOut;
cc.Class({
  "extends": cc.Component,
  properties: {
    touchHide: cc.Node,
    touch: cc.Node,
    leftBtn: cc.Node,
    rightBtn: cc.Node,
    unsealBtn: cc.Button,
    //前往关卡
    closeBtn: cc.Button,
    getBtn: cc.Button,
    redDragon: dragonBones.ArmatureDisplay,
    infoLabel: cc.Label,
    itemReward: cc.Node,
    redLabel: cc.Label,
    openTouch: cc.Node,
    unsealBtnCallback: null,
    closeBtnCallback: null,
    redBagBtnCallback: null,
    blankCallback: null,
    getRewardCallBack: null
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.touchHide.on(cc.Node.EventType.TOUCH_END, this.clickTouchHideCallBack, this);
    this.touch.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
    this.touch.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
    this.openTouch.active = false;
    this.leftBtn.on(cc.Node.EventType.TOUCH_END, this.onLeftTouchEnd, this);
    this.rightBtn.on(cc.Node.EventType.TOUCH_END, this.onRightTouchEnd, this);
    this.unsealBtn.node.active = false;
    this.getBtn.node.active = false;
    this.closeBtn.node.active = false;
    this.closeBtn.node.on(cc.Node.EventType.TOUCH_END, this.clickTouchCloseCallBack, this);
    this.unsealBtn.node.on(cc.Node.EventType.TOUCH_END, this.onUnsealTouchEnd, this);
    this.getBtn.node.on(cc.Node.EventType.TOUCH_END, this.onGetTouchEnd, this);
    this.redDragon.addEventListener(dragonBones.EventObject.COMPLETE, this.animationEventHandler, this);
    this.infoLabel.string = '';
    this.currentIndex = 1;
    this.itemReward.active = false;
  },

  /** 
   * @param opts
   * backCB 放弃按钮回调
   * reviveCB 复活按钮回调
   */
  show: function show(opts) {
    opts = opts || {};

    if (opts.config) {
      this.luckyConfig = opts.config;
    }

    if (opts.info) {
      this.info = opts.info;
    }

    if (opts.unsealCB) {
      this.unsealBtnCallback = opts.unsealCB;
    }

    if (opts.closeCB) {
      this.closeBtnCallback = opts.closeCB;
    }

    if (opts.redbagCB) {
      this.redBagBtnCallback = opts.redbagCB;
    }

    if (opts.blankCB) {
      this.blankCallback = opts.blankCB;
    }

    if (opts.rewardCB) {
      this.getRewardCallBack = opts.rewardCB;
    }

    this.currentIndex = 1;
    this.showRefreshUI(this.info.isResult);
  },
  onDestroy: function onDestroy() {},
  showRefreshUI: function showRefreshUI(showType) {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '幸运大奖',
      content: '打开幸运大奖界面'
    }, function () {});
    this.currentIndex = 1;
    this.level = this.info.level || 1; //this.tollgateConfig = this.luckyConfig.tollgate;

    this.tollgateConfig = appGame.gameServerRoom.commonConfig.luckytollgate;

    if (showType == 3) {
      //是否达到等级  是否已领取
      for (var i = 0; i < this.tollgateConfig.length; i++) {
        if (this.tollgateConfig[i].level > this.level) {
          break;
        } else if (this.tollgateConfig[i].level <= this.level) {
          var index = i + 1;
          var ready = cc.sys.localStorage.getItem("luckReadyReceive" + index);

          if (ready == null || ready == '') {
            cc.sys.localStorage.setItem("luckUnseal" + index, index);
          }

          this.currentIndex = index;
        }
      }
    } else if (showType == 2) {
      //结算 是否达到等级
      for (var _i = 0; _i < this.tollgateConfig.length; _i++) {
        if (this.tollgateConfig[_i].level == this.level) {
          var _index = _i + 1;

          var ready = cc.sys.localStorage.getItem("luckReadyReceive" + _index);

          if (ready == null || ready == '') {
            cc.sys.localStorage.setItem("luckUnseal" + _index, _index);
            this.currentIndex = _index;
            break;
          }
        }
      }
    } else {
      //点击按钮显示
      for (var _i2 = 0; _i2 < this.tollgateConfig.length; _i2++) {
        var _index2 = _i2 + 1;

        var ready = cc.sys.localStorage.getItem("luckReadyReceive" + _index2);

        if (ready == null || ready == '') {
          this.currentIndex = _index2;
          break;
        }
      }
    }

    this.refreshItem(this.currentIndex);
    this.node.active = true;
    bannerTimeOut = setTimeout(function () {
      if (appGame.interstitialAd) {
        appGame.interstitialAd.playAd();
      }

      appGame.banner.playBanner(2);
    }.bind(this), 3000);
    appGame.appBoxAd.playBox(true);
    appGame.blockAd.playBlockad(true, 4);
  },
  refreshItem: function refreshItem(index) {
    underscore.each(this.tollgateConfig, function (key, value) {
      if (value == index - 1) {
        var ready = cc.sys.localStorage.getItem("luckReadyReceive" + index); //是否已经领取

        var unseal = cc.sys.localStorage.getItem("luckUnseal" + index); //是否解封

        if (ready != '' && ready != null) {
          //已经领取了
          this.redDragon.playAnimation('dajiang2', 1);
          this.refreshGetReward(index, 2);
        } else {
          //未领取
          if (unseal != '' && unseal != null) {
            //已经解封
            this.redDragon.playAnimation('dajiang2', 1);
            this.refreshGetReward(index, 3);
          } else {
            //未解封
            this.redDragon.playAnimation('dajiang', 2);
            this.refreshGetReward(index, 4);
          }
        }
      }
    }.bind(this));
  },
  clickTouchHideCallBack: function clickTouchHideCallBack(event) {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '幸运大奖',
      content: '关闭空白页面',
      desc: '点击'
    }, function () {});
    var onoff = this.luckyConfig.luckyOnOff;

    if (onoff && onoff.length > 0 && onoff[1].video == 1) {
      appGame.videoBanner.playVideoAd(1, onoff[1].force, function (isSuc) {
        console.log("看视频成功");
        this.onClientResultPlayAD({
          sceneId: 7,
          eventId: 2,
          isSuccess: true
        });
        this.blankCallback && this.blankCallback();
      }.bind(this));
    } else {
      this.onClientResultPlayAD({
        sceneId: 7,
        eventId: 2,
        isSuccess: true
      });
      this.blankCallback && this.blankCallback();
    }
  },
  clickTouchCloseCallBack: function clickTouchCloseCallBack(event) {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '幸运大奖',
      content: '关闭按钮',
      desc: '点击'
    }, function () {});
    this.onClientResultPlayAD({
      sceneId: 7,
      eventId: 2,
      isSuccess: true
    });
    this.closeBtnCallback && this.closeBtnCallback();
  },
  onTouchStart: function onTouchStart(event) {
    this.startX = event.getLocation().x;
  },
  onTouchEnd: function onTouchEnd(event) {
    var moveX = event.getLocation().x;
    var spaceX = moveX - this.startX;

    if (spaceX <= -10) {
      //向左
      this.onLeftTouchEnd({});
    } else if (spaceX >= 10) {
      //向右
      this.onRightTouchEnd({});
    } else if (this.openTouch.active) {
      //点击redDragon
      this.onRedBagTouchEnd({});
    }
  },
  onLeftTouchEnd: function onLeftTouchEnd(event) {
    if (this.currentIndex <= 1) {
      appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_LOADTIP, {
        content: "您当前已经在第一个了！"
      });
    } else {
      this.currentIndex--;
      this.refreshItem(this.currentIndex);
    }
  },
  onRightTouchEnd: function onRightTouchEnd(event) {
    if (this.currentIndex >= this.tollgateConfig.length) {
      appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_LOADTIP, {
        content: "您当前已经在最后一个了！"
      });
    } else {
      this.currentIndex++;
      this.refreshItem(this.currentIndex);
    }
  },
  //立即挑战
  onUnsealTouchEnd: function onUnsealTouchEnd(event) {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '幸运大奖',
      content: '前往关卡',
      desc: '点击'
    }, function () {});
    this.unsealBtnCallback && this.unsealBtnCallback();
    this.hide();
  },
  //点击红包 看视频领取
  onRedBagTouchEnd: function onRedBagTouchEnd(event) {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '幸运大奖',
      content: '红包看激励视频',
      desc: '点击'
    }, function () {});

    if (this.itemReward.active) {
      return;
    }

    var onoff = this.luckyConfig.luckyOnOff;

    if (onoff && onoff.length > 0 && onoff[0].video == 1) {
      appGame.videoBanner.playVideoAd(1, onoff[0].force, function (isSuc) {
        console.log("看视频成功");
        this.onClientResultPlayAD({
          sceneId: 7,
          eventId: 1,
          isSuccess: true
        });
        this.redBagBtnCallback && this.redBagBtnCallback();
      }.bind(this));
    } else {
      this.onClientResultPlayAD({
        sceneId: 7,
        eventId: 1,
        isSuccess: true
      });
      this.redBagBtnCallback && this.redBagBtnCallback();
    }
  },
  //领取奖励
  onGetTouchEnd: function onGetTouchEnd(event) {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '幸运大奖',
      content: '领取奖励',
      desc: '点击'
    }, function () {});
    cc.log("领取=====" + this.currentIndex);
    this.refreshGetReward(this.currentIndex, 1);
  },
  //领取奖励的刷新  enter 1相当于点击领取  3展示领取界面
  refreshGetReward: function refreshGetReward(index, enter) {
    underscore.each(this.tollgateConfig, function (key, value) {
      if (value == index - 1) {
        if (enter == 1) {
          this.getRewardCallBack && this.getRewardCallBack(key.reward.itemId, key.reward.count);
        }

        this.itemReward.getChildByName('item').getComponent('item').init(key.reward.itemId);
        this.itemReward.getChildByName('count').getComponent(cc.Label).string = '×' + key.reward.count;

        if (enter == 1) {
          cc.log("index===" + index);
          this.redLabel.node.active = true;
          this.itemReward.active = false;
          this.redDragon.playAnimation('dajiang2', 1);
          cc.sys.localStorage.setItem("luckReadyReceive" + index, index);
          this.infoLabel.string = key.reward.info;

          for (var i = 0; i < this.tollgateConfig.length; i++) {
            var tempIndex = i + 1;
            var seal = cc.sys.localStorage.getItem("luckUnseal" + tempIndex);

            if (seal == '' || seal == null) {
              this.currentIndex = tempIndex;
              this.redDragon.playAnimation('dajiang', 2);
              this.refreshGetReward(tempIndex, 4);
              this.hide();
              return;
            }
          }

          var isHad = 0;

          for (var _i3 = 0; _i3 < this.tollgateConfig.length; _i3++) {
            var _tempIndex = _i3 + 1;

            var receive = cc.sys.localStorage.getItem("luckReadyReceive" + _tempIndex);

            if (receive == '' || receive == null) {
              this.currentIndex = _tempIndex;
              this.redDragon.playAnimation('dajiang2', 1);
              this.refreshGetReward(_tempIndex, 3);
              this.hide();
              return;
            } else {
              isHad++;
            }
          }

          if (isHad == this.tollgateConfig.length) {
            for (var _i4 = 0; _i4 < this.tollgateConfig.length; _i4++) {
              var _tempIndex2 = _i4 + 1;

              cc.sys.localStorage.removeItem("luckReadyReceive" + _tempIndex2);
              cc.sys.localStorage.removeItem("luckUnseal" + _tempIndex2);
            }

            this.showRefreshUI(1);
            this.hide();
          } else {
            this.hide();
          }
        } else if (enter == 2) {
          this.openTouch.active = false;
          this.redLabel.node.active = false;
          this.itemReward.active = true;
          this.getBtn.node.active = true;
          this.closeBtn.node.active = false;
          this.unsealBtn.node.active = false;
          this.getBtn.interactable = false;
          this.getBtn.node.off(cc.Node.EventType.TOUCH_END, this.onGetTouchEnd, this);
          this.getBtn.node.getChildByName('label').getComponent(cc.Label).string = "已领取";
          this.infoLabel.string = '奖励已领取';
        } else if (enter == 3) {
          this.openTouch.active = false;
          this.redLabel.node.active = false;
          this.itemReward.active = true;
          this.getBtn.node.active = true;
          this.closeBtn.node.active = false;
          this.unsealBtn.node.active = false;
          this.getBtn.interactable = true;
          this.getBtn.node.on(cc.Node.EventType.TOUCH_END, this.onGetTouchEnd, this);
          this.getBtn.node.getChildByName('label').getComponent(cc.Label).string = "领取";
          this.infoLabel.string = "恭喜获得";
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '幸运大奖',
            content: '恭喜获得弹窗'
          }, function () {});
        } else if (enter == 4) {
          this.redLabel.node.active = true;
          this.itemReward.active = false;
          this.getBtn.node.active = false;
          this.openTouch.active = true;
          this.openTouch.scale = 1.4;
          this.openTouch.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(0.5, 1.2), cc.scaleTo(0.5, 1.5))));
          var sealShow = this.luckyConfig.luckUnseal;

          if (sealShow && sealShow.show == 1) {
            var time = sealShow.delay * 1000;
            unsealtimeOut = setTimeout(function () {
              this.closeBtn.node.active = true;
              this.unsealBtn.node.active = true;
            }.bind(this), time);
          } else {
            this.closeBtn.node.active = false;
            this.unsealBtn.node.active = false;
          }

          this.infoLabel.string = key.reward.info;
        }
      }
    }.bind(this));
  },
  animationEventHandler: function animationEventHandler(event) {
    if (event.type === dragonBones.EventObject.COMPLETE) {
      if (event.animationState.name === "dajiang") {
        this.redDragon.playAnimation('dajiang1', 0);
      }
    }
  },
  onClientResultPlayAD: function onClientResultPlayAD(data) {
    if (data.sceneId == 7) {
      if (data.isSuccess) {
        if (data.eventId == 1) {
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '幸运大奖',
            content: '红包看激励视频',
            desc: '播放完成'
          }, function () {});
          cc.sys.localStorage.setItem("luckUnseal" + this.currentIndex, this.currentIndex);
          this.redDragon.playAnimation('dajiang2', 1);
          this.refreshGetReward(this.currentIndex, 3);
        } else if (data.eventId == 2 || data.eventId == 3) {
          if (data.eventId == 3) {
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '幸运大奖',
              content: '关闭界面',
              desc: '播放完成'
            }, function () {});
          }

          this.hide();
        }
      }
    }
  },
  hide: function hide() {
    clearTimeout(unsealtimeOut);
    clearTimeout(bannerTimeOut);
    appGame.banner.playBanner(3);
    appGame.appBoxAd.playBox(false);
    appGame.blockAd.playBlockad(false);
    this.node.removeFromParent();
  },
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/sign/sign.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '739a6M/ioBOG5JpbKXWT2IE', 'sign');
// gameComon/sign/sign.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    signNode: [cc.Node],
    closeBtn: cc.Node,
    signBtn: cc.Node,
    replenishSignBtn: cc.Node,
    closeCallback: null,
    signCallback: null
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.reg = false; //是否已经签到

    this.regArr = [];
    this.closeBtn.on(cc.Node.EventType.TOUCH_END, this.onCloseBtnClicked, this);
    this.signBtn.on(cc.Node.EventType.TOUCH_END, this.onClickSignInBtn, this);
    this.replenishSignBtn.on(cc.Node.EventType.TOUCH_END, this.onClickReplenishSignBtnInBtn, this);
  },
  start: function start() {},

  /**
   * @param opts
   * showType 1 连续性签到  2 累积型签到  3 按照星期签到
   * signItem 签到数据
   */
  show: function show(opts) {
    opts = opts || {};

    if (opts.config && opts.config.type) {
      this.showType = opts.config.type;
    }

    if (opts.config && opts.config.item) {
      this.signItem = opts.config.item;
    }

    if (opts.config) {
      this.signConfig = opts.config;
    }

    if (opts.backCB) {
      this.closeCallback = opts.backCB;
    }

    if (opts.signCB) {
      this.signCallback = opts.signCB;
    }

    this.initData(function () {
      this.showUI();
    }.bind(this));
  },
  initData: function initData(cb) {
    this.days = []; //签到

    if (this.signItem) {
      for (var i = 0; i < this.signItem.length; i++) {
        var isSign = {
          'sign': 0,
          'day': '',
          "signType": this.showType
        };
        this.days.push(isSign);
      }
    }

    this.singnday = []; //上次签到时间

    this.save_data = {}; //cc.sys.localStorage.removeItem('days_sign');

    var day = cc.sys.localStorage.getItem('days_sign');

    if (day) {
      this.days = JSON.parse(day);

      if (this.days) {
        //如果后台配置有改变  数据要重新记录
        var isConfigChange = false;
        var isLastDay = true; //是否是最后一天

        var isPass = true; //是否连续

        var ishadToday = false; //是否有当天的

        var isNextWeek = false; //是否下一周

        if (this.days[0] && this.showType != this.days[0].signType) {
          isConfigChange = true;
        } else {
          var today = this.getTodayDay();

          if (this.showType == 1) {
            //连续签到
            for (var _i = 0; _i < this.days.length; _i++) {
              if (this.days[_i].day == today) {
                ishadToday = true;
                break;
              }
            }

            for (var _i2 = 0; _i2 < this.days.length; _i2++) {
              if (this.days[_i2].sign == 0 && this.days[_i2].day != today) {
                isPass = false;
              }

              if (this.days[_i2].day == today) {
                break;
              }
            }
          } else if (this.showType == 2) {
            //累积签到
            for (var _i3 = 0; _i3 < this.days.length; _i3++) {
              if (this.days[_i3].day == today) {
                isLastDay = false;
                break;
              }
            }
          } else if (this.showType == 3) {
            //按星期签到
            var monthDay = this.weekIndexInMonth();

            for (var _i4 = 0; _i4 < this.days.length; _i4++) {
              if (this.days[_i4].sign == 1 && this.days[_i4].day != monthDay) {
                isNextWeek = true;
                break;
              }
            }
          }
        }

        if (this.showType == 2 && isLastDay || this.showType == 1 && (!isPass || !ishadToday) || this.showType == 3 && isNextWeek || isConfigChange) {
          cc.sys.localStorage.removeItem('days_sign');
          this.days.length = 0;

          for (var _i5 = 0; _i5 < this.signItem.length; _i5++) {
            var _isSign = {
              'sign': 0,
              'day': '',
              "signType": this.showType
            };
            this.days.push(_isSign);
          }
        }
      }
    }

    cb();
  },
  showUI: function showUI() {
    for (var i = 0; i < this.signNode.length; i++) {
      this.signNode[i].active = false;
      this.signNode[i].getChildByName('item').active = false;
      this.signNode[i].getChildByName('New Sprite').active = false;
      this.signNode[i].getChildByName('ok').active = false;
    }

    for (var _i6 = 0; _i6 < this.signItem.length; _i6++) {
      if (this.signItem.length == 3) {
        this.signNode[_i6].y = 60;
      } else {
        if (_i6 < 3) {
          this.signNode[_i6].y = 171.521;
        }
      }

      this.signNode[_i6].active = true;
    }

    for (var _i7 = 0; _i7 < this.signItem.length; _i7++) {
      var itemSingle = this.signItem[_i7];

      if (JSON.stringify(itemSingle) != '{}') {
        this.signNode[_i7].getChildByName('item').getComponent('item').init(itemSingle.itemId);

        this.signNode[_i7].getChildByName('item').active = true;
      } else {
        this.signNode[_i7].getChildByName('New Sprite').active = true;
      }
    }

    if (this.signConfig && this.signConfig.btn1) {
      this.replenishSignBtn.active = this.signConfig.btn1.show;
      this.replenishSignBtn.getChildByName('video').active = this.signConfig.btn1.icon;
    }

    underscore.each(this.days, function (value, key) {
      //console.log(value+"   "+key);
      if (value.sign == 1) {
        this.signNode[key].getChildByName('ok').active = true;
      }
    }.bind(this));

    if (appGame.interstitialAd) {
      appGame.interstitialAd.playAd();
    }

    appGame.banner.playBanner(2);
    appGame.appBoxAd.playBox(true);
    appGame.blockAd.playBlockad(true, 4);
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '签到',
      content: '打开签到界面'
    }, function () {});
  },

  /*
  *补签点击事件
  */
  onClickReplenishSignBtnInBtn: function onClickReplenishSignBtnInBtn(event) {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '签到',
      content: '补签',
      desc: '点击'
    }, function () {});
    var currentReplenishSign = -1;

    if (this.showType == 1 || this.showType == 2) {
      var isFirstSign = false;

      for (var i = 0; i < this.days.length; i++) {
        if (this.days[i].sign == 1) {
          isFirstSign = true;
          break;
        }
      }

      if (!isFirstSign) {
        appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_LOADTIP, {
          content: '当前还未签到，请先签到'
        });
        return;
      }

      var today = this.getTodayDay();
      var replenishSign = [];

      for (var _i8 = 0; _i8 < this.days.length; _i8++) {
        if (today == this.days[_i8].day) {
          break;
        }

        if (this.days[_i8].sign != 1) {
          replenishSign.push(_i8);
        }
      }

      if (replenishSign.length > 0) {
        currentReplenishSign = replenishSign[0];
      }
    } else if (this.showType == 3) {
      var _replenishSign = [];

      for (var _i9 = 0; _i9 < this.days.length; _i9++) {
        var weekDay = this.getWeekDay();

        if (_i9 + 1 == weekDay) {
          break;
        }

        if (this.days[_i9].sign == 0) {
          _replenishSign.push(_i9);
        }
      }

      if (_replenishSign.length > 0) {
        currentReplenishSign = _replenishSign[0];
      }
    }

    var isPlayVideo = false;
    var isForce = true;

    if (this.signConfig) {
      isPlayVideo = this.signConfig.btn1.video;
      isForce = this.signConfig.btn1.force;
    }

    if (isPlayVideo) {
      appGame.videoBanner.playVideoAd(4, isForce, function (isSuc) {
        console.log("看视频成功");

        if (currentReplenishSign != -1) {
          if (this.showType == 1 || this.showType == 2) {
            this.days[currentReplenishSign].sign = 1;
            this.signNode[currentReplenishSign].getChildByName('ok').active = true;
            cc.sys.localStorage.setItem("days_sign", JSON.stringify(this.days));
            this.signSuccessTip(this.signItem[currentReplenishSign], 0);
          } else if (this.showType == 3) {
            this.days[currentReplenishSign].day = this.weekIndexInMonth(); //本月的第几周

            this.days[currentReplenishSign].sign = 1;
            this.signNode[currentReplenishSign].getChildByName('ok').active = true;
            cc.sys.localStorage.setItem("days_sign", JSON.stringify(this.days));
            this.signSuccessTip(this.signItem[currentReplenishSign], 0);
          }
        }
      }.bind(this));
    } else {
      if (currentReplenishSign != -1) {
        if (this.showType == 1 || this.showType == 2) {
          this.days[currentReplenishSign].sign = 1;
          this.signNode[currentReplenishSign].getChildByName('ok').active = true;
          cc.sys.localStorage.setItem("days_sign", JSON.stringify(this.days));
          this.signSuccessTip(this.signItem[currentReplenishSign], 0);
        } else if (this.showType == 3) {
          this.days[currentReplenishSign].day = this.weekIndexInMonth(); //本月的第几周

          this.days[currentReplenishSign].sign = 1;
          this.signNode[currentReplenishSign].getChildByName('ok').active = true;
          cc.sys.localStorage.setItem("days_sign", JSON.stringify(this.days));
          this.signSuccessTip(this.signItem[currentReplenishSign], 0);
        }
      }
    }
  },

  /*
  *签到点击事件
  */
  onClickSignInBtn: function onClickSignInBtn() {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '签到',
      content: '普通签到',
      desc: '点击'
    }, function () {});

    if (this.showType == 1 || this.showType == 2) {
      var isFirstSign = false;

      for (var i = 0; i < this.days.length; i++) {
        if (this.days[i].sign == 1) {
          isFirstSign = true;
          break;
        }
      }

      if (isFirstSign) {
        //有已签到过的
        var today = this.getTodayDay();
        var isSignToday = false;
        var dayIndex = -1;

        for (var _i10 = 0; _i10 < this.days.length; _i10++) {
          if (today == this.days[_i10].day) {
            dayIndex = _i10;

            if (this.days[_i10].sign == 1) {
              isSignToday = true;
              break;
            }
          }

          if (today == this.days[_i10].day && this.days[_i10].sign == 1) {
            isSignToday = true;
            break;
          }
        }

        if (isSignToday) {
          appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_LOADTIP, {
            content: '已签到'
          });
        } else {
          this.days[dayIndex].sign = 1;
          this.signNode[dayIndex].getChildByName('ok').active = true;
          cc.sys.localStorage.setItem("days_sign", JSON.stringify(this.days));
          this.signSuccessTip(this.signItem[dayIndex], 1);
        }
      } else {
        var tempday = '';

        for (var _i11 = 0; _i11 < this.days.length; _i11++) {
          if (_i11 == 0) {
            tempday = this.getTodayDay();
          } else {
            tempday = this.getNextDay(tempday);
          } //cc.log("tempday==="+tempday)


          this.days[_i11].day = tempday;
        }

        this.days[0].sign = 1;
        this.signNode[0].getChildByName('ok').active = true;
        cc.sys.localStorage.setItem("days_sign", JSON.stringify(this.days));
        this.signSuccessTip(this.signItem[0], 1);
      }
    } else if (this.showType == 3) {
      var isSign = true;
      var weekIndex = -1;

      for (var _i12 = 0; _i12 < this.days.length; _i12++) {
        var weekDay = this.getWeekDay();

        if (this.days[_i12].sign == 0 && _i12 + 1 == weekDay) {
          weekIndex = _i12;
          isSign = false;
          break;
        }
      }

      if (!isSign) {
        this.days[weekIndex].day = this.weekIndexInMonth(); //本月的第几周

        this.days[weekIndex].sign = 1;
        this.signNode[weekIndex].getChildByName('ok').active = true;
        cc.sys.localStorage.setItem("days_sign", JSON.stringify(this.days));
        this.signSuccessTip(this.signItem[weekIndex], 1);
      } else {
        //预留接口
        appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_LOADTIP, {
          content: '已签到'
        });
      }
    }
  },
  signSuccessTip: function signSuccessTip(info, iscall) {
    if (JSON.stringify(info) != "{}") {
      //预留接口
      if (iscall) {
        this.signCallback && this.signCallback(info.itemId, info.count);
      }

      if (appGame.gameServerRoom.commonConfig && appGame.gameServerRoom.commonConfig.item) {
        var item = underscore.find(appGame.gameServerRoom.commonConfig.item, function (value) {
          return value.id == info.itemId;
        }.bind(this));

        if (item) {
          appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_LOADTIP, {
            content: '已获得' + item.name + '奖励'
          });
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '签到',
            content: '获取奖励',
            desc: item.name
          }, function () {});
        }
      }
    }
  },
  onCloseBtnClicked: function onCloseBtnClicked() {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '签到',
      content: '关闭签到界面'
    }, function () {});
    appGame.appBoxAd.playBox(false);
    appGame.blockAd.playBlockad(false);
    appGame.banner.playBanner(3);
    this.closeCallback && this.closeCallback();
    this.node.removeFromParent();
  },
  weekIndexInMonth: function weekIndexInMonth() {
    //设置时间为本月的1号
    var date = new Date(new Date(this).setDate(1) || new Date().setDate(1)); //获取今天的日期

    var today = new Date();
    var d = today.getDate();
    var firstWeekDate;

    if (date.getDay() === 0) {
      // 判断1号是周日
      firstWeekDate = 6;
    } else {
      // 判断1号是周一至周六之间
      firstWeekDate = date.getDay() - 1;
    }

    return Math.ceil((d + firstWeekDate) / 7);
  },
  getWeekDay: function getWeekDay() {
    var index = -1;
    var week = new Date().getDay();

    if (week == 0) {
      index = 7;
    } else {
      index = week;
    }

    return index;
  },
  getTodayDay: function getTodayDay() {
    var d = new Date();
    var yy = d.getFullYear();
    var mm = d.getMonth() + 1;
    var dd = d.getDate();
    var todayday = yy + "-";

    if (mm < 10) {
      todayday += "0";
    }

    todayday += mm + "-";

    if (dd < 10) {
      todayday += "0";
    }

    todayday += dd; //cc.log("todayday=="+todayday)

    return todayday;
  },
  getNextDay: function getNextDay(d) {
    d = new Date(d);
    d = +d + 1000 * 60 * 60 * 24;
    d = new Date(d);
    var yy = d.getFullYear();
    var mm = d.getMonth() + 1;
    var dd = d.getDate();
    var nextday = yy + "-";

    if (mm < 10) {
      nextday += "0";
    }

    nextday += mm + "-";

    if (dd < 10) {
      nextday += "0";
    }

    nextday += dd;
    return nextday;
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/network/Message.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fb4e0zpbzJB4YN77Kns7y3M', 'Message');
// framework/network/Message.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.Message = void 0;
var Message = /** @class */ (function () {
    function Message(cmd) {
        this._cmd = cmd;
        this._data = null;
    }
    Message.prototype.addBuilder = function (data) {
        this._data = data.asUint8Array();
    };
    Message.prototype.addString = function (data) {
        this._data = data;
    };
    Message.prototype.pack = function () {
        var build = this.toString();
        var buf = build.asUint8Array();
        var newBuf = new Uint8Array(buf);
        console.log("send message: " + newBuf);
        return newBuf.buffer;
    };
    Message.prototype.toString = function () {
        var build = new flatbuffers.Builder();
        var data = null;
        if (this._data != null)
            data = build.createString(this._data);
        game.Package.startPackage(build);
        game.Package.addCmd(build, this._cmd);
        if (this._data != null)
            game.Package.addData(build, data);
        var pack = game.Package.endPackage(build);
        build.finish(pack);
        return build;
    };
    return Message;
}());
exports.Message = Message;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxuZXR3b3JrXFxNZXNzYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7SUFLQyxpQkFBbUIsR0FBUTtRQUMxQixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQztRQUNoQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztJQUNuQixDQUFDO0lBRU0sNEJBQVUsR0FBakIsVUFBa0IsSUFBeUI7UUFDMUMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDbEMsQ0FBQztJQUVNLDJCQUFTLEdBQWhCLFVBQWlCLElBQVk7UUFDNUIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7SUFDbkIsQ0FBQztJQUVNLHNCQUFJLEdBQVg7UUFDQyxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDNUIsSUFBSSxHQUFHLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQy9CLElBQUksTUFBTSxHQUFHLElBQUksVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pDLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEdBQUcsTUFBTSxDQUFDLENBQUM7UUFDdkMsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDO0lBQ3RCLENBQUM7SUFFTywwQkFBUSxHQUFoQjtRQUNDLElBQUksS0FBSyxHQUFHLElBQUksV0FBVyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3RDLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUNoQixJQUFHLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSTtZQUNwQixJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN0QyxJQUFHLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSTtZQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDbkMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNuQixPQUFPLEtBQUssQ0FBQztJQUNkLENBQUM7SUFDRixjQUFDO0FBQUQsQ0F2Q0EsQUF1Q0MsSUFBQTtBQXZDWSwwQkFBTyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxuZXhwb3J0IGNsYXNzIE1lc3NhZ2Uge1xuXG5cdHByaXZhdGUgX2NtZDogYW55O1xuXHRwcml2YXRlIF9kYXRhOiBhbnk7XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKGNtZDogYW55KSB7XG5cdFx0dGhpcy5fY21kID0gY21kO1xuXHRcdHRoaXMuX2RhdGEgPSBudWxsO1xuXHR9XG5cblx0cHVibGljIGFkZEJ1aWxkZXIoZGF0YTogZmxhdGJ1ZmZlcnMuQnVpbGRlcikge1xuXHRcdHRoaXMuX2RhdGEgPSBkYXRhLmFzVWludDhBcnJheSgpO1xuXHR9XG5cblx0cHVibGljIGFkZFN0cmluZyhkYXRhOiBTdHJpbmcpIHtcblx0XHR0aGlzLl9kYXRhID0gZGF0YTtcblx0fVxuXG5cdHB1YmxpYyBwYWNrKCk6IEFycmF5QnVmZmVyIHtcblx0XHRsZXQgYnVpbGQgPSB0aGlzLnRvU3RyaW5nKCk7XG5cdFx0bGV0IGJ1ZiA9IGJ1aWxkLmFzVWludDhBcnJheSgpO1xuXHRcdGxldCBuZXdCdWYgPSBuZXcgVWludDhBcnJheShidWYpO1xuXHRcdGNvbnNvbGUubG9nKFwic2VuZCBtZXNzYWdlOiBcIiArIG5ld0J1Zik7XG5cdFx0cmV0dXJuIG5ld0J1Zi5idWZmZXI7XG5cdH1cblxuXHRwcml2YXRlIHRvU3RyaW5nKCk6IGZsYXRidWZmZXJzLkJ1aWxkZXIge1xuXHRcdGxldCBidWlsZCA9IG5ldyBmbGF0YnVmZmVycy5CdWlsZGVyKCk7XG5cdFx0bGV0IGRhdGEgPSBudWxsO1xuXHRcdGlmKHRoaXMuX2RhdGEgIT0gbnVsbCkgXG5cdFx0XHRkYXRhID0gYnVpbGQuY3JlYXRlU3RyaW5nKHRoaXMuX2RhdGEpO1xuXHRcdGdhbWUuUGFja2FnZS5zdGFydFBhY2thZ2UoYnVpbGQpO1xuXHRcdGdhbWUuUGFja2FnZS5hZGRDbWQoYnVpbGQsIHRoaXMuX2NtZCk7XG5cdFx0aWYodGhpcy5fZGF0YSAhPSBudWxsKVxuXHRcdFx0Z2FtZS5QYWNrYWdlLmFkZERhdGEoYnVpbGQsIGRhdGEpO1xuXHRcdGxldCBwYWNrID0gZ2FtZS5QYWNrYWdlLmVuZFBhY2thZ2UoYnVpbGQpO1xuXHRcdGJ1aWxkLmZpbmlzaChwYWNrKTtcblx0XHRyZXR1cm4gYnVpbGQ7XG5cdH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/migration/use_v2.0.x_cc.Toggle_event.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '16452nVLYBF9rx0gR7C2AO8', 'use_v2.0.x_cc.Toggle_event');
// migration/use_v2.0.x_cc.Toggle_event.js

"use strict";

/*
 * This script is automatically generated by Cocos Creator and is only compatible with projects prior to v2.1.0.
 * You do not need to manually add this script in any other project.
 * If you don't use cc.Toggle in your project, you can delete this script directly.
 * If your project is hosted in VCS such as git, submit this script together.
 *
 * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0 之前版本的工程，
 * 你无需在任何其它项目中手动添加此脚本。
 * 如果你的项目中没用到 Toggle，可直接删除该脚本。
 * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。
 */
if (cc.Toggle) {
  // Whether the 'toggle' and 'checkEvents' events are fired when 'toggle.check() / toggle.uncheck()' is called in the code
  // 在代码中调用 'toggle.check() / toggle.uncheck()' 时是否触发 'toggle' 与 'checkEvents' 事件
  cc.Toggle._triggerEventInScript_check = true;
}

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcbWlncmF0aW9uXFx1c2VfdjIuMC54X2NjLlRvZ2dsZV9ldmVudC5qcyJdLCJuYW1lcyI6WyJjYyIsIlRvZ2dsZSIsIl90cmlnZ2VyRXZlbnRJblNjcmlwdF9jaGVjayJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBSUEsRUFBRSxDQUFDQyxNQUFQLEVBQWU7QUFDWDtBQUNBO0FBQ0FELEVBQUFBLEVBQUUsQ0FBQ0MsTUFBSCxDQUFVQywyQkFBVixHQUF3QyxJQUF4QztBQUNIIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBUaGlzIHNjcmlwdCBpcyBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBieSBDb2NvcyBDcmVhdG9yIGFuZCBpcyBvbmx5IGNvbXBhdGlibGUgd2l0aCBwcm9qZWN0cyBwcmlvciB0byB2Mi4xLjAuXHJcbiAqIFlvdSBkbyBub3QgbmVlZCB0byBtYW51YWxseSBhZGQgdGhpcyBzY3JpcHQgaW4gYW55IG90aGVyIHByb2plY3QuXHJcbiAqIElmIHlvdSBkb24ndCB1c2UgY2MuVG9nZ2xlIGluIHlvdXIgcHJvamVjdCwgeW91IGNhbiBkZWxldGUgdGhpcyBzY3JpcHQgZGlyZWN0bHkuXHJcbiAqIElmIHlvdXIgcHJvamVjdCBpcyBob3N0ZWQgaW4gVkNTIHN1Y2ggYXMgZ2l0LCBzdWJtaXQgdGhpcyBzY3JpcHQgdG9nZXRoZXIuXHJcbiAqXHJcbiAqIOatpOiEmuacrOeUsSBDb2NvcyBDcmVhdG9yIOiHquWKqOeUn+aIkO+8jOS7heeUqOS6juWFvOWuuSB2Mi4xLjAg5LmL5YmN54mI5pys55qE5bel56iL77yMXHJcbiAqIOS9oOaXoOmcgOWcqOS7u+S9leWFtuWug+mhueebruS4reaJi+WKqOa3u+WKoOatpOiEmuacrOOAglxyXG4gKiDlpoLmnpzkvaDnmoTpobnnm67kuK3msqHnlKjliLAgVG9nZ2xl77yM5Y+v55u05o6l5Yig6Zmk6K+l6ISa5pys44CCXHJcbiAqIOWmguaenOS9oOeahOmhueebruacieaJmOeuoeS6jiBnaXQg562J54mI5pys5bqT77yM6K+35bCG5q2k6ISa5pys5LiA5bm25LiK5Lyg44CCXHJcbiAqL1xyXG5cclxuaWYgKGNjLlRvZ2dsZSkge1xyXG4gICAgLy8gV2hldGhlciB0aGUgJ3RvZ2dsZScgYW5kICdjaGVja0V2ZW50cycgZXZlbnRzIGFyZSBmaXJlZCB3aGVuICd0b2dnbGUuY2hlY2soKSAvIHRvZ2dsZS51bmNoZWNrKCknIGlzIGNhbGxlZCBpbiB0aGUgY29kZVxyXG4gICAgLy8g5Zyo5Luj56CB5Lit6LCD55SoICd0b2dnbGUuY2hlY2soKSAvIHRvZ2dsZS51bmNoZWNrKCknIOaXtuaYr+WQpuinpuWPkSAndG9nZ2xlJyDkuI4gJ2NoZWNrRXZlbnRzJyDkuovku7ZcclxuICAgIGNjLlRvZ2dsZS5fdHJpZ2dlckV2ZW50SW5TY3JpcHRfY2hlY2sgPSB0cnVlO1xyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/gamesys/InfiniteBackground.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ea63dhsLFFNTK51F3JClP8v', 'InfiniteBackground');
// framework/plugin_boosts/gamesys/InfiniteBackground.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var InfiniteBackground = /** @class */ (function (_super) {
    __extends(InfiniteBackground, _super);
    function InfiniteBackground() {
        // LIFE-CYCLE CALLBACKS:
        // onLoad () {}
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bgNode = null;
        _this.camera = null;
        _this.currentNode = null;
        _this.repeatCount = 0;
        return _this;
    }
    InfiniteBackground.prototype.onLoad = function () {
        this.currentNode = this.bgNode;
        this.size = this.currentNode.getContentSize();
        this.nodepool = new cc.NodePool();
    };
    InfiniteBackground.prototype.start = function () {
        if (this.prev == null) {
            this.prev = cc.instantiate(this.bgNode);
            this.node.addChild(this.prev);
            this.prev.y = -this.size.height;
        }
    };
    InfiniteBackground.prototype.reset = function () {
        this.repeatCount = 0;
        //todo :remove all 
        //todo:init all
    };
    InfiniteBackground.prototype.update = function (dt) {
        if (this.currentNode == null)
            return;
        var pos = cc.Vec2.ZERO;
        this.camera.getWorldToCameraPoint(this.currentNode.position, pos);
        var prev = this.prev;
        if (pos.y < 10) {
            // check has next 
            if (this.next == null) {
                this.pre_prev = this.prev;
                this.prev = this.currentNode;
                var road = this.nodepool.get();
                if (road == null)
                    road = cc.instantiate(this.currentNode);
                road.setPosition(0, this.size.height * ++this.repeatCount);
                this.node.addChild(road);
                this.currentNode = road;
                this.camera.getWorldToCameraPoint(road.position, pos);
                this.next = null;
                // console.log("create new road")
            }
        }
        if (pos.y > this.size.height - 10) {
            //remove previous
            if (this.pre_prev) {
                this.nodepool.put(this.pre_prev);
                // console.log("InfiniteBackground : recycle background:" ,this.nodepool.size())
            }
        }
        //todo remove 
    };
    __decorate([
        property(cc.Node)
    ], InfiniteBackground.prototype, "bgNode", void 0);
    __decorate([
        property(cc.Camera)
    ], InfiniteBackground.prototype, "camera", void 0);
    InfiniteBackground = __decorate([
        ccclass
    ], InfiniteBackground);
    return InfiniteBackground;
}(cc.Component));
exports.default = InfiniteBackground;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxnYW1lc3lzXFxJbmZpbml0ZUJhY2tncm91bmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7O0FBRTdGLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQWdELHNDQUFZO0lBQTVEO1FBRUksd0JBQXdCO1FBQ3hCLGVBQWU7UUFIbkIscUVBOEVDO1FBeEVHLFlBQU0sR0FBVyxJQUFJLENBQUM7UUFHdEIsWUFBTSxHQUFZLElBQUksQ0FBQztRQUt2QixpQkFBVyxHQUFXLElBQUksQ0FBQztRQUMzQixpQkFBVyxHQUFHLENBQUMsQ0FBQzs7SUErRHBCLENBQUM7SUExREcsbUNBQU0sR0FBTjtRQUVJLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMvQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDOUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRUQsa0NBQUssR0FBTDtRQUNJLElBQUcsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLEVBQ3BCO1lBQ0ksSUFBSSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUksQ0FBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztTQUNyQztJQUNMLENBQUM7SUFFRCxrQ0FBSyxHQUFMO1FBRUksSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7UUFDckIsbUJBQW1CO1FBQ25CLGVBQWU7SUFDbkIsQ0FBQztJQUVELG1DQUFNLEdBQU4sVUFBUSxFQUFFO1FBRU4sSUFBRyxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUk7WUFBQyxPQUFNO1FBQ2xDLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUMsR0FBRyxDQUFDLENBQUE7UUFDaEUsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNyQixJQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUNkO1lBQ0ksa0JBQWtCO1lBQ2xCLElBQUcsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLEVBQ3BCO2dCQUNJLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztnQkFDMUIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO2dCQUM3QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFBO2dCQUM5QixJQUFHLElBQUksSUFBSSxJQUFJO29CQUNYLElBQUksR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDNUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7Z0JBQzFELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN6QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztnQkFDeEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFDLEdBQUcsQ0FBQyxDQUFBO2dCQUNwRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztnQkFDakIsaUNBQWlDO2FBQ3BDO1NBQ0o7UUFDRCxJQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxFQUNoQztZQUNJLGlCQUFpQjtZQUNqQixJQUFHLElBQUksQ0FBQyxRQUFRLEVBQ2hCO2dCQUNJLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDakMsZ0ZBQWdGO2FBQ25GO1NBQ0o7UUFDRCxjQUFjO0lBQ2xCLENBQUM7SUF2RUQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztzREFDSTtJQUd0QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3NEQUNHO0lBVE4sa0JBQWtCO1FBRHRDLE9BQU87T0FDYSxrQkFBa0IsQ0E4RXRDO0lBQUQseUJBQUM7Q0E5RUQsQUE4RUMsQ0E5RStDLEVBQUUsQ0FBQyxTQUFTLEdBOEUzRDtrQkE5RW9CLGtCQUFrQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXG4vLyBMZWFybiBBdHRyaWJ1dGU6XG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5maW5pdGVCYWNrZ3JvdW5kIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxuICAgIC8vIG9uTG9hZCAoKSB7fVxuXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXG4gICAgYmdOb2RlOmNjLk5vZGUgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLkNhbWVyYSlcbiAgICBjYW1lcmE6Y2MuQ2FtZXJhPSBudWxsO1xuXG4gICAgbmV4dDpjYy5Ob2RlO1xuICAgIHByZXY6Y2MuTm9kZTtcbiAgICBwcmVfcHJldiA6Y2MuTm9kZTtcbiAgICBjdXJyZW50Tm9kZTpjYy5Ob2RlID0gbnVsbDtcbiAgICByZXBlYXRDb3VudCA9IDA7XG5cbiAgICBzaXplIDogY2MuU2l6ZTtcblxuICAgIG5vZGVwb29sOmNjLk5vZGVQb29sO1xuICAgIG9uTG9hZCgpXG4gICAge1xuICAgICAgICB0aGlzLmN1cnJlbnROb2RlID0gdGhpcy5iZ05vZGU7XG4gICAgICAgIHRoaXMuc2l6ZSA9IHRoaXMuY3VycmVudE5vZGUuZ2V0Q29udGVudFNpemUoKTtcbiAgICAgICAgdGhpcy5ub2RlcG9vbCA9IG5ldyBjYy5Ob2RlUG9vbCgpO1xuICAgIH1cblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgaWYodGhpcy5wcmV2ID09IG51bGwpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMucHJldiA9IGNjLmluc3RhbnRpYXRlKHRoaXMuYmdOb2RlKTtcbiAgICAgICAgICAgIHRoaXMubm9kZS5hZGRDaGlsZCh0aGlzLnByZXYpO1xuICAgICAgICAgICAgdGhpcy5wcmV2LnkgPSAgLSB0aGlzLnNpemUuaGVpZ2h0O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVzZXQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5yZXBlYXRDb3VudCA9IDA7XG4gICAgICAgIC8vdG9kbyA6cmVtb3ZlIGFsbCBcbiAgICAgICAgLy90b2RvOmluaXQgYWxsXG4gICAgfVxuICAgIFxuICAgIHVwZGF0ZSAoZHQpIHtcblxuICAgICAgICBpZih0aGlzLmN1cnJlbnROb2RlID09IG51bGwpcmV0dXJuXG4gICAgICAgIGxldCBwb3MgPSBjYy5WZWMyLlpFUk87XG4gICAgICAgIHRoaXMuY2FtZXJhLmdldFdvcmxkVG9DYW1lcmFQb2ludCh0aGlzLmN1cnJlbnROb2RlLnBvc2l0aW9uLHBvcylcbiAgICAgICAgbGV0IHByZXYgPSB0aGlzLnByZXY7XG4gICAgICAgIGlmIChwb3MueSA8IDEwKVxuICAgICAgICB7XG4gICAgICAgICAgICAvLyBjaGVjayBoYXMgbmV4dCBcbiAgICAgICAgICAgIGlmKHRoaXMubmV4dCA9PSBudWxsKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMucHJlX3ByZXYgPSB0aGlzLnByZXY7XG4gICAgICAgICAgICAgICAgdGhpcy5wcmV2ID0gdGhpcy5jdXJyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICBsZXQgcm9hZCA9IHRoaXMubm9kZXBvb2wuZ2V0KClcbiAgICAgICAgICAgICAgICBpZihyb2FkID09IG51bGwpXG4gICAgICAgICAgICAgICAgICAgIHJvYWQgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLmN1cnJlbnROb2RlKTtcbiAgICAgICAgICAgICAgICByb2FkLnNldFBvc2l0aW9uKDAsdGhpcy5zaXplLmhlaWdodCAqICsrdGhpcy5yZXBlYXRDb3VudCk7XG4gICAgICAgICAgICAgICAgdGhpcy5ub2RlLmFkZENoaWxkKHJvYWQpO1xuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudE5vZGUgPSByb2FkO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FtZXJhLmdldFdvcmxkVG9DYW1lcmFQb2ludChyb2FkLnBvc2l0aW9uLHBvcylcbiAgICAgICAgICAgICAgICB0aGlzLm5leHQgPSBudWxsO1xuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiY3JlYXRlIG5ldyByb2FkXCIpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYocG9zLnkgPiB0aGlzLnNpemUuaGVpZ2h0IC0gMTApXG4gICAgICAgIHtcbiAgICAgICAgICAgIC8vcmVtb3ZlIHByZXZpb3VzXG4gICAgICAgICAgICBpZih0aGlzLnByZV9wcmV2KVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMubm9kZXBvb2wucHV0KHRoaXMucHJlX3ByZXYpO1xuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiSW5maW5pdGVCYWNrZ3JvdW5kIDogcmVjeWNsZSBiYWNrZ3JvdW5kOlwiICx0aGlzLm5vZGVwb29sLnNpemUoKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvL3RvZG8gcmVtb3ZlIFxuICAgIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/result/result.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '33fa5PoD/RJD6LgBnT5ywP1', 'result');
// gameComon/result/result.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    title: cc.Label,
    contentLabel: cc.Label,
    nextBtn: cc.Button,
    backBtn: cc.Button,
    nextBtnCallback: null,
    backBtnCallback: null
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.nextBtn.node.on(cc.Node.EventType.TOUCH_END, this.onNextBtnClicked, this);
    this.backBtn.node.on(cc.Node.EventType.TOUCH_END, this.onBackBtnClicked, this);
  },
  start: function start() {},

  /**
   * @param opts
   * nextCB 下一局按钮回调
   * backCB 重玩本关按钮回调
   */
  show: function show(opts) {
    opts = opts || {};

    if (opts.nextCB) {
      this.nextBtnCallback = opts.nextCB;
    }

    if (opts.backCB) {
      this.backBtnCallback = opts.backCB;
    }

    if (opts.info) {
      this.info = opts.info;
    }

    if (opts.config) {
      if (this.info.isWin) {
        this.resultConfig = opts.config.win;
      } else {
        this.resultConfig = opts.config.fail;
      }
    }

    this.refreshUI();
  },
  refreshUI: function refreshUI() {
    if (this.info) {
      this.title.string = this.info.isWin ? this.resultConfig.title : this.resultConfig.title;
      this.contentLabel.string = this.info.isWin ? this.resultConfig.content : this.resultConfig.content;
      this.nextBtn.node.getChildByName('Background').getChildByName('New Label').getComponent(cc.Label).string = this.resultConfig.btn1.name;
      this.backBtn.node.getChildByName('Background').getChildByName('New Label').getComponent(cc.Label).string = this.resultConfig.btn2.name;
      this.nextBtn.node.getChildByName('Background').getChildByName('icon').active = this.resultConfig.btn1.icon;
      this.backBtn.node.getChildByName('Background').getChildByName('icon').active = this.resultConfig.btn2.icon;
    }

    if (appGame.interstitialAd) {
      appGame.interstitialAd.playAd();
    }

    appGame.banner.playBanner(2);
    appGame.gridAd.playGridAd(true);
    appGame.nativeAd.playNativeAd(true);
    appGame.appBoxAd.playBox(true);
    appGame.blockAd.playBlockad(true, 4);
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '结算',
      content: '打开结算界面'
    }, function () {});
  },
  onNextBtnClicked: function onNextBtnClicked(event) {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '结算',
      content: '下一关',
      desc: '点击'
    }, function () {});
    var isPlayVideo = false;
    var isForce = true;

    if (this.resultConfig) {
      isPlayVideo = this.resultConfig.btn1.video;
      isForce = this.resultConfig.btn1.force;
    }

    if (isPlayVideo) {
      appGame.videoBanner.playVideoAd(3, isForce, function (isSuc) {
        this.nextBtnCallback && this.nextBtnCallback(this.info.isWin);
        this.hide();
      }.bind(this));
    } else {
      this.nextBtnCallback && this.nextBtnCallback(this.info.isWin);
      this.hide();
    }
  },
  onBackBtnClicked: function onBackBtnClicked(event) {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '结算',
      content: '再来一局+点击'
    }, function () {});
    var isPlayVideo = false;
    var isForce = true;

    if (this.resultConfig) {
      isPlayVideo = this.resultConfig.btn2.video;
      isForce = this.resultConfig.btn2.force;
    }

    if (isPlayVideo) {
      //配置需要播放视频
      appGame.videoBanner.playVideoAd(3, isForce, function (isSuc) {
        console.log("看视频成功");
        this.backBtnCallback && this.backBtnCallback(this.info.isWin);
        this.hide();
      }.bind(this));
    } else {
      //不用播放视频
      this.backBtnCallback && this.backBtnCallback(this.info.isWin);
      this.hide();
    }
  },
  hide: function hide() {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '结算',
      content: '关闭结算界面'
    }, function () {});
    appGame.banner.playBanner(3);
    appGame.gridAd.playGridAd(false);
    appGame.nativeAd.playNativeAd(false);
    appGame.appBoxAd.playBox(false);
    appGame.blockAd.playBlockad(false);
    this.node.removeFromParent();
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxyZXN1bHRcXHJlc3VsdC5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsInRpdGxlIiwiTGFiZWwiLCJjb250ZW50TGFiZWwiLCJuZXh0QnRuIiwiQnV0dG9uIiwiYmFja0J0biIsIm5leHRCdG5DYWxsYmFjayIsImJhY2tCdG5DYWxsYmFjayIsIm9uTG9hZCIsIm5vZGUiLCJvbiIsIk5vZGUiLCJFdmVudFR5cGUiLCJUT1VDSF9FTkQiLCJvbk5leHRCdG5DbGlja2VkIiwib25CYWNrQnRuQ2xpY2tlZCIsInN0YXJ0Iiwic2hvdyIsIm9wdHMiLCJuZXh0Q0IiLCJiYWNrQ0IiLCJpbmZvIiwiY29uZmlnIiwiaXNXaW4iLCJyZXN1bHRDb25maWciLCJ3aW4iLCJmYWlsIiwicmVmcmVzaFVJIiwic3RyaW5nIiwiY29udGVudCIsImdldENoaWxkQnlOYW1lIiwiZ2V0Q29tcG9uZW50IiwiYnRuMSIsIm5hbWUiLCJidG4yIiwiYWN0aXZlIiwiaWNvbiIsImFwcEdhbWUiLCJpbnRlcnN0aXRpYWxBZCIsInBsYXlBZCIsImJhbm5lciIsInBsYXlCYW5uZXIiLCJncmlkQWQiLCJwbGF5R3JpZEFkIiwibmF0aXZlQWQiLCJwbGF5TmF0aXZlQWQiLCJhcHBCb3hBZCIsInBsYXlCb3giLCJibG9ja0FkIiwicGxheUJsb2NrYWQiLCJodHRwVXRpbHMiLCJodHRwUG9zdCIsImNvbnN0cyIsIkhUVFBfUkVDT1JEX1NFUlZFUiIsImV2ZW50IiwiZGVzYyIsImlzUGxheVZpZGVvIiwiaXNGb3JjZSIsInZpZGVvIiwiZm9yY2UiLCJ2aWRlb0Jhbm5lciIsInBsYXlWaWRlb0FkIiwiaXNTdWMiLCJoaWRlIiwiYmluZCIsImNvbnNvbGUiLCJsb2ciLCJyZW1vdmVGcm9tUGFyZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBQSxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNE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QWlCQyxPQUFqQixDQUF5QixLQUF6QjtBQUNBVixJQUFBQSxPQUFPLENBQUNXLE9BQVIsQ0FBZ0JDLFdBQWhCLENBQTRCLEtBQTVCO0FBQ0EsU0FBS3hDLElBQUwsQ0FBVTBELGdCQUFWO0FBQ0gsR0ExSEksQ0E0SEw7O0FBNUhLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgdGl0bGU6Y2MuTGFiZWwsXHJcbiAgICAgICAgY29udGVudExhYmVsOmNjLkxhYmVsLFxyXG4gICAgICAgIG5leHRCdG46Y2MuQnV0dG9uLFxyXG4gICAgICAgIGJhY2tCdG46Y2MuQnV0dG9uLFxyXG4gICAgICAgIG5leHRCdG5DYWxsYmFjazogbnVsbCxcclxuICAgICAgICBiYWNrQnRuQ2FsbGJhY2s6IG51bGxcclxuICAgIH0sXHJcblxyXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICB0aGlzLm5leHRCdG4ubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsdGhpcy5vbk5leHRCdG5DbGlja2VkLHRoaXMpO1xyXG4gICAgICAgIHRoaXMuYmFja0J0bi5ub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCx0aGlzLm9uQmFja0J0bkNsaWNrZWQsdGhpcyk7XHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuXHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIG9wdHNcclxuICAgICAqIG5leHRDQiDkuIvkuIDlsYDmjInpkq7lm57osINcclxuICAgICAqIGJhY2tDQiDph43njqnmnKzlhbPmjInpkq7lm57osINcclxuICAgICAqL1xyXG4gICAgIHNob3c6IGZ1bmN0aW9uIChvcHRzKSB7XHJcbiAgICAgICAgb3B0cyA9IG9wdHMgfHwge307XHJcbiAgICAgICAgaWYob3B0cy5uZXh0Q0Ipe1xyXG4gICAgICAgICAgICB0aGlzLm5leHRCdG5DYWxsYmFjayA9IG9wdHMubmV4dENCO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihvcHRzLmJhY2tDQil7XHJcbiAgICAgICAgICAgIHRoaXMuYmFja0J0bkNhbGxiYWNrID0gb3B0cy5iYWNrQ0I7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKG9wdHMuaW5mbyl7XHJcbiAgICAgICAgICAgIHRoaXMuaW5mbyA9IG9wdHMuaW5mbztcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYob3B0cy5jb25maWcpe1xyXG4gICAgICAgICAgICBpZih0aGlzLmluZm8uaXNXaW4pe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZXN1bHRDb25maWcgPSBvcHRzLmNvbmZpZy53aW47XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZXN1bHRDb25maWcgPSBvcHRzLmNvbmZpZy5mYWlsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucmVmcmVzaFVJKCk7XHJcbiAgICB9LFxyXG5cclxuICAgIHJlZnJlc2hVSSgpe1xyXG4gICAgICAgIGlmKHRoaXMuaW5mbyl7XHJcbiAgICAgICAgICAgIHRoaXMudGl0bGUuc3RyaW5nID0gdGhpcy5pbmZvLmlzV2luP3RoaXMucmVzdWx0Q29uZmlnLnRpdGxlOnRoaXMucmVzdWx0Q29uZmlnLnRpdGxlO1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRlbnRMYWJlbC5zdHJpbmcgPSB0aGlzLmluZm8uaXNXaW4/dGhpcy5yZXN1bHRDb25maWcuY29udGVudDp0aGlzLnJlc3VsdENvbmZpZy5jb250ZW50O1xyXG5cclxuICAgICAgICAgICAgdGhpcy5uZXh0QnRuLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoJ0JhY2tncm91bmQnKS5nZXRDaGlsZEJ5TmFtZSgnTmV3IExhYmVsJykuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKS5zdHJpbmcgPSB0aGlzLnJlc3VsdENvbmZpZy5idG4xLm5hbWU7XHJcbiAgICAgICAgICAgIHRoaXMuYmFja0J0bi5ub2RlLmdldENoaWxkQnlOYW1lKCdCYWNrZ3JvdW5kJykuZ2V0Q2hpbGRCeU5hbWUoJ05ldyBMYWJlbCcpLmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gdGhpcy5yZXN1bHRDb25maWcuYnRuMi5uYW1lO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5uZXh0QnRuLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoJ0JhY2tncm91bmQnKS5nZXRDaGlsZEJ5TmFtZSgnaWNvbicpLmFjdGl2ZSA9IHRoaXMucmVzdWx0Q29uZmlnLmJ0bjEuaWNvbjtcclxuICAgICAgICAgICAgdGhpcy5iYWNrQnRuLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoJ0JhY2tncm91bmQnKS5nZXRDaGlsZEJ5TmFtZSgnaWNvbicpLmFjdGl2ZSA9IHRoaXMucmVzdWx0Q29uZmlnLmJ0bjIuaWNvbjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoYXBwR2FtZS5pbnRlcnN0aXRpYWxBZCl7XHJcbiAgICAgICAgICAgIGFwcEdhbWUuaW50ZXJzdGl0aWFsQWQucGxheUFkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFwcEdhbWUuYmFubmVyLnBsYXlCYW5uZXIoMik7XHJcbiAgICAgICAgYXBwR2FtZS5ncmlkQWQucGxheUdyaWRBZCh0cnVlKTtcclxuICAgICAgICBhcHBHYW1lLm5hdGl2ZUFkLnBsYXlOYXRpdmVBZCh0cnVlKTtcclxuICAgICAgICBhcHBHYW1lLmFwcEJveEFkLnBsYXlCb3godHJ1ZSk7XHJcbiAgICAgICAgYXBwR2FtZS5ibG9ja0FkLnBsYXlCbG9ja2FkKHRydWUsNCk7XHJcbiAgICAgICAgaHR0cFV0aWxzLmh0dHBQb3N0KGNvbnN0cy5IVFRQX1JFQ09SRF9TRVJWRVIse3RpdGxlOifnu5PnrpcnLGNvbnRlbnQ6J+aJk+W8gOe7k+eul+eVjOmdoid9LGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG5cclxuICAgIG9uTmV4dEJ0bkNsaWNrZWQoZXZlbnQpe1xyXG4gICAgICAgIGh0dHBVdGlscy5odHRwUG9zdChjb25zdHMuSFRUUF9SRUNPUkRfU0VSVkVSLHt0aXRsZTon57uT566XJyxjb250ZW50OifkuIvkuIDlhbMnLGRlc2M6J+eCueWHuyd9LGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgbGV0IGlzUGxheVZpZGVvID0gZmFsc2U7XHJcbiAgICAgICAgbGV0IGlzRm9yY2UgPSB0cnVlO1xyXG4gICAgICAgIGlmKHRoaXMucmVzdWx0Q29uZmlnKXtcclxuICAgICAgICAgICAgaXNQbGF5VmlkZW8gPSB0aGlzLnJlc3VsdENvbmZpZy5idG4xLnZpZGVvO1xyXG4gICAgICAgICAgICBpc0ZvcmNlID0gdGhpcy5yZXN1bHRDb25maWcuYnRuMS5mb3JjZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoaXNQbGF5VmlkZW8pe1xyXG4gICAgICAgICAgICBhcHBHYW1lLnZpZGVvQmFubmVyLnBsYXlWaWRlb0FkKDMsaXNGb3JjZSxmdW5jdGlvbihpc1N1Yyl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5leHRCdG5DYWxsYmFjayAmJiB0aGlzLm5leHRCdG5DYWxsYmFjayh0aGlzLmluZm8uaXNXaW4pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oaWRlKCk7XHJcbiAgICAgICAgICAgIH0uYmluZCh0aGlzKSk7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMubmV4dEJ0bkNhbGxiYWNrICYmIHRoaXMubmV4dEJ0bkNhbGxiYWNrKHRoaXMuaW5mby5pc1dpbik7XHJcbiAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgb25CYWNrQnRuQ2xpY2tlZChldmVudCl7XHJcbiAgICAgICAgaHR0cFV0aWxzLmh0dHBQb3N0KGNvbnN0cy5IVFRQX1JFQ09SRF9TRVJWRVIse3RpdGxlOifnu5PnrpcnLGNvbnRlbnQ6J+WGjeadpeS4gOWxgCvngrnlh7snfSxmdW5jdGlvbigpe1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGxldCBpc1BsYXlWaWRlbyA9IGZhbHNlO1xyXG4gICAgICAgIGxldCBpc0ZvcmNlID0gdHJ1ZTtcclxuICAgICAgICBpZih0aGlzLnJlc3VsdENvbmZpZyl7XHJcbiAgICAgICAgICAgIGlzUGxheVZpZGVvID0gdGhpcy5yZXN1bHRDb25maWcuYnRuMi52aWRlbztcclxuICAgICAgICAgICAgaXNGb3JjZSA9IHRoaXMucmVzdWx0Q29uZmlnLmJ0bjIuZm9yY2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGlmKGlzUGxheVZpZGVvKXsvL+mFjee9rumcgOimgeaSreaUvuinhumikVxyXG4gICAgICAgICAgICBhcHBHYW1lLnZpZGVvQmFubmVyLnBsYXlWaWRlb0FkKDMsaXNGb3JjZSxmdW5jdGlvbihpc1N1Yyl7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIueci+inhumikeaIkOWKn1wiKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5iYWNrQnRuQ2FsbGJhY2sgJiYgdGhpcy5iYWNrQnRuQ2FsbGJhY2sodGhpcy5pbmZvLmlzV2luKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgICAgICB9LmJpbmQodGhpcykpO1xyXG4gICAgICAgIH1lbHNley8v5LiN55So5pKt5pS+6KeG6aKRXHJcbiAgICAgICAgICAgIHRoaXMuYmFja0J0bkNhbGxiYWNrICYmIHRoaXMuYmFja0J0bkNhbGxiYWNrKHRoaXMuaW5mby5pc1dpbik7XHJcbiAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBoaWRlKCl7XHJcbiAgICAgICAgaHR0cFV0aWxzLmh0dHBQb3N0KGNvbnN0cy5IVFRQX1JFQ09SRF9TRVJWRVIse3RpdGxlOifnu5PnrpcnLGNvbnRlbnQ6J+WFs+mXree7k+eul+eVjOmdoid9LGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgYXBwR2FtZS5iYW5uZXIucGxheUJhbm5lcigzKTtcclxuICAgICAgICBhcHBHYW1lLmdyaWRBZC5wbGF5R3JpZEFkKGZhbHNlKTtcclxuICAgICAgICBhcHBHYW1lLm5hdGl2ZUFkLnBsYXlOYXRpdmVBZChmYWxzZSk7XHJcbiAgICAgICAgYXBwR2FtZS5hcHBCb3hBZC5wbGF5Qm94KGZhbHNlKTtcclxuICAgICAgICBhcHBHYW1lLmJsb2NrQWQucGxheUJsb2NrYWQoZmFsc2UpO1xyXG4gICAgICAgIHRoaXMubm9kZS5yZW1vdmVGcm9tUGFyZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gdXBkYXRlIChkdCkge30sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/ad/banner.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4d62c7SXMdKHaht/20V3tyM', 'banner');
// gameComon/scripts/ad/banner.js

"use strict";

var AppGame = require("../model/appGame");

var Banner = cc.Class({
  properties: {},
  ctor: function ctor() {
    this.instance = null;
  },
  statics: {
    create: function create(data) {
      if (!this.instance) {
        this.instance = new Banner();
        this.instance.initWithData(data);
        return this.instance;
      }
    }
  },
  initWithData: function initWithData(data) {
    this.targetBannerAdWidth = 200;

    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
      //头条平台
      var _tt$getSystemInfoSync = tt.getSystemInfoSync(),
          windowWidth = _tt$getSystemInfoSync.windowWidth,
          windowHeight = _tt$getSystemInfoSync.windowHeight;

      this.width = windowWidth;
      this.height = windowHeight;
      this.adId = '3o8m16pp3e54cqcd5t';

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.bannerId && appGame.gameServerRoom.adConfig.bannerId.toutiao) {
        this.adId = appGame.gameServerRoom.adConfig.bannerId.toutiao.adUnitId;
      }

      console.log("banner 第一次创建");
      this.globalData = {
        bannerAd: tt.createBannerAd({
          adUnitId: this.adId,
          //adIntervals:30,
          style: {
            width: this.targetBannerAdWidth,
            top: this.height - this.targetBannerAdWidth / 16 * 9,
            // 根据系统约定尺寸计算出广告高度
            left: (this.width - this.targetBannerAdWidth) / 2
          }
        })
      };
      this.refreshSize();
      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '广告位banner',
        content: '创建成功',
        desc: this.adId
      }, function () {});
    } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'QQ') {
      var _qq$getSystemInfoSync = qq.getSystemInfoSync(),
          _windowWidth = _qq$getSystemInfoSync.windowWidth,
          _windowHeight = _qq$getSystemInfoSync.windowHeight;

      this.width = _windowWidth;
      this.height = _windowHeight;
      this.adId = '4ef215ca5af9c3b454e9d22a676f7992';

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.bannerId && appGame.gameServerRoom.adConfig.bannerId.QQ) {
        this.adId = appGame.gameServerRoom.adConfig.bannerId.QQ.adUnitId;
      }

      console.log("banner 第一次创建"); //this.targetBannerAdWidth = 300;

      this.globalData = {
        bannerAd: qq.createBannerAd({
          adUnitId: this.adId,
          style: {
            //width: this.targetBannerAdWidth,
            //top: this.height - (this.targetBannerAdWidth / 16) * 9, // 根据系统约定尺寸计算出广告高度
            //left: (this.width - this.targetBannerAdWidth) / 2,
            width: this.targetBannerAdWidth,
            top: this.height - this.targetBannerAdWidth / 16 * 9,
            // 根据系统约定尺寸计算出广告高度
            left: (this.width - this.targetBannerAdWidth) / 2
          }
        })
      };
      this.refreshSize();
      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '广告位banner',
        content: '创建成功',
        desc: this.adId
      }, function () {});
    } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'WX') {
      var _wx$getSystemInfoSync = wx.getSystemInfoSync(),
          _windowWidth2 = _wx$getSystemInfoSync.windowWidth,
          _windowHeight2 = _wx$getSystemInfoSync.windowHeight;

      this.width = _windowWidth2;
      this.height = _windowHeight2;
      this.adId = '4ef215ca5af9c3b454e9d22a676f7992';

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.bannerId && appGame.gameServerRoom.adConfig.bannerId.WX) {
        this.adId = appGame.gameServerRoom.adConfig.bannerId.WX.adUnitId;
      }

      console.log("banner 第一次创建");
      this.globalData = {
        bannerAd: wx.createBannerAd({
          adUnitId: this.adId,
          style: {
            width: this.targetBannerAdWidth,
            top: this.height - this.targetBannerAdWidth / 16 * 9,
            // 根据系统约定尺寸计算出广告高度
            left: (this.width - this.targetBannerAdWidth) / 2
          }
        })
      };
      this.refreshSize();
      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '广告位banner',
        content: '创建成功',
        desc: this.adId
      }, function () {});
    }
  },
  scheduleCallBack: function scheduleCallBack() {
    console.log("n秒后刷新");
    this.playBanner(3);
    this.playBanner(2);
  },

  /*
  *sceneId 1 普通的展示   2 N秒刷新展示   3 隐藏
  */
  playBanner: function playBanner(sceneId, refreshTime) {
    var _this = this;

    if (refreshTime === void 0) {
      refreshTime = 30;
    }

    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME && appGame.gameServerRoom.gameConfigData && appGame.gameServerRoom.gameConfigData.isbanner) {
      console.log("banner return");
      return;
    }

    cc.director.getScheduler().enableForTarget(this);

    if (sceneId != 3) {
      if (sceneId == 2) {
        cc.director.getScheduler().schedule(this.scheduleCallBack, this, refreshTime);
      } else {
        cc.director.getScheduler().unschedule(this.scheduleCallBack, this);
      }

      if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
        //头条平台
        if (this.globalData && this.globalData.bannerAd) {
          console.log("banner 隐藏");
        } else {
          console.log("banner 创建");
          this.globalData = {
            bannerAd: tt.createBannerAd({
              adUnitId: this.adId,
              //adIntervals:30,
              style: {
                width: this.targetBannerAdWidth,
                top: this.height - this.targetBannerAdWidth / 16 * 9,
                // 根据系统约定尺寸计算出广告高度
                left: (this.width - this.targetBannerAdWidth) / 2
              }
            })
          };
          this.refreshSize();
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '广告位banner',
            content: '创建成功',
            desc: this.adId
          }, function () {});
        }
      } else if (cc.sys.platform == cc.sys.BAIDU_GAME) {
        //百度
        if (this.globalData && this.globalData.bannerAd) {
          this.globalData.bannerAd.destroy();
          this.globalData.bannerAd = null;
        }

        var _swan$getSystemInfoSy = swan.getSystemInfoSync(),
            windowWidth = _swan$getSystemInfoSy.windowWidth,
            windowHeight = _swan$getSystemInfoSy.windowHeight;

        this.width = windowWidth;
        this.height = windowHeight;

        if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.bannerId && appGame.gameServerRoom.adConfig.bannerId.baidu) {
          this.adId = appGame.gameServerRoom.adConfig.bannerId.baidu.adUnitId;
        }

        if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.bannerId && appGame.gameServerRoom.adConfig.bannerId.baidu) {
          this.appId = appGame.gameServerRoom.adConfig.bannerId.baidu.appSid;
        }

        this.globalData = {
          bannerAd: swan.createBannerAd({
            adUnitId: this.adId,
            appSid: this.appId,
            style: {
              width: this.width,
              top: this.height - this.targetBannerAdWidth / 16 * 9,
              // 根据系统约定尺寸计算出广告高度
              left: (this.width - this.targetBannerAdWidth) / 2
            }
          })
        };
        this.refreshSize();
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '广告位banner',
          content: '创建成功',
          desc: this.adId
        }, function () {});
      } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'QQ') {
        //QQ
        if (this.globalData && this.globalData.bannerAd) {
          this.globalData.bannerAd.destroy();
          this.globalData.bannerAd = null;
        }

        var _qq$getSystemInfoSync2 = qq.getSystemInfoSync(),
            _windowWidth3 = _qq$getSystemInfoSync2.windowWidth,
            _windowHeight3 = _qq$getSystemInfoSync2.windowHeight;

        this.width = _windowWidth3;
        this.height = _windowHeight3;

        if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.bannerId && appGame.gameServerRoom.adConfig.bannerId.QQ) {
          this.adId = appGame.gameServerRoom.adConfig.bannerId.QQ.adUnitId;
        }

        this.globalData = {
          bannerAd: qq.createBannerAd({
            adUnitId: this.adId,
            style: {
              width: this.width,
              top: this.height - this.targetBannerAdWidth / 16 * 9,
              // 根据系统约定尺寸计算出广告高度
              left: (this.width - this.targetBannerAdWidth) / 2
            }
          })
        };
        this.refreshSize();
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '广告位banner',
          content: '创建成功',
          desc: this.adId
        }, function () {});
      }

      if (this.globalData && this.globalData.bannerAd) {
        console.log("播放banner广告");

        if (cc.sys.platform == cc.sys.BAIDU_GAME) {
          //百度
          this.globalData.bannerAd.onLoad(function () {
            console.log('百度banner 加载完成');

            _this.globalData.bannerAd.show().then(function () {
              console.log("展示成功");
              httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
                title: '广告位banner',
                content: '展示成功',
                desc: _this.adId
              }, function () {});
            })["catch"](function (err) {
              console.log("展示失败");
              httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
                title: '广告位banner',
                content: '展示失败',
                desc: _this.adId
              }, function () {});
            });
          });
        } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'QQ') {
          this.globalData.bannerAd.onLoad(function () {
            console.log('qqBanner 加载完成');

            _this.globalData.bannerAd.show();

            console.log("展示成功");
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '广告位banner',
              content: '展示成功',
              desc: _this.adId
            }, function () {});
          });
        } else {
          console.log("开始展示广告");
          this.globalData.bannerAd.show().then(function () {
            console.log("展示成功");
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '广告位banner',
              content: '展示成功',
              desc: _this.adId
            }, function () {});
          })["catch"](function (err) {
            console.log("展示失败");
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '广告位banner',
              content: '展示失败',
              desc: _this.adId
            }, function () {});
          });
        }
      }
    } else {
      cc.director.getScheduler().unschedule(this.scheduleCallBack, this);

      if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
        //头条平台
        if (this.globalData && this.globalData.bannerAd) {
          this.globalData.bannerAd.hide();
          this.globalData.bannerAd.destroy();
          this.globalData.bannerAd = null;
          console.log("字节平台banner 销毁");
          this.globalData = {
            bannerAd: tt.createBannerAd({
              adUnitId: this.adId,
              //adIntervals:30,
              style: {
                width: this.targetBannerAdWidth,
                top: this.height - this.targetBannerAdWidth / 16 * 9,
                // 根据系统约定尺寸计算出广告高度
                left: (this.width - this.targetBannerAdWidth) / 2
              }
            })
          };
          this.refreshSize();
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '广告位banner',
            content: '隐藏创建成功',
            desc: this.adId
          }, function () {});
        }
      } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'WX') {
        //微信平台
        if (this.globalData && this.globalData.bannerAd) {
          this.globalData.bannerAd.hide();
          this.globalData.bannerAd.destroy();
          this.globalData.bannerAd = null;
          console.log("banner 销毁");
          this.globalData = {
            bannerAd: wx.createBannerAd({
              adUnitId: this.adId,
              style: {
                width: this.targetBannerAdWidth,
                top: this.height - this.targetBannerAdWidth / 16 * 9,
                // 根据系统约定尺寸计算出广告高度
                left: (this.width - this.targetBannerAdWidth) / 2
              }
            })
          };
          this.refreshSize();
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '广告位banner',
            content: '隐藏创建成功',
            desc: this.adId
          }, function () {});
        }
      } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'QQ') {
        this.globalData.bannerAd.hide();
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '广告位banner',
          content: '隐藏',
          desc: this.adId
        }, function () {});
      }
    }
  },
  refreshSize: function refreshSize() {
    var _this2 = this;

    // 尺寸调整时会触发回调，通过回调拿到的广告真实宽高再进行定位适配处理
    // 注意：如果在回调里再次调整尺寸，要确保不要触发死循环！！！
    if (this.globalData && this.globalData.bannerAd) {
      if (cc.sys.platform == cc.sys.BYTEDANCE_GAME || cc.sys.platform == cc.sys.WECHAT_GAME || cc.sys.platform == cc.sys.BAIDU_GAME) {
        //头条平台
        this.globalData.bannerAd.onResize(function (size) {
          console.log("banner shezhi大小" + _this2.height + "   " + _this2.width);
          _this2.globalData.bannerAd.style.top = _this2.height - size.height;
          _this2.globalData.bannerAd.style.left = (_this2.width - size.width) / 2; //this.globalData.bannerAd.offResize();
        });
      }

      this.globalData.bannerAd.onError(function (listener) {
        console.log("banner 出错" + listener.errCode + listener.errMsg);
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '广告位banner',
          content: _this2.adId,
          desc: listener.errCode + listener.errMsg
        }, function () {}); // appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_LOADTIP, {
        //     content:"出错啦！！！"
        //  });
        //this.globalData.bannerAd.offError();
      });
    }
  }
});
module.exports = Banner;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/misc/BoostsAction.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '47da3PXgqdE55aSvY0ox9B4', 'BoostsAction');
// framework/plugin_boosts/misc/BoostsAction.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.Shake = exports.V2ChangeAction = exports.ValueChangeAction = void 0;
var ValueChangeAction = /** @class */ (function (_super) {
    __extends(ValueChangeAction, _super);
    function ValueChangeAction(duration, from, to, callback, target) {
        var _this = _super.call(this) || this;
        _this.delta = _this.sub(to, from);
        _this.setDuration(duration);
        _this.callback = callback;
        _this.start = from;
        _this.end = to;
        _this.callbackTarget = target;
        return _this;
    }
    ValueChangeAction.prototype.sub = function (x, y) {
        return (x - y);
    };
    ValueChangeAction.prototype.add = function (x, y) {
        return x + y;
    };
    ValueChangeAction.prototype.mul = function (x, y) {
        return x * y;
    };
    ValueChangeAction.prototype.update = function (dt) {
        dt = this._computeEaseTime(dt);
        var v = this.add(this.start, this.mul(this.delta, dt));
        this.callback.call(this.callbackTarget, v);
    };
    return ValueChangeAction;
}(cc.ActionInterval));
exports.ValueChangeAction = ValueChangeAction;
var V2ChangeAction = /** @class */ (function (_super) {
    __extends(V2ChangeAction, _super);
    function V2ChangeAction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    V2ChangeAction.prototype.sub = function (x, y) {
        return x.sub(x, y);
    };
    V2ChangeAction.prototype.add = function (x, y) {
        return x.add(x, y);
    };
    V2ChangeAction.prototype.mul = function (x, y) {
        return x.mul(x, y);
    };
    return V2ChangeAction;
}(ValueChangeAction));
exports.V2ChangeAction = V2ChangeAction;
var Shake = /** @class */ (function (_super) {
    __extends(Shake, _super);
    function Shake() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._initial_x = 0;
        _this._initial_y = 0;
        _this._strength_x = 0;
        _this._strength_y = 0;
        return _this;
    }
    /**
     *  创建抖动动画
     * @param {number} duration     动画持续时长
     * @param {number} strength_x   抖动幅度： x方向
     * @param {number} strength_y   抖动幅度： y方向
     * @returns {Shake}
     */
    Shake.create = function (duration, strength_x, strength_y) {
        var act = new Shake();
        act.initWithDuration(duration, strength_x, strength_y);
        return act;
    };
    Shake.prototype.initWithDuration = function (duration, strength_x, strength_y) {
        cc.ActionInterval.prototype['initWithDuration'].apply(this, arguments);
        this._strength_x = strength_x;
        this._strength_y = strength_y;
        return true;
    };
    Shake.prototype.fgRangeRand = function (min, max) {
        var rnd = Math.random();
        return rnd * (max - min) + min;
    };
    Shake.prototype.update = function (time) {
        var randx = this.fgRangeRand(-this._strength_x, this._strength_x);
        var randy = this.fgRangeRand(-this._strength_y, this._strength_y);
        this.getTarget().setPosition(randx + this._initial_x, randy + this._initial_y);
    };
    Shake.prototype.startWithTarget = function (target) {
        cc.ActionInterval.prototype['startWithTarget'].apply(this, arguments);
        this._initial_x = target.x;
        this._initial_y = target.y;
    };
    Shake.prototype.stop = function () {
        this.getTarget().setPosition(new cc.Vec2(this._initial_x, this._initial_y));
        cc.ActionInterval.prototype['stop'].apply(this);
    };
    return Shake;
}(cc.ActionInterval));
exports.Shake = Shake;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/game/LevelSelector.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b7942O9SJ1JFpcT0/D7YiFO', 'LevelSelector');
// framework/plugin_boosts/ui/game/LevelSelector.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, help = _a.help;
var LevelSelector = /** @class */ (function (_super) {
    __extends(LevelSelector, _super);
    function LevelSelector() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.pageview = null;
        _this.template = null;
        _this.onSelectLevel = new cc.Component.EventHandler();
        _this.onRefreshItem = new cc.Component.EventHandler();
        _this.index = 0;
        _this.max = 9;
        _this.itemCountPerPage = 0;
        _this.pages = [];
        _this.currentLevel = 1;
        _this.autoScrollToCurrentLevel = true;
        return _this;
        // update (dt) {}
    }
    LevelSelector.prototype.selectLevel = function (event, msg) {
        if (this.onSelectLevel)
            this.onSelectLevel.emit([event.target, Number(event.target.name)]);
        else
            console.warn("LevelSelector: onSelectLevel callback is nil");
    };
    LevelSelector.prototype.onLoad = function () {
        this.pages.splice(0, this.pages.length);
        this.itemCountPerPage = this.template.childrenCount;
        var pageCount = Math.floor(this.max / this.itemCountPerPage);
        var mod = this.max % this.itemCountPerPage;
        if (mod > 0) {
            pageCount = pageCount + 1;
        }
        for (var i = 0; i < pageCount - 1; i++) {
            var page = cc.instantiate(this.template);
            this.pageview.addPage(page);
            this.pages.push(page);
        }
        this.pages.push(this.template);
        for (var pageIdx = 0; pageIdx < pageCount; pageIdx++) {
            var page = this.pages[pageIdx];
            for (var itemIdx = 0; itemIdx < page.childrenCount; itemIdx++) {
                var item = page.children[itemIdx];
                var label = item.getChildByName("label");
                var level = pageIdx * this.itemCountPerPage + Number(itemIdx) + 1;
                if (level > this.max) {
                    item.active = false;
                }
                item.name = level + "";
                label.getComponent(cc.Label).string = item.name;
            }
        }
    };
    LevelSelector.prototype.refreshItem = function (item, level) {
        var lv = this.currentLevel;
        if (level > lv) {
            item.opacity = 100;
            item.getComponent(cc.Button).enabled = false;
        }
        else {
            item.opacity = 255;
            item.getComponent(cc.Button).enabled = true;
        }
    };
    LevelSelector.prototype.refresh = function () {
        console.log("LevelSelctor: refresh");
        for (var i = 0; i < this.pages.length; i++) {
            var page = this.pages[i];
            for (var itemIdx = 0; itemIdx < page.childrenCount; itemIdx++) {
                var item = page.children[itemIdx];
                var level = i * this.itemCountPerPage + Number(itemIdx) + 1;
                this.refreshItem(item, level);
                this.onRefreshItem.emit([item, level]);
            }
        }
        if (this.autoScrollToCurrentLevel)
            this.scrollToCurrentLevel();
    };
    LevelSelector.prototype.start = function () {
    };
    LevelSelector.prototype.scrollToCurrentLevel = function () {
        var lv = this.currentLevel;
        var curPage = Math.floor(lv / this.itemCountPerPage);
        var mod = lv % this.itemCountPerPage;
        if (mod == 0) {
            curPage = curPage - 1;
        }
        this.pageview.scrollToPage(curPage, 0.3);
    };
    LevelSelector.prototype.nextPage = function () {
        this.pageview.scrollToPage(this.pageview.getCurrentPageIndex() + 1, 0.3);
    };
    LevelSelector.prototype.prevPage = function () {
        this.pageview.scrollToPage(this.pageview.getCurrentPageIndex() - 1, 0.3);
    };
    __decorate([
        property(cc.PageView)
    ], LevelSelector.prototype, "pageview", void 0);
    __decorate([
        property(cc.Node)
    ], LevelSelector.prototype, "template", void 0);
    __decorate([
        property(cc.Component.EventHandler)
    ], LevelSelector.prototype, "onSelectLevel", void 0);
    __decorate([
        property(cc.Component.EventHandler)
    ], LevelSelector.prototype, "onRefreshItem", void 0);
    __decorate([
        property
    ], LevelSelector.prototype, "index", void 0);
    __decorate([
        property
    ], LevelSelector.prototype, "max", void 0);
    LevelSelector = __decorate([
        ccclass
    ], LevelSelector);
    return LevelSelector;
}(cc.Component));
exports.default = LevelSelector;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/screenRecord/screenrecordAuto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '71551ofyTNLwYogYvGLy2hf', 'screenrecordAuto');
// gameComon/screenRecord/screenrecordAuto.js

"use strict";

// Learn cc.Class:
//  - https://docs.cocos.com/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
var recorder;
var screenTime;
var ScreenAuto = cc.Class({
  properties: {},
  ctor: function ctor() {
    this.instance = null;
  },
  statics: {
    create: function create(data) {
      if (!this.instance) {
        this.instance = new ScreenAuto();
        this.instance.initWithData(data);
        return this.instance;
      }
    }
  },
  onDestroy: function onDestroy() {
    clearTimeout(screenTime);
  },
  initWithData: function initWithData(data) {},
  playScreenCap: function playScreenCap(caping) {
    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
      //头条平台
      if (caping) {
        appGame.isClick = false;
        screenTime = setTimeout(function () {
          console.log("setTimeout");
          appGame.isClick = true;
          clearTimeout(screenTime);
        }.bind(this), 5000);
        if (!recorder) recorder = tt.getGameRecorderManager();
        recorder.start({
          duration: 10000
        });
        recorder.onStart(function (res) {
          console.log('开始录屏');
        });
        recorder.onStop(function (res) {
          console.log('录屏结束==' + res.videoPath);
          appGame.screenPath = res.videoPath;
        });
      } else {
        clearTimeout(screenTime);
        console.log("clearTimeout");
        if (!recorder) recorder = tt.getGameRecorderManager();
        recorder.stop();
        recorder.onStop(function (res) {
          appGame.screenPath = res.videoPath;
        });
      }
    }
  }
});
module.exports = ScreenAuto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JlZW5SZWNvcmRcXHNjcmVlbnJlY29yZEF1dG8uanMiXSwibmFtZXMiOlsicmVjb3JkZXIiLCJzY3JlZW5UaW1lIiwiU2NyZWVuQXV0byIsImNjIiwiQ2xhc3MiLCJwcm9wZXJ0aWVzIiwiY3RvciIsImluc3RhbmNlIiwic3RhdGljcyIsImNyZWF0ZSIsImRhdGEiLCJpbml0V2l0aERhdGEiLCJvbkRlc3Ryb3kiLCJjbGVhclRpbWVvdXQiLCJwbGF5U2NyZWVuQ2FwIiwiY2FwaW5nIiwic3lzIiwicGxhdGZvcm0iLCJCWVRFREFOQ0VfR0FNRSIsImFwcEdhbWUiLCJpc0NsaWNrIiwic2V0VGltZW91dCIsImNvbnNvbGUiLCJsb2ciLCJiaW5kIiwidHQiLCJnZXRHYW1lUmVjb3JkZXJNYW5hZ2VyIiwic3RhcnQiLCJkdXJhdGlvbiIsIm9uU3RhcnQiLCJyZXMiLCJvblN0b3AiLCJ2aWRlb1BhdGgiLCJzY3JlZW5QYXRoIiwic3RvcCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSUEsUUFBSjtBQUNBLElBQUlDLFVBQUo7QUFDQSxJQUFJQyxVQUFVLEdBQUdDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ3RCQyxFQUFBQSxVQUFVLEVBQUUsRUFEVTtBQUd0QkMsRUFBQUEsSUFIc0Isa0JBR2hCO0FBQ0YsU0FBS0MsUUFBTCxHQUFnQixJQUFoQjtBQUNILEdBTHFCO0FBTXRCQyxFQUFBQSxPQUFPLEVBQUU7QUFDTEMsSUFBQUEsTUFBTSxFQUFFLGdCQUFVQyxJQUFWLEVBQWdCO0FBQ3BCLFVBQUcsQ0FBQyxLQUFLSCxRQUFULEVBQWtCO0FBQ2QsYUFBS0EsUUFBTCxHQUFnQixJQUFJTCxVQUFKLEVBQWhCO0FBQ0EsYUFBS0ssUUFBTCxDQUFjSSxZQUFkLENBQTJCRCxJQUEzQjtBQUNBLGVBQU8sS0FBS0gsUUFBWjtBQUNIO0FBQ0o7QUFQSSxHQU5hO0FBZXRCSyxFQUFBQSxTQWZzQix1QkFlWDtBQUNQQyxJQUFBQSxZQUFZLENBQUNaLFVBQUQsQ0FBWjtBQUNILEdBakJxQjtBQWtCdEJVLEVBQUFBLFlBbEJzQix3QkFrQlRELElBbEJTLEVBa0JKLENBQ2pCLENBbkJxQjtBQXFCdEJJLEVBQUFBLGFBckJzQix5QkFxQlJDLE1BckJRLEVBcUJEO0FBSWpCLFFBQUdaLEVBQUUsQ0FBQ2EsR0FBSCxDQUFPQyxRQUFQLElBQW1CZCxFQUFFLENBQUNhLEdBQUgsQ0FBT0UsY0FBN0IsRUFBNEM7QUFBRTtBQUMxQyxVQUFHSCxNQUFILEVBQVU7QUFDTkksUUFBQUEsT0FBTyxDQUFDQyxPQUFSLEdBQWtCLEtBQWxCO0FBQ0FuQixRQUFBQSxVQUFVLEdBQUdvQixVQUFVLENBQUMsWUFBVztBQUMvQkMsVUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWjtBQUNBSixVQUFBQSxPQUFPLENBQUNDLE9BQVIsR0FBa0IsSUFBbEI7QUFDQVAsVUFBQUEsWUFBWSxDQUFDWixVQUFELENBQVo7QUFDSCxTQUp1QixDQUl0QnVCLElBSnNCLENBSWpCLElBSmlCLENBQUQsRUFJVCxJQUpTLENBQXZCO0FBTUEsWUFBRyxDQUFDeEIsUUFBSixFQUFjQSxRQUFRLEdBQUd5QixFQUFFLENBQUNDLHNCQUFILEVBQVg7QUFDZDFCLFFBQUFBLFFBQVEsQ0FBQzJCLEtBQVQsQ0FBZTtBQUNYQyxVQUFBQSxRQUFRLEVBQUU7QUFEQyxTQUFmO0FBSUE1QixRQUFBQSxRQUFRLENBQUM2QixPQUFULENBQWlCLFVBQUFDLEdBQUcsRUFBRztBQUNuQlIsVUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksTUFBWjtBQUNILFNBRkQ7QUFJQXZCLFFBQUFBLFFBQVEsQ0FBQytCLE1BQVQsQ0FBZ0IsVUFBQUQsR0FBRyxFQUFHO0FBQ2xCUixVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFTTyxHQUFHLENBQUNFLFNBQXpCO0FBQ0FiLFVBQUFBLE9BQU8sQ0FBQ2MsVUFBUixHQUFxQkgsR0FBRyxDQUFDRSxTQUF6QjtBQUNILFNBSEQ7QUFJSCxPQXJCRCxNQXFCSztBQUNEbkIsUUFBQUEsWUFBWSxDQUFDWixVQUFELENBQVo7QUFDQXFCLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGNBQVo7QUFDQSxZQUFHLENBQUN2QixRQUFKLEVBQWNBLFFBQVEsR0FBR3lCLEVBQUUsQ0FBQ0Msc0JBQUgsRUFBWDtBQUNkMUIsUUFBQUEsUUFBUSxDQUFDa0MsSUFBVDtBQUNBbEMsUUFBQUEsUUFBUSxDQUFDK0IsTUFBVCxDQUFnQixVQUFDRCxHQUFELEVBQVM7QUFDckJYLFVBQUFBLE9BQU8sQ0FBQ2MsVUFBUixHQUFxQkgsR0FBRyxDQUFDRSxTQUF6QjtBQUNILFNBRkQ7QUFHSDtBQUNKO0FBQ0o7QUF6RHFCLENBQVQsQ0FBakI7QUEyREFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmxDLFVBQWpCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBjYy5DbGFzczpcclxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvY2xhc3MuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxudmFyIHJlY29yZGVyO1xyXG52YXIgc2NyZWVuVGltZTtcclxudmFyIFNjcmVlbkF1dG8gPSBjYy5DbGFzcyh7XHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICB9LFxyXG4gICAgY3Rvcigpe1xyXG4gICAgICAgIHRoaXMuaW5zdGFuY2UgPSBudWxsO1xyXG4gICAgfSxcclxuICAgIHN0YXRpY3M6IHtcclxuICAgICAgICBjcmVhdGU6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGlmKCF0aGlzLmluc3RhbmNlKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgU2NyZWVuQXV0bygpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pbnN0YW5jZS5pbml0V2l0aERhdGEoZGF0YSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5pbnN0YW5jZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBvbkRlc3Ryb3koKXtcclxuICAgICAgICBjbGVhclRpbWVvdXQoc2NyZWVuVGltZSk7XHJcbiAgICB9LFxyXG4gICAgaW5pdFdpdGhEYXRhKGRhdGEpe1xyXG4gICAgfSxcclxuXHJcbiAgICBwbGF5U2NyZWVuQ2FwKGNhcGluZyl7XHJcbiBcclxuXHJcbiAgICBcclxuICAgICAgICBpZihjYy5zeXMucGxhdGZvcm0gPT0gY2Muc3lzLkJZVEVEQU5DRV9HQU1FKXsgLy/lpLTmnaHlubPlj7BcclxuICAgICAgICAgICAgaWYoY2FwaW5nKXtcclxuICAgICAgICAgICAgICAgIGFwcEdhbWUuaXNDbGljayA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgc2NyZWVuVGltZSA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJzZXRUaW1lb3V0XCIpXHJcbiAgICAgICAgICAgICAgICAgICAgYXBwR2FtZS5pc0NsaWNrID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoc2NyZWVuVGltZSk7XHJcbiAgICAgICAgICAgICAgICB9LmJpbmQodGhpcyksIDUwMDApO1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAgICAgaWYoIXJlY29yZGVyKSByZWNvcmRlciA9IHR0LmdldEdhbWVSZWNvcmRlck1hbmFnZXIoKTtcclxuICAgICAgICAgICAgICAgIHJlY29yZGVyLnN0YXJ0KHtcclxuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMDAsXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgIHJlY29yZGVyLm9uU3RhcnQocmVzID0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCflvIDlp4vlvZXlsY8nKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAgICAgcmVjb3JkZXIub25TdG9wKHJlcyA9PntcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5b2V5bGP57uT5p2fPT0nK3Jlcy52aWRlb1BhdGgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcEdhbWUuc2NyZWVuUGF0aCA9IHJlcy52aWRlb1BhdGg7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoc2NyZWVuVGltZSk7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImNsZWFyVGltZW91dFwiKVxyXG4gICAgICAgICAgICAgICAgaWYoIXJlY29yZGVyKSByZWNvcmRlciA9IHR0LmdldEdhbWVSZWNvcmRlck1hbmFnZXIoKTtcclxuICAgICAgICAgICAgICAgIHJlY29yZGVyLnN0b3AoKTtcclxuICAgICAgICAgICAgICAgIHJlY29yZGVyLm9uU3RvcCgocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwR2FtZS5zY3JlZW5QYXRoID0gcmVzLnZpZGVvUGF0aDtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KTtcclxubW9kdWxlLmV4cG9ydHMgPSBTY3JlZW5BdXRvO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/model/androidHelper.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e14abL3OJ9GPoS9lM+R5fsf', 'androidHelper');
// gameComon/scripts/model/androidHelper.js

"use strict";

module.exports = {
  start: function start() {},

  /**
   * 获取平台
   */
  getPhonePlatFrom: function getPhonePlatFrom() {
    var platFrom = jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "getPhonePlatFrom", "()Ljava/lang/String;");
    return platFrom;
  },

  /**
   * 获取游戏名称（预留下次大版本更新使用接口）
   */
  getGameName: function getGameName() {
    var game = jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "getGameName", "()Ljava/lang/String;");
    return game;
  },

  /**
   * android曾进入creator中间黑屏，android层展示大图，调用方法删除大图
   */
  clearWelcomeImage: function clearWelcomeImage() {
    console.log("clear welcome image...");

    if (cc.sys.os == cc.sys.OS_ANDROID) {
      jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "removeLaunchImage", "()V");
    }
  },

  /**
   * 换头像
   */
  replacePhoto: function replacePhoto(info, cb) {
    cc.eventManager.removeCustomListeners('updateImag');
    cc.eventManager.addCustomListener('updateImag', function (event) {
      cb(event.getUserData().a);
    });
    jsb.reflection.callStaticMethod("org/cocos2dx/Photo", "getLocalImag", "(Ljava/lang/String;)Ljava/lang/String;", info);
  },

  /**
   * 获取平台id
   */
  getPhonePlatFromType: function getPhonePlatFromType() {
    var platFromType = jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "getPhoneType", "()Ljava/lang/String;");
    return parseInt(platFromType);
  },

  /**
   * 获取当前版本
   */
  getVersion: function getVersion() {
    var version = jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "getLocationVersion", "()Ljava/lang/String;");
    return version;
  },

  /**
   * 获取子版本号
   */
  getChildVersion: function getChildVersion() {
    var childVersion = jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "getChildVersion", "()Ljava/lang/String;");
    return childVersion;
  },

  /**
  * 获取手机型号
  */
  getPhoneModel: function getPhoneModel() {
    var model = jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "getPhoneModel", "()Ljava/lang/String;");
    return model;
  },

  /**
   * 获取手机设备号
   */
  getPhoneDeviceID: function getPhoneDeviceID() {
    var deviceId = jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "deviceID", "()Ljava/lang/String;");
    return deviceId;
  },

  /**
   * 该方法只为获取应用宝登录token是否失效
   */
  getYybIsLogin: function getYybIsLogin() {
    var isLogin = jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "isYybLogin", "()Ljava/lang/String;");
    return isLogin;
  },

  /**
   * 获取邀请码
   */
  getInviteCode: function getInviteCode() {
    var inviteCode = jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "getInviteInformation", "()Ljava/lang/String;");
    return inviteCode;
  },

  /**
   * 获取房间号
   */
  getRoomNum: function getRoomNum() {
    var roomNum = jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "getHouseInformation", "()Ljava/lang/String;");
    return roomNum;
  },

  /**
   * 四种登录模式,qq登陆
   */
  qqLogin: function qqLogin(cb) {
    cc.eventManager.removeCustomListeners('qqLoginResult');
    cc.eventManager.addCustomListener('qqLoginResult', function (event) {
      cb(event.getUserData().a);
    });
    jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "qqLogin", "()V");
  },

  /**
   * 四种登录模式,微信登陆
   */
  wechatLogin: function wechatLogin(cb) {
    cc.eventManager.removeCustomListeners('wechatLoginResult');
    cc.eventManager.addCustomListener('wechatLoginResult', function (event) {
      cb(event.getUserData().a);
    });
    jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "wechatLogin", "()V");
  },

  /**
   * 四种登录模式,设备登陆
   */
  deviceLogin: function deviceLogin() {
    var version = jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "deviceLogin", "(Ljava/lang/String;)Ljava/lang/String;", "");
    return version;
  },

  /**
   * 三种支付，微信支付
   */
  wechatPay: function wechatPay(payment, cb) {
    cc.eventManager.removeCustomListeners('wechatPayResult');
    cc.eventManager.addCustomListener('wechatPayResult', function (event) {
      cb(event.getUserData().a);
    });
    jsb.reflection.callStaticMethod("org/cocos2dx/WechatPay", "wechatPay", "(Ljava/lang/String;)Ljava/lang/String;", payment);
  },

  /**
   * 三种支付，支付宝支付
   */
  alipayPay: function alipayPay(payment, cb) {
    cc.eventManager.removeCustomListeners('alipayPayResult');
    cc.eventManager.addCustomListener('alipayPayResult', function (event) {
      cb(event.getUserData().a);
    });
    jsb.reflection.callStaticMethod("org/cocos2dx/AlipayPay", "alipayPay", "(Ljava/lang/String;)Ljava/lang/String;", payment);
  },

  /**
   * 分享 type :0：好友文字分享，2：朋友圈分享，1:朋友圈图片分享，3好友图片分享
   */
  wechatShare: function wechatShare(payment, cb) {
    cc.eventManager.removeCustomListeners('shareWechatResult');
    cc.eventManager.addCustomListener('shareWechatResult', function (event) {
      cb(Number(event.getUserData().a));
    });
    jsb.reflection.callStaticMethod("org/cocos2dx/WeChat", "useWeiXin", "(Ljava/lang/String;I)V", payment.str, payment.type);
  },

  /**
   * 打开微信
   */
  openWechat: function openWechat() {
    jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "openWechat", "()V");
  },

  /**
   * 打开qq
   */
  openQQ: function openQQ() {
    jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "qqHelp", "(Ljava/lang/String;)V", "2983816547");
  },

  /**
   * 播放网络音乐
   */
  playNetSound: function playNetSound(info, cb) {
    //info:url 地址
    cc.eventManager.removeCustomListeners('playNetSoundOver');
    cc.eventManager.addCustomListener('playNetSoundOver', function (event) {
      //监听播放完毕返回
      cb(event.getUserData().a);
    });
    jsb.reflection.callStaticMethod("org/cocos2dx/SoundInfo", "playNetSound", "(Ljava/lang/String;)V", info);
  },

  /**
   * 开始录音
   */
  playRecorderBegin: function playRecorderBegin() {
    jsb.reflection.callStaticMethod("org/cocos2dx/SoundInfo", "playRecorderBegin", "()V");
  },

  /**
   * 录音结束
   */
  playRecorderEnd: function playRecorderEnd() {
    //传入七牛网盘生成地址需要的url前缀，name文件名，token。
    jsb.reflection.callStaticMethod("org/cocos2dx/SoundInfo", "playRecorderEnd", "()V");
  },

  /**
   * 上传录音
   */
  uploadRecorder: function uploadRecorder() {
    cc.eventManager.removeCustomListeners('playSoundUrl');
    app.playerMgr.getRecordToken(function (data) {
      cc.eventManager.addCustomListener('playSoundUrl', function (event) {
        app.playerMgr.uploadRecord(event.getUserData().a, function (data) {});
      });
      jsb.reflection.callStaticMethod("org/cocos2dx/SoundInfo", "uploadRecorder", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", data.url, data.name, data.token);
    });
  },

  /**
   * 获取地理位置
   */
  getLocationInfo: function getLocationInfo(cb) {
    //经纬度以###分开
    if (app.creatorPlatformType == 1 || app.creatorPlatformType == 2) {
      cc.eventManager.removeCustomListeners('baiDuLocationResult');
      cc.eventManager.addCustomListener('baiDuLocationResult', function (event) {
        var pos = event.getUserData().a.split('###'); // 前面精度，后面纬度

        cb({
          x: pos[0],
          y: pos[1]
        });
      });
      jsb.reflection.callStaticMethod("org/cocos2dx/Map", "getLocationInfo", "(Ljava/lang/String;)V", "cocos");
    } else {
      var pos = '108.883452###34.232702'.split('###'); // 前面精度，后面纬度

      cb({
        x: pos[0],
        y: pos[1]
      });
    }
  },

  /**
   * 打开权限设置
   */
  openSetting: function openSetting() {
    jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "openSetting", "()V");
  },

  /**
  * 获取手机电量
  */
  getPhoneElectric: function getPhoneElectric(cb) {
    cc.eventManager.removeCustomListeners('getElectric');
    cc.eventManager.addCustomListener('getElectric', function (event) {
      cb(event.getUserData().a);
    });
  },

  /**
   * 检测大版本更新 
   */
  checkApkUpdate: function checkApkUpdate(hotVersion, childVersion, cb) {
    cc.eventManager.removeCustomListeners('havingnNewVersion');
    cc.eventManager.addCustomListener('havingnNewVersion', function (event) {
      cb(event.getUserData().a);
    });
    jsb.reflection.callStaticMethod("com/douyer/helper/VersionManager", "checkupVersion", "(Ljava/lang/String;Ljava/lang/String;)V", hotVersion, childVersion);
  },

  /**
     * 四种登录模式,第三方登陆
     */
  thirdLogin: function thirdLogin(info, cb) {
    //info只用在yyb平台
    if (app.phonePlatFrom == "huawei") {
      cc.eventManager.removeCustomListeners('accessToken');
      cc.eventManager.addCustomListener('accessToken', function (event) {
        cb(event.getUserData().a);
      });
      var buo = "MIICcwIBADANBgkqhkiG9w0BAQEFAASCAl0wggJZAgEAAoGBAIyo98FF4bIG0mxNGk2b7so/PBSajxYHYPb2lZQj7ebg6ODIq+6hFO2hdqQ+jOTlQVlVqeAqJncTVBsMPm3s+vrnp42RqzFMYo3b6214VQfjiPjjFXoXUYRU66vfqk5hjaz4TMNJ0BS+PcYB3Yn8dgrhSTrVRYfiYOEbUjy6EKMDAgMBAAECf33Sp807taiKcbBvSBgkZHaGGjhUCaqq7xH7gdICUc01YxuwZhwP+6iVxoslaONYMBy5hDwBeGcL4zBOw4mRcu+flIwNPLS7gZ3UM1XwnlIN6e2IjQSsYbIdXfQ/4Z4Mqhy+v1wv+IjBIR/4t2haxrKJKgVlSEds3tHBQZeko0ECQQD1MzTHtwHZoeP8UtCxUEE8cYoNXRg5lX69hx7y14Y4c//tksSWre2EDkMDzICkyndQrNwY38xrilT1ylO5TEchAkEAktsA4sn50qet+GUBO1T5UvyfhdBcBqZeeAVzpFf2Em1WgWGQGZxQ5ZnY9Uz6uvVMycdYhUfpoAiUZAyNcok5owJAXNfBwWlTIwPAnrcA3FLGEMvw+PRqCsvHTJ5QIqVm5hNOMbekBmXfDGSWDWcuwrcDDKIXSLfc4E9lshelMgFm4QJALwA2vV7lPP17mYdCKKoejefaampwOZSfoYwlIdEhKW6jBA+knf3Aimt926yChrmhlObfNvD4HccBLzAxSRoQPwJALQbPOM6lrHl2qCP+SoJI0xhmIFevkl181YYeXx+3hk1X/fSL/Y9mphaNcbOGc0qAWVhWkcjPeXoE9rzDrjFSmw==";
      jsb.reflection.callStaticMethod("com/helper/huawei/sdk/HuaWeiPay", "huaWeiInit", "(Ljava/lang/String;)V", buo);
    } else if (app.phonePlatFrom == "oppo") {
      cc.eventManager.removeCustomListeners('OloginResult');
      cc.eventManager.addCustomListener('OloginResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("org/cocos2dx/PayOPPO", "Ologin", "()V");
    } else if (app.phonePlatFrom == "telecom") {
      cc.eventManager.removeCustomListeners('dianxinLoginResult');
      cc.eventManager.addCustomListener('dianxinLoginResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/dianxin/sdk/DianXinSdk", "gotoLogin", "()V");
    } else if (app.phonePlatFrom == "xiaomi" || app.phonePlatFrom == "meizu") {
      cc.eventManager.removeCustomListeners('YiSDKLoginCallBack');
      cc.eventManager.addCustomListener('YiSDKLoginCallBack', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/yijie/sdk/Yisdk", "YiSDKInit", "(Ljava/lang/String;)V", 1);
    } else if (app.phonePlatFrom == "yyb") {
      cc.eventManager.removeCustomListeners('yybLoginResult');
      cc.eventManager.addCustomListener('yybLoginResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/yyb/sdk/YYBhelper", "gotoLogin", "(Ljava/lang/String;)V", info);
    } else if (app.phonePlatFrom == "uc") {
      cc.eventManager.removeCustomListeners('loginResult');
      cc.eventManager.addCustomListener('loginResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/uc/sdk/UcSdkCode", "ucInit", "()V");
    } else if (app.phonePlatFrom == "360") {
      cc.eventManager.removeCustomListeners('loginCallBack');
      cc.eventManager.addCustomListener('loginCallBack', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/q360/sdk/Sdk360", "login360", "()V");
    }
  },

  /**
   * 三种支付，第三方支付
   */
  thirdPay: function thirdPay(payment, cb) {
    if (app.phonePlatFrom == "huawei") {
      cc.eventManager.removeCustomListeners('huaWeiPayResult');
      cc.eventManager.addCustomListener('huaWeiPayResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/huawei/sdk/HuaWeiPay", "huaWeiPay", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", payment.name, payment.price, payment.name, payment.orderNo, payment.key, payment.url);
    } else if (app.phonePlatFrom == "oppo") {
      cc.eventManager.removeCustomListeners('OpayResult');
      cc.eventManager.addCustomListener('OpayResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("org/cocos2dx/PayOPPO", "Opay", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", payment.name, payment.url, payment.price, payment.orderNo);
    } else if (app.phonePlatFrom == "vivo") {
      cc.eventManager.removeCustomListeners('VPayResult');
      cc.eventManager.addCustomListener('VPayResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/vivo/sdk/VivoSDK", "VPay", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", payment.orderNo, payment.url, payment.name, payment.price);
    } else if (app.phonePlatFrom == "xiaomi" || app.phonePlatFrom == "meizu") {
      cc.eventManager.removeCustomListeners('YiSDKPayResult');
      cc.eventManager.addCustomListener('YiSDKPayResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/yijie/sdk/Yisdk", "YiSDKPay", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", payment.name, payment.price, payment.orderNo, payment.url);
    } else if (app.phonePlatFrom == "yyb") {
      cc.eventManager.removeCustomListeners('yybPayResult');
      cc.eventManager.addCustomListener('yybPayResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/yyb/sdk/YYBhelper", "gotoPay", "(Ljava/lang/String;)V", payment.price);
    } else if (app.phonePlatFrom == "telecom") {
      cc.eventManager.removeCustomListeners('dianxinPayResult');
      cc.eventManager.addCustomListener('dianxinPayResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/dianxin/sdk/DianXinSdk", "DianXinPay", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", payment.price, payment.orderNo, payment.name);
    } else if (app.phonePlatFrom == "baidu") {
      cc.eventManager.removeCustomListeners('baiduResult');
      cc.eventManager.addCustomListener('baiduResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/baidu/sdk/BaiduSdk", "pay", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", payment.baiduPayId, payment.price, payment.name, payment.orderNo);
    } else if (app.phonePlatFrom == "uc" && app.appKey == "wk") {
      cc.eventManager.removeCustomListeners('payResult');
      cc.eventManager.addCustomListener('payResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/uc/sdk/UcSdkCode", "ucSdkPay", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", payment.price, payment.orderNo, payment.url, payment.accountId, payment.sign);
    } else if (app.phonePlatFrom == "uc" && app.appKey == "sd") {
      cc.eventManager.removeCustomListeners('payResult');
      cc.eventManager.addCustomListener('payResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/uc/sdk/UcSdkCode", "ucSdkPay", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", payment.name, payment.price, payment.orderNo, payment.url);
    } else if (app.phonePlatFrom == "360") {
      cc.eventManager.removeCustomListeners('sdk360PayResult');
      cc.eventManager.addCustomListener('sdk360PayResult', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/q360/sdk/Sdk360", "pay360", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", payment.price, payment.name, payment.id, payment.orderNo, payment.url);
    }
  },

  /**
    * 切换账号
    */
  loginOut: function loginOut(cb) {
    if (app.phonePlatFrom == "yyb") {
      cc.eventManager.removeCustomListeners('yybSDKLoginOutCallBack');
      cc.eventManager.addCustomListener('yybSDKLoginOutCallBack', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("com/helper/yyb/sdk/YYBhelper", "ChangeAccount", "()V");
    } else {
      cc.eventManager.removeCustomListeners('logOutOk');
      cc.eventManager.addCustomListener('logOutOk', function (event) {
        cb(event.getUserData().a);
      });
      jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "loginOut", "()V");
    }
  },

  /**
   * 退出游戏
   */
  exitGame: function exitGame() {
    if (app.phonePlatFrom == "huawei") {//调用游戏退出
    } else if (app.phonePlatFrom == "oppo") {
      jsb.reflection.callStaticMethod("org/cocos2dx/PayOPPO", "Oexit", "()V");
    } else if (app.phonePlatFrom == "xiaomi" || app.phonePlatFrom == "meizu" || app.phonePlatFrom == "yyb") {
      jsb.reflection.callStaticMethod("com/helper/yijie/sdk/Yisdk", "YiSDKExit", "()V");
    } else if (app.phonePlatFrom == "vivo") {
      jsb.reflection.callStaticMethod("com/helper/vivo/sdk/VivoSDK", "vivoLoginOut", "()V");
    } else if (app.phonePlatFrom == "telecom") {
      jsb.reflection.callStaticMethod("com/helper/dianxin/sdk/DianXinSdk", "dianxinSdkExit", "()V");
    } else if (app.phonePlatFrom == "baidu") {
      jsb.reflection.callStaticMethod("com/helper/baidu/sdk/BaiduSdk", "quitBaiDu", "()V");
    } else if (app.phonePlatFrom == "uc") {
      jsb.reflection.callStaticMethod("com/helper/uc/sdk/UcSdkCode", "ucSdkExit", "()V");
    } else if (app.phonePlatFrom == "360") {
      jsb.reflection.callStaticMethod("com/helper/q360/sdk/Sdk360", "quit360", "()V");
    }
  },

  /**
   * 监听网络
   */
  getNetworkInfo: function getNetworkInfo() {
    var network = jsb.reflection.callStaticMethod("org/cocos2dx/NetUtil", "checkNetworkInfoCreator", "()Ljava/lang/String;");
    return network;
  },

  /**
   * 调用app打开功能
   */
  installApk: function installApk(info) {
    //data
    jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "installApk", "(Ljava/lang/String;)V", info);
  },

  /**
  * 获取打开本地apk路径
  */
  getApkFile: function getApkFile() {
    var apkFile = jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "getApkFile", "()Ljava/lang/String;");
    return apkFile;
  },

  /**调用anroid层下载 */
  uploadApk: function uploadApk(url, name, cb) {
    cc.eventManager.removeCustomListeners('uploadApkProgress');
    cc.eventManager.addCustomListener('uploadApkProgress', function (event) {
      cb(event.getUserData().a);
    });
    jsb.reflection.callStaticMethod("org/cocos2dx/UploadApk", "uploadApkFromCreator", "(Ljava/lang/String;Ljava/lang/String;)V", url, name);
  },

  /**
   * 调用第三方浏览器
   */
  openUrl: function openUrl(url) {
    jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "openUrl", "(Ljava/lang/String;)V", url);
  },

  /**
   * 调用app内置浏览器 传入 url:打开地址，type:横竖牌显示(1:landscape ,2:portrait)，name :标头名
   */
  openInUrl: function openInUrl(url, type, name, isDownload, playerId, adId) {
    jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "openInUrl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", url, type, name, isDownload, playerId, adId);
  },

  /**
   * 停止下载
   */
  stopApkDownLoad: function stopApkDownLoad() {
    jsb.reflection.callStaticMethod("org/cocos2dx/UploadApk", "stopUpLoad", "()V");
  },
  setScreenChange: function setScreenChange(type) {
    //type:横竖牌显示(1:landscape ,2:portrait)
    jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "setScreenChange", "(Ljava/lang/String;)V", url);
  },

  /**调用anroid层是否安装 */
  judgeIfInstallApk: function judgeIfInstallApk(packgaeName, name) {
    // "true" "false"
    var judge = jsb.reflection.callStaticMethod("org/cocos2dx/UploadApk", "judgeIfInstallApk", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", packgaeName, name);
    return judge;
  },

  /**
   * 备有接口 删除下载的所有文件
   */
  deleAllFiles: function deleAllFiles() {
    jsb.reflection.callStaticMethod("org/cocos2dx/UploadApk", "deleAllFiles", "()V");
  },
  //fuzhi
  copyToClipboard: function copyToClipboard(content) {
    jsb.reflection.callStaticMethod("org/cocos2dx/AndroidHelper", "qpCopy", "(Ljava/lang/String;)V", content);
  }
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/audio/audioMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'cc057iIkENNC6PSrpbMmYVg', 'audioMgr');
// gameComon/scripts/audio/audioMgr.js

"use strict";

var AudioMgr = cc.Class({
  properties: {
    bgmAudioID: -1,
    audioId: 1,
    gameMusicAudio: true,
    bgUrl: '',
    bgLoop: false
  },
  // use this for initialization
  ctor: function ctor() {
    cc.sys.localStorage.setItem("gameMusic", 1);
    var gMusic = cc.sys.localStorage.getItem("gameMusic");

    if (gMusic == null || gMusic == '') {
      this.gameMusicAudio = false;
    } else {
      this.gameMusicAudio = true;
    }

    cc.game.on(cc.game.EVENT_HIDE, function () {
      cc.audioEngine.pauseAll();
    });
    cc.game.on(cc.game.EVENT_SHOW, function () {
      cc.audioEngine.resumeAll();
    });
  },
  getUrl: function getUrl(url, cb) {
    if (!this.gameMusicAudio) {
      return;
    }

    cc.assetManager.loadBundle('comSound', function (err, bundle) {
      bundle.load(url, cc.AudioClip, function (err, clip) {
        if (err) {
          return;
        }

        cb(clip);
      }.bind(this));
    }.bind(this));
  },
  getMusicStatus: function getMusicStatus(cb) {
    var gMusic = cc.sys.localStorage.getItem("gameMusic");

    if (gMusic == null || gMusic == '') {
      cb(false);
    } else {
      cb(true);
    }
  },
  setMusicOnOff: function setMusicOnOff(isOpen) {
    if (isOpen) {
      //开
      this.gameMusicAudio = true;
      cc.sys.localStorage.setItem("gameMusic", 1);

      if (this.bgUrl) {
        this.playBGM(this.bgUrl, this.bgLoop);
      }
    } else {
      this.stopAll();
      this.gameMusicAudio = false;
      cc.sys.localStorage.removeItem("gameMusic");
    }
  },
  playBGM: function playBGM(url, isLoop) {
    this.bgUrl = url;
    this.bgLoop = isLoop;
    this.getUrl(url, function (audioUrl) {
      if (audioUrl) {
        cc.audioEngine.stop(this.bgmAudioID);
        this.bgmAudioID = cc.audioEngine.playMusic(audioUrl, isLoop);
      }

      cc.log("this.bgmAudioID=====" + this.bgmAudioID);
    }.bind(this));
  },
  playSFX: function playSFX(url) {
    this.getUrl(url, function (audioUrl) {
      this.audioId = cc.audioEngine.play(audioUrl, false, 1);
    }.bind(this));
  },
  pauseBGM: function pauseBGM() {
    cc.log("pauseBGM");
    cc.audioEngine.pause(this.bgmAudioID);
  },
  resumeBGM: function resumeBGM() {
    if (this.gameMusicAudio) {
      cc.log("resumeBGM");
      cc.audioEngine.resume(this.bgmAudioID);
    }
  },
  pauseAll: function pauseAll() {
    cc.audioEngine.pauseAll();
  },
  resumeAll: function resumeAll() {
    cc.audioEngine.resumeAll();
  },
  stopAll: function stopAll() {
    cc.audioEngine.stopAll();
  }
});
module.exports = AudioMgr;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/hex-lines-game/base/com.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e25bakBQd9I5LmDR7yLx+Jf', 'com');
// Game/Scripts/hex-lines-game/base/com.js

"use strict";

var com = function com() {};

com.dateStr = function (t) {
  var e = t.getMonth() + 1,
      n = t.getDate(),
      i = t.getHours(),
      s = t.getMinutes(),
      a = t.getSeconds();
  return t.getFullYear() + "-" + (10 > e ? "0" + e : "" + e) + "-" + (10 > n ? "0" + n : "" + n) + " " + (10 > i ? "0" + i : "" + i) + ":" + (10 > s ? "0" + s : "" + s) + ":" + (10 > a ? "0" + a : "" + a);
}, com.strDate = function (t) {
  switch (t.length) {
    case 8:
      var t = t.split(":"),
          e = new Date();
      return e.setTime(0), e.setUTCHours(t[0]), e.setUTCMinutes(t[1]), e.setUTCSeconds(t[2]), e;

    case 10:
      return t = t.split("-"), new Date(t[0], t[1] - 1, t[2], 0, 0, 0);

    case 19:
      return e = t.split(" "), t = e[0].split("-"), e = e[1].split(":"), new Date(t[0], t[1] - 1, t[2], e[0], e[1], e[2]);

    default:
      throw "Invalid date format : " + t;
  }
};

com.cca = function (t, e) {
  var n = t.charCodeAt(e);
  return n != n ? void 0 : n;
};

com.substr = function (t, e, n) {
  return null != e && 0 != e && null != n && 0 > n ? "" : (null == n && (n = t.length), 0 > e ? (e = t.length + e, 0 > e && (e = 0)) : 0 > n && (n = t.length + n - e), t.substr(e, n));
};

com.remove = function (t, e) {
  var n = t.indexOf(e);
  return -1 == n ? !1 : (t.splice(n, 1), !0);
};

com.iter = function (t) {
  return {
    cur: 0,
    arr: t,
    hasNext: function hasNext() {
      return this.cur < this.arr.length;
    },
    next: function next() {
      return this.arr[this.cur++];
    }
  };
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcaGV4LWxpbmVzLWdhbWVcXGJhc2VcXGNvbS5qcyJdLCJuYW1lcyI6WyJjb20iLCJkYXRlU3RyIiwidCIsImUiLCJnZXRNb250aCIsIm4iLCJnZXREYXRlIiwiaSIsImdldEhvdXJzIiwicyIsImdldE1pbnV0ZXMiLCJhIiwiZ2V0U2Vjb25kcyIsImdldEZ1bGxZZWFyIiwic3RyRGF0ZSIsImxlbmd0aCIsInNwbGl0IiwiRGF0ZSIsInNldFRpbWUiLCJzZXRVVENIb3VycyIsInNldFVUQ01pbnV0ZXMiLCJzZXRVVENTZWNvbmRzIiwiY2NhIiwiY2hhckNvZGVBdCIsInN1YnN0ciIsInJlbW92ZSIsImluZGV4T2YiLCJzcGxpY2UiLCJpdGVyIiwiY3VyIiwiYXJyIiwiaGFzTmV4dCIsIm5leHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsR0FBRyxHQUFHLFNBQU5BLEdBQU0sR0FBVSxDQUFFLENBQXRCOztBQUVBQSxHQUFHLENBQUNDLE9BQUosR0FBYyxVQUFTQyxDQUFULEVBQVk7QUFDdEIsTUFBSUMsQ0FBQyxHQUFHRCxDQUFDLENBQUNFLFFBQUYsS0FBZSxDQUF2QjtBQUFBLE1BQ0FDLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxPQUFGLEVBREo7QUFBQSxNQUVBQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ00sUUFBRixFQUZKO0FBQUEsTUFHQUMsQ0FBQyxHQUFHUCxDQUFDLENBQUNRLFVBQUYsRUFISjtBQUFBLE1BSUFDLENBQUMsR0FBR1QsQ0FBQyxDQUFDVSxVQUFGLEVBSko7QUFLQSxTQUFPVixDQUFDLENBQUNXLFdBQUYsS0FBa0IsR0FBbEIsSUFBeUIsS0FBS1YsQ0FBTCxHQUFTLE1BQU1BLENBQWYsR0FBa0IsS0FBS0EsQ0FBaEQsSUFBcUQsR0FBckQsSUFBNEQsS0FBS0UsQ0FBTCxHQUFTLE1BQU1BLENBQWYsR0FBa0IsS0FBS0EsQ0FBbkYsSUFBd0YsR0FBeEYsSUFBK0YsS0FB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NUUsRUFBNkdELENBQUMsQ0FBQ3NCLE1BQUYsQ0FBU3JCLENBQVQsRUFBWUUsQ0FBWixDQUE5SixDQUFQO0FBQ0gsQ0FGRDs7QUFHQUwsR0FBRyxDQUFDeUIsTUFBSixHQUFhLFVBQVN2QixDQUFULEVBQVlDLENBQVosRUFBZTtBQUN4QixNQUFJRSxDQUFDLEdBQUdILENBQUMsQ0FBQ3dCLE9BQUYsQ0FBVXZCLENBQVYsQ0FBUjtBQUNBLFNBQU8sQ0FBRSxDQUFGLElBQU9FLENBQVAsR0FBVyxDQUFDLENBQVosSUFBaUJILENBQUMsQ0FBQ3lCLE1BQUYsQ0FBU3RCLENBQVQsRUFBWSxDQUFaLEdBQWdCLENBQUMsQ0FBbEMsQ0FBUDtBQUNILENBSEQ7O0FBSUFMLEdBQUcsQ0FBQzRCLElBQUosR0FBVyxVQUFTMUIsQ0FBVCxFQUFZO0FBQ25CLFNBQU87QUFDSDJCLElBQUFBLEdBQUcsRUFBRSxDQURGO0FBRUhDLElBQUFBLEdBQUcsRUFBRTVCLENBRkY7QUFHSDZCLElBQUFBLE9BQU8sRUFBRSxtQkFBVztBQUNoQixhQUFPLEtBQUtGLEdBQUwsR0FBVyxLQUFLQyxHQUFMLENBQVNmLE1BQTNCO0FBQ0gsS0FMRTtBQU1IaUIsSUFBQUEsSUFBSSxFQUFFLGdCQUFXO0FBQ2IsYUFBTyxLQUFLRixHQUFMLENBQVMsS0FBS0QsR0FBTCxFQUFULENBQVA7QUFDSDtBQVJFLEdBQVA7QUFVSCxDQVhEIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29tID0gZnVuY3Rpb24oKXt9XG5cbmNvbS5kYXRlU3RyID0gZnVuY3Rpb24odCkge1xuICAgIHZhciBlID0gdC5nZXRNb250aCgpICsgMSxcbiAgICBuID0gdC5nZXREYXRlKCksXG4gICAgaSA9IHQuZ2V0SG91cnMoKSxcbiAgICBzID0gdC5nZXRNaW51dGVzKCksXG4gICAgYSA9IHQuZ2V0U2Vjb25kcygpO1xuICAgIHJldHVybiB0LmdldEZ1bGxZZWFyKCkgKyBcIi1cIiArICgxMCA+IGUgPyBcIjBcIiArIGU6IFwiXCIgKyBlKSArIFwiLVwiICsgKDEwID4gbiA/IFwiMFwiICsgbjogXCJcIiArIG4pICsgXCIgXCIgKyAoMTAgPiBpID8gXCIwXCIgKyBpOiBcIlwiICsgaSkgKyBcIjpcIiArICgxMCA+IHMgPyBcIjBcIiArIHM6IFwiXCIgKyBzKSArIFwiOlwiICsgKDEwID4gYSA/IFwiMFwiICsgYTogXCJcIiArIGEpXG59LFxuXG5jb20uc3RyRGF0ZSA9IGZ1bmN0aW9uKHQpIHtcbiAgICBzd2l0Y2ggKHQubGVuZ3RoKSB7XG4gICAgY2FzZSA4OlxuICAgICAgICB2YXIgdCA9IHQuc3BsaXQoXCI6XCIpLFxuICAgICAgICBlID0gbmV3IERhdGU7XG4gICAgICAgIHJldHVybiBlLnNldFRpbWUoMCksXG4gICAgICAgIGUuc2V0VVRDSG91cnModFswXSksXG4gICAgICAgIGUuc2V0VVRDTWludXRlcyh0WzFdKSxcbiAgICAgICAgZS5zZXRVVENTZWNvbmRzKHRbMl0pLFxuICAgICAgICBlO1xuICAgIGNhc2UgMTA6XG4gICAgICAgIHJldHVybiB0ID0gdC5zcGxpdChcIi1cIiksXG4gICAgICAgIG5ldyBEYXRlKHRbMF0sIHRbMV0gLSAxLCB0WzJdLCAwLCAwLCAwKTtcbiAgICBjYXNlIDE5OlxuICAgICAgICByZXR1cm4gZSA9IHQuc3BsaXQoXCIgXCIpLFxuICAgICAgICB0ID0gZVswXS5zcGxpdChcIi1cIiksXG4gICAgICAgIGUgPSBlWzFdLnNwbGl0KFwiOlwiKSxcbiAgICAgICAgbmV3IERhdGUodFswXSwgdFsxXSAtIDEsIHRbMl0sIGVbMF0sIGVbMV0sIGVbMl0pO1xuICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IFwiSW52YWxpZCBkYXRlIGZvcm1hdCA6IFwiICsgdFxuICAgIH1cbn1cbmNvbS5jY2EgPSBmdW5jdGlvbih0LCBlKSB7XG4gICAgdmFyIG4gPSB0LmNoYXJDb2RlQXQoZSk7XG4gICAgcmV0dXJuIG4gIT0gbiA/IHZvaWQgMCA6IG5cbn1cbmNvbS5zdWJzdHIgPSBmdW5jdGlvbih0LCBlLCBuKSB7XG4gICAgcmV0dXJuIG51bGwgIT0gZSAmJiAwICE9IGUgJiYgbnVsbCAhPSBuICYmIDAgPiBuID8gXCJcIjogKG51bGwgPT0gbiAmJiAobiA9IHQubGVuZ3RoKSwgMCA+IGUgPyAoZSA9IHQubGVuZ3RoICsgZSwgMCA+IGUgJiYgKGUgPSAwKSkgOiAwID4gbiAmJiAobiA9IHQubGVuZ3RoICsgbiAtIGUpLCB0LnN1YnN0cihlLCBuKSlcbn1cbmNvbS5yZW1vdmUgPSBmdW5jdGlvbih0LCBlKSB7XG4gICAgdmFyIG4gPSB0LmluZGV4T2YoZSk7XG4gICAgcmV0dXJuIC0gMSA9PSBuID8gITEgOiAodC5zcGxpY2UobiwgMSksICEwKVxufVxuY29tLml0ZXIgPSBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY3VyOiAwLFxuICAgICAgICBhcnI6IHQsXG4gICAgICAgIGhhc05leHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3VyIDwgdGhpcy5hcnIubGVuZ3RoXG4gICAgICAgIH0sXG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXJyW3RoaXMuY3VyKytdXG4gICAgICAgIH1cbiAgICB9XG59OyJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/g - 001.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bfe6ayXISRPGJZU9+VRaz62', 'g - 001');
// Game/Scripts/g - 001.ts

// Learn TypeScript:
//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var NewClass = /** @class */ (function (_super) {
    __extends(NewClass, _super);
    function NewClass() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.label = null;
        _this.text = 'hello';
        return _this;
        // update (dt) {}
    }
    // LIFE-CYCLE CALLBACKS:
    // onLoad () {}
    NewClass.prototype.start = function () {
    };
    NewClass.prototype.randomInt = function (min, max) {
        if (max == null) {
            max = min;
            min = 0;
        }
        var val = Math.random() * (max - min);
        return Math.floor(val) + min;
    };
    ;
    NewClass.prototype.getRandomInArray = function (arr) {
        if (arr)
            return arr[g.randomInt(0, arr.length)];
    };
    ;
    NewClass.prototype.randomFloat = function (min, max) {
        return Math.random() * (max - min) + min;
    };
    ;
    NewClass.prototype.isNextDay = function (timeSec) {
        return g.isGreaterDate(new Date(), new Date(timeSec));
    };
    ;
    NewClass.prototype.isGreaterDate = function (now, before) {
        var diff = now.getTime() - before.getTime();
        if (diff > 86400000) // 24*60*60*1000
         {
            return true;
        }
        else {
            if (diff > 0)
                return now.getDate() != before.getDate();
            else
                return false;
        }
    };
    ;
    __decorate([
        property(cc.Label)
    ], NewClass.prototype, "label", void 0);
    __decorate([
        property
    ], NewClass.prototype, "text", void 0);
    NewClass = __decorate([
        ccclass
    ], NewClass);
    return NewClass;
}(cc.Component));
exports.default = NewClass;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcZyAtIDAwMS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFDcEIsd0VBQXdFO0FBQ3hFLG1CQUFtQjtBQUNuQixrRkFBa0Y7QUFDbEYsOEJBQThCO0FBQzlCLGtGQUFrRjs7QUFFNUUsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBc0MsNEJBQVk7SUFBbEQ7UUFBQSxxRUFrREM7UUEvQ0csV0FBSyxHQUFhLElBQUksQ0FBQztRQUd2QixVQUFJLEdBQVcsT0FBTyxDQUFDOztRQTJDdkIsaUJBQWlCO0lBQ3JCLENBQUM7SUExQ0csd0JBQXdCO0lBRXhCLGVBQWU7SUFFZix3QkFBSyxHQUFMO0lBRUEsQ0FBQztJQUVELDRCQUFTLEdBQVQsVUFBVSxHQUFVLEVBQUUsR0FBVTtRQUM1QixJQUFHLEdBQUcsSUFBSSxJQUFJLEVBQUU7WUFBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1lBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztTQUFDO1FBQ3JDLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUN0QyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ2pDLENBQUM7SUFBQSxDQUFDO0lBQ0gsbUNBQWdCLEdBQWhCLFVBQWtCLEdBQVk7UUFFekIsSUFBRyxHQUFHO1lBQ0YsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUE7SUFDN0MsQ0FBQztJQUFBLENBQUM7SUFFRiw4QkFBVyxHQUFYLFVBQWEsR0FBVSxFQUFDLEdBQVU7UUFFOUIsT0FBTyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQzdDLENBQUM7SUFBQSxDQUFDO0lBRUYsNEJBQVMsR0FBVCxVQUFVLE9BQU87UUFFYixPQUFPLENBQUMsQ0FBQyxhQUFhLENBQUMsSUFBSSxJQUFJLEVBQUUsRUFBQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFBO0lBQ3hELENBQUM7SUFBQSxDQUFDO0lBQ0YsZ0NBQWEsR0FBYixVQUFjLEdBQUcsRUFBQyxNQUFNO1FBRXBCLElBQUksSUFBSSxHQUFHLEdBQUcsQ0FBQyxPQUFPLEVBQUUsR0FBRyxNQUFNLENBQUMsT0FBTyxFQUFFLENBQUE7UUFDM0MsSUFBRyxJQUFJLEdBQUcsUUFBUSxFQUFFLGdCQUFnQjtTQUNwQztZQUNJLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7YUFBSTtZQUNELElBQUksSUFBSSxHQUFHLENBQUM7Z0JBQ1IsT0FBTyxHQUFHLENBQUMsT0FBTyxFQUFFLElBQUksTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFBOztnQkFFeEMsT0FBTyxLQUFLLENBQUM7U0FDcEI7SUFDTCxDQUFDO0lBQUEsQ0FBQztJQTdDRjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDOzJDQUNJO0lBR3ZCO1FBREMsUUFBUTswQ0FDYztJQU5OLFFBQVE7UUFENUIsT0FBTztPQUNhLFFBQVEsQ0FrRDVCO0lBQUQsZUFBQztDQWxERCxBQWtEQyxDQWxEcUMsRUFBRSxDQUFDLFNBQVMsR0FrRGpEO2tCQWxEb0IsUUFBUSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV3Q2xhc3MgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcclxuICAgIGxhYmVsOiBjYy5MYWJlbCA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5XHJcbiAgICB0ZXh0OiBzdHJpbmcgPSAnaGVsbG8nO1xyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIC8vIG9uTG9hZCAoKSB7fVxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuXHJcbiAgICB9XHJcbiAgXHJcbiAgICByYW5kb21JbnQobWluOm51bWJlciwgbWF4Om51bWJlcikge1xyXG4gICAgICAgIGlmKG1heCA9PSBudWxsKSB7bWF4ID0gbWluOyBtaW4gPSAwO31cclxuICAgICAgICB2YXIgdmFsID0gTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pO1xyXG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKHZhbCkgKyBtaW47XHJcbiAgICB9O1xyXG4gICBnZXRSYW5kb21JbkFycmF5IChhcnI6bnVtYmVyW10pXHJcbiAgICB7XHJcbiAgICAgICAgaWYoYXJyKVxyXG4gICAgICAgICAgICByZXR1cm4gYXJyW2cucmFuZG9tSW50KDAsYXJyLmxlbmd0aCldXHJcbiAgICB9O1xyXG5cclxuICAgIHJhbmRvbUZsb2F0IChtaW46bnVtYmVyLG1heDpudW1iZXIpXHJcbiAgICB7XHJcbiAgICAgICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbjtcclxuICAgIH07XHJcblxyXG4gICAgaXNOZXh0RGF5KHRpbWVTZWMpXHJcbiAgICB7XHJcbiAgICAgICAgcmV0dXJuIGcuaXNHcmVhdGVyRGF0ZShuZXcgRGF0ZSgpLG5ldyBEYXRlKHRpbWVTZWMpKVxyXG4gICAgfTtcclxuICAgIGlzR3JlYXRlckRhdGUobm93LGJlZm9yZSlcclxuICAgIHtcclxuICAgICAgICB2YXIgZGlmZiA9IG5vdy5nZXRUaW1lKCkgLSBiZWZvcmUuZ2V0VGltZSgpIFxyXG4gICAgICAgIGlmKGRpZmYgPiA4NjQwMDAwMCkgLy8gMjQqNjAqNjAqMTAwMFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGlmIChkaWZmID4gMCApXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbm93LmdldERhdGUoKSAhPSBiZWZvcmUuZ2V0RGF0ZSgpXHJcbiAgICAgICAgICAgIGVsc2UgXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7IFxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/gamesys/PoolManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '69495bpMX5Av5pbrNxnGI8/', 'PoolManager');
// framework/plugin_boosts/gamesys/PoolManager.ts

Object.defineProperty(exports, "__esModule", { value: true });
var PoolManager = /** @class */ (function () {
    function PoolManager(root, onCreateObject, target) {
        this.nodePool = {};
        this.nodes = {};
        this.managed = false;
        this.aliveObjects = [];
        this.onCreateObject = onCreateObject;
        this.target = target;
        this.root = root;
        if (root) {
            root.on(cc.Node.EventType.CHILD_REMOVED, this.onNodeRemove, this);
        }
    }
    PoolManager.prototype.onNodeRemove = function (node) {
        this.put(node);
    };
    PoolManager.prototype.objects = function () {
        return this.aliveObjects;
    };
    PoolManager.prototype.clearAlives = function () {
        for (var i = 0; i < this.aliveObjects.length;) {
            var obj = this.aliveObjects[i];
            obj.removeFromParent();
        }
    };
    PoolManager.prototype.getPool = function (type) {
        if (typeof (type) != "string" || typeof (type) != "number") {
            type = type._uuid || type.name;
        }
        var pool = this.nodePool[type];
        if (pool == null) {
            pool = new cc.NodePool();
            this.nodePool[type] = pool;
        }
        return pool;
    };
    PoolManager.prototype.get = function (type) {
        var node = this.getPool(type).get();
        if (this.onCreateObject) {
            if (node == null) {
                node = this.onCreateObject.call(this.target, type);
                if (this.root)
                    node.setParent(this.root);
                if (!node)
                    console.warn(node, "onCreateObject must return an object");
                if (this.managed)
                    this.aliveObjects.push(node);
                this.nodes[node.uuid] = type;
                return node;
            }
        }
        if (this.root)
            node.setParent(this.root);
        if (this.managed)
            this.aliveObjects.push(node);
        return node;
    };
    PoolManager.prototype.tag = function (node, type) {
        this.nodes[node.uuid] = type;
    };
    PoolManager.prototype.put = function (node, type) {
        if (type === void 0) { type = null; }
        if (type == null)
            type = this.nodes[node.uuid];
        this.getPool(type).put(node);
        if (this.managed)
            this.aliveObjects.splice(this.aliveObjects.indexOf(node), 1);
    };
    PoolManager.prototype.clear = function (type) {
        if (this.managed)
            this.aliveObjects.splice(0, this.aliveObjects.length);
        if (type)
            this.getPool(type).clear();
        else {
            for (var t in this.nodePool) {
                var pool = this.nodePool[t];
                pool.clear();
            }
        }
    };
    PoolManager.prototype.size = function (type) {
        return this.getPool(type).size();
    };
    return PoolManager;
}());
exports.default = PoolManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxnYW1lc3lzXFxQb29sTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7SUFhSSxxQkFBWSxJQUFhLEVBQUMsY0FBZSxFQUFDLE1BQU87UUFYakQsYUFBUSxHQUFPLEVBQUUsQ0FBQTtRQUVqQixVQUFLLEdBQUcsRUFBRSxDQUFBO1FBTVYsWUFBTyxHQUFXLEtBQUssQ0FBQztRQUN4QixpQkFBWSxHQUFhLEVBQUUsQ0FBQTtRQUl2QixJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFHLElBQUksRUFDUDtZQUNJLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUE7U0FDcEU7SUFDTCxDQUFDO0lBRUQsa0NBQVksR0FBWixVQUFhLElBQUk7UUFFYixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ25CLENBQUM7SUFFRCw2QkFBTyxHQUFQO1FBRUksT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzdCLENBQUM7SUFFRCxpQ0FBVyxHQUFYO1FBRUksS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxHQUMzQztZQUNJLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUE7WUFDOUIsR0FBRyxDQUFDLGdCQUFnQixFQUFFLENBQUE7U0FDekI7SUFDTCxDQUFDO0lBRUQsNkJBQU8sR0FBUCxVQUFRLElBQUk7UUFFUixJQUFHLE9BQU0sQ0FBQyxJQUFJLENBQUMs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LElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUE7Z0JBQzNCLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQzthQUNoQjtTQUNKO0lBQ0wsQ0FBQztJQUVELDBCQUFJLEdBQUosVUFBSyxJQUFJO1FBRUwsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3JDLENBQUM7SUFDTCxrQkFBQztBQUFELENBckhBLEFBcUhDLElBQUEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvb2xNYW5hZ2VyXG57XG4gICAgbm9kZVBvb2w6YW55ID0ge31cbiAgICBcbiAgICBub2RlcyA9IHt9XG5cbiAgICBvbkNyZWF0ZU9iamVjdDpGdW5jdGlvbjtcbiAgICB0YXJnZXQ6YW55O1xuICAgIHJvb3Q6Y2MuTm9kZTtcblxuICAgIG1hbmFnZWQ6Ym9vbGVhbiA9IGZhbHNlO1xuICAgIGFsaXZlT2JqZWN0czpjYy5Ob2RlW10gPSBbXVxuXG4gICAgY29uc3RydWN0b3Iocm9vdD86Y2MuTm9kZSxvbkNyZWF0ZU9iamVjdD8sdGFyZ2V0PylcbiAgICB7XG4gICAgICAgIHRoaXMub25DcmVhdGVPYmplY3QgPSBvbkNyZWF0ZU9iamVjdDtcbiAgICAgICAgdGhpcy50YXJnZXQgPSB0YXJnZXQ7XG4gICAgICAgIHRoaXMucm9vdCA9IHJvb3Q7XG4gICAgICAgIGlmKHJvb3QpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJvb3Qub24oY2MuTm9kZS5FdmVudFR5cGUuQ0hJTERfUkVNT1ZFRCwgdGhpcy5vbk5vZGVSZW1vdmUsIHRoaXMpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvbk5vZGVSZW1vdmUobm9kZSlcbiAgICB7XG4gICAgICAgIHRoaXMucHV0KG5vZGUpO1xuICAgIH1cblxuICAgIG9iamVjdHMoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWxpdmVPYmplY3RzO1xuICAgIH1cblxuICAgIGNsZWFyQWxpdmVzKClcbiAgICB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpPCB0aGlzLmFsaXZlT2JqZWN0cy5sZW5ndGg7KVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgb2JqID0gdGhpcy5hbGl2ZU9iamVjdHNbaV1cbiAgICAgICAgICAgIG9iai5yZW1vdmVGcm9tUGFyZW50KClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldFBvb2wodHlwZSk6Y2MuTm9kZVBvb2xcbiAgICB7XG4gICAgICAgIGlmKHR5cGVvZih0eXBlKSAhPSBcInN0cmluZ1wiIHx8IHR5cGVvZih0eXBlKSE9IFwibnVtYmVyXCIgKVxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlID0gdHlwZS5fdXVpZCB8fCB0eXBlLm5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHBvb2wgPSB0aGlzLm5vZGVQb29sW3R5cGVdO1xuICAgICAgICBpZihwb29sID09IG51bGwpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHBvb2wgPSBuZXcgY2MuTm9kZVBvb2woKTtcbiAgICAgICAgICAgIHRoaXMubm9kZVBvb2xbdHlwZV0gPSBwb29sO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwb29sO1xuICAgIH1cblxuICAgIGdldCh0eXBlKTpjYy5Ob2RlXG4gICAge1xuICAgICAgICBsZXQgbm9kZSA9ICB0aGlzLmdldFBvb2wodHlwZSkuZ2V0KCk7XG4gICAgICAgIGlmKHRoaXMub25DcmVhdGVPYmplY3QpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKG5vZGUgPT0gbnVsbClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBub2RlID0gdGhpcy5vbkNyZWF0ZU9iamVjdC5jYWxsKHRoaXMudGFyZ2V0LHR5cGUpXG4gICAgICAgICAgICAgICAgaWYodGhpcy5yb290KVxuICAgICAgICAgICAgICAgICAgICBub2RlLnNldFBhcmVudCh0aGlzLnJvb3QpO1xuICAgICAgICAgICAgICAgIGlmKCFub2RlIClcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKG5vZGUsXCJvbkNyZWF0ZU9iamVjdCBtdXN0IHJldHVybiBhbiBvYmplY3RcIilcbiAgICAgICAgICAgICAgICBpZih0aGlzLm1hbmFnZWQpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWxpdmVPYmplY3RzLnB1c2gobm9kZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5ub2Rlc1tub2RlLnV1aWRdID0gdHlwZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLnJvb3QpXG4gICAgICAgICAgICBub2RlLnNldFBhcmVudCh0aGlzLnJvb3QpO1xuICAgICAgICBpZih0aGlzLm1hbmFnZWQpXG4gICAgICAgICAgICB0aGlzLmFsaXZlT2JqZWN0cy5wdXNoKG5vZGUpO1xuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICB9XG5cbiAgICB0YWcobm9kZSx0eXBlKVxuICAgIHtcbiAgICAgICAgdGhpcy5ub2Rlc1tub2RlLnV1aWRdID0gdHlwZTtcbiAgICB9XG5cbiAgICBwdXQobm9kZTpjYy5Ob2RlLHR5cGUgPSBudWxsKVxuICAgIHtcbiAgICAgICAgaWYodHlwZSA9PSBudWxsKVxuICAgICAgICAgICAgdHlwZSA9IHRoaXMubm9kZXNbbm9kZS51dWlkXTtcbiAgICAgICAgdGhpcy5nZXRQb29sKHR5cGUpLnB1dChub2RlKTtcbiAgICAgICAgaWYodGhpcy5tYW5hZ2VkKVxuICAgICAgICAgICAgdGhpcy5hbGl2ZU9iamVjdHMuc3BsaWNlKHRoaXMuYWxpdmVPYmplY3RzLmluZGV4T2Yobm9kZSksMSk7XG4gICAgfVxuXG4gICAgY2xlYXIodHlwZT8pXG4gICAge1xuICAgICAgICBpZih0aGlzLm1hbmFnZWQpXG4gICAgICAgICAgICB0aGlzLmFsaXZlT2JqZWN0cy5zcGxpY2UoMCx0aGlzLmFsaXZlT2JqZWN0cy5sZW5ndGgpO1xuICAgICAgICBpZih0eXBlKVxuICAgICAgICAgICAgdGhpcy5nZXRQb29sKHR5cGUpLmNsZWFyKCk7XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgZm9yICh2YXIgdCBpbiB0aGlzLm5vZGVQb29sKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGxldCBwb29sID0gdGhpcy5ub2RlUG9vbFt0XVxuICAgICAgICAgICAgICAgIHBvb2wuY2xlYXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNpemUodHlwZSlcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFBvb2wodHlwZSkuc2l6ZSgpO1xuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/network/Socket.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8cfb4mvQk5BQqbWZvml7K36', 'Socket');
// framework/network/Socket.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.Socket = void 0;
var MessageHandler_1 = require("./MessageHandler");
var MessageType_1 = require("./MessageType");
/**
* name
*/
var Socket = /** @class */ (function () {
    function Socket(conf) {
        this._config = null;
        this._reconnetTimes = 200;
        this._defaultTimeout = 10000;
        this.retryTimer = 0;
        this.initSocket(conf);
    }
    Socket.prototype.initSocket = function (conf) {
        this._config = conf;
        if (!this._config.timeout)
            this._config.timeout = this._defaultTimeout;
        if (this._config.retime)
            this._reconnetTimes = this._config.retime;
        this.connect();
    };
    Socket.prototype.connect = function () {
        var _this = this;
        var addr = this._config.host;
        if (this._config.port) {
            addr = this._config.host + ":" + this._config.port;
        }
        console.log("start connect server>>>>", addr);
        this._webSocket = new WebSocket(addr);
        this._messageHandler = new MessageHandler_1.MessageHandler(this._webSocket);
        // this._webSocket.endian = Laya.Byte.BIG_ENDIAN;
        // if(this._config.timeout)this._webSocket.timeout=this._config.timeout;
        this._webSocket.onopen = function (event) { return _this.onSocketOpen(); };
        this._webSocket.onmessage = function (event) { return _this.onReceiveMessage(event); };
        this._webSocket.onclose = function (event) { return _this.onSocketClose(); };
        this._webSocket.onerror = function (event) { return _this.onSocketError(); };
    };
    Socket.prototype.close = function () {
        if (this._webSocket) {
            // this._webSocket.offAll(null);
            this._webSocket.close();
        }
    };
    Socket.prototype.flush = function () {
        // if(this._webSocket.connected){
        // this._webSocket.flush();
        // }
    };
    Socket.prototype.enableHeartbeat = function (enable) {
        this._messageHandler.enableHeartbeat = enable;
    };
    Socket.prototype.onSocketOpen = function () {
        console.log("connect " + this._config.host + " success");
        this._messageHandler.dispatch(MessageType_1.SocketTag.KSOCKET_OPEN, "");
    };
    Socket.prototype.onReceiveMessage = function (event) {
        var _this = this;
        if (event === void 0) { event = null; }
        console.log("websocket receive message:" + event.data);
        if (typeof (wx) == "undefined") {
            this.toArrayBuffer(event.data).then(function (arrbuf) {
                _this._messageHandler.dispatch(MessageType_1.SocketTag.KSOCKET_MESSAGE, arrbuf);
            });
        }
        else {
            this._messageHandler.dispatch(MessageType_1.SocketTag.KSOCKET_MESSAGE, event.data);
        }
    };
    Socket.prototype.toArrayBuffer = function (blob) {
        //将Blob 对象转换成 ArrayBuffer
        var arrayBuffer;
        var reader = new FileReader();
        reader.readAsArrayBuffer(blob);
        return new Promise(function (resolve, reject) {
            reader.onload = function (e) {
                arrayBuffer = reader.result;
                resolve(arrayBuffer);
            };
        });
    };
    Socket.prototype.sendMessage = function (msg) {
        if (this._webSocket.readyState == WebSocket.OPEN) {
            this._messageHandler.sendMessage(msg);
            return true;
        }
        return false;
    };
    Socket.prototype.sendCustomMessage = function (msg) {
        this._messageHandler.dispatchMessage(msg);
    };
    Socket.prototype.reconnect = function () {
        var _this = this;
        // cc.director.getScheduler().unscheduleAllForTarget(this);
        if (Socket.count >= 2 || this._webSocket.readyState == WebSocket.OPEN) {
            clearTimeout(this.retryTimer);
        }
        else {
            if (this._webSocket.readyState == WebSocket.CLOSED) {
                this.connect();
            }
            this.retryTimer = setTimeout(function () {
                _this.reconnect();
            }, this._reconnetTimes);
        }
    };
    Socket.prototype.onSocketClose = function (e) {
        if (e === void 0) { e = null; }
        this._messageHandler.dispatch(MessageType_1.SocketTag.KSOCKET_CLOSE, "");
        console.log("websocket connect close.", this._webSocket.readyState);
        this.close();
        this.reconnect();
    };
    Socket.prototype.onSocketError = function (e) {
        if (e === void 0) { e = null; }
        this._messageHandler.dispatch(MessageType_1.SocketTag.KSOCKET_ERROR, "");
        console.log("websocket io error.");
        // this.reconnect(true);
    };
    Socket.count = 0;
    return Socket;
}());
exports.Socket = Socket;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/network/MessageDispatch.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '27032HakQBLd5OVLXAxtzCc', 'MessageDispatch');
// framework/network/MessageDispatch.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageDispatch = void 0;
var MessageDispatch = /** @class */ (function () {
    function MessageDispatch() {
        this._handler = null;
        this._allMessageBases = {};
    }
    MessageDispatch.getInstance = function () {
        if (this._instace == null) {
            this._instace = new MessageDispatch();
        }
        return this._instace;
    };
    MessageDispatch.prototype.register = function (key, msgPro) {
        if (key == null)
            return null;
        if (msgPro == null)
            return null;
        var allBases = this._allMessageBases[key];
        if (allBases == null)
            this._allMessageBases[key] = [];
        this._allMessageBases[key].push(msgPro);
        return msgPro;
    };
    MessageDispatch.prototype.isNull = function (key) {
        var allBases = this._allMessageBases[key];
        if (allBases != null && allBases.length > 0)
            return true;
        return false;
    };
    MessageDispatch.prototype.registerUnique = function (key, msgPro) {
        if (key == null)
            return null;
        var allBases = this._allMessageBases[key];
        if (allBases != null && allBases.length > 0)
            return this._allMessageBases[key][0];
        else
            return this.register(key, msgPro);
    };
    MessageDispatch.prototype.getBean = function (key) {
        if (key == null)
            return null;
        var allBeans = this._allMessageBases[key];
        if (allBeans != null && allBeans.length > 0) {
            return allBeans[0];
        }
        return null;
    };
    MessageDispatch.prototype.unRegister = function (key) {
        var allBases = this._allMessageBases[key];
        if (allBases == null)
            return;
        for (var i = 0; i < allBases.length; i++)
            allBases[i].onDestory();
        this._allMessageBases[key] = null;
        delete this._allMessageBases[key];
    };
    MessageDispatch.prototype.onMessage = function (msg) {
        for (var key in this._allMessageBases) {
            if (this._allMessageBases[key] == null)
                continue;
            var allBases = this._allMessageBases[key];
            for (var i = 0; i < allBases.length; i++)
                if (allBases[i].onMessage(msg))
                    return true;
        }
        return false;
    };
    MessageDispatch._instace = null;
    return MessageDispatch;
}());
exports.MessageDispatch = MessageDispatch;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxuZXR3b3JrXFxNZXNzYWdlRGlzcGF0Y2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTtJQWNDO1FBQ0MsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDckIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBYmEsMkJBQVcsR0FBekI7UUFDQyxJQUFHLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxFQUFDO1lBQ3hCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxlQUFlLEVBQUUsQ0FBQztTQUN0QztRQUNELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN0QixDQUFDO0lBVU0sa0NBQVEsR0FBZixVQUFnQixHQUFXLEVBQUUsTUFBbUI7UUFDL0MsSUFBRyxHQUFHLElBQUksSUFBSTtZQUFFLE9BQU8sSUFBSSxDQUFDO1FBQzVCLElBQUcsTUFBTSxJQUFJLElBQUk7WUFBRSxPQUFPLElBQUksQ0FBQztRQUMvQixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDMUMsSUFBRyxRQUFRLElBQUksSUFBSTtZQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDcEQsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4QyxPQUFPLE1BQU0sQ0FBQztJQUNmLENBQUM7SUFFTSxnQ0FBTSxHQUFiLFVBQWMsR0FBVztRQUN4QixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDMUMsSUFBRyxRQUFRLElBQUksSUFBSSxJQUFJLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQztZQUN6QyxPQUFPLElBQUksQ0FBQztRQUNiLE9BQU8sS0FBSyxDQUFDO0lBQ2QsQ0FBQztJQUVNLHdDQUFjLEdBQXJCLFVBQXNCLEdBQVcsRUFBRSxNQUFvQjtRQUN0RCxJQUFHLEdBQUcsSUFBSSxJQUFJO1lBQUcsT0FBTyxJQUFJLENBQUM7UUFDN0IsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzFDLElBQUcsUUFBUSxJQUFJLElBQUksSUFBSSxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUM7WUFDekMsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7O1lBQ2pDLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVNLGlDQUFPLEdBQWQsVUFBZSxHQUFXO1FBQ3pCLElBQUksR0FBRyxJQUFJLElBQUk7WUFBRyxPQUFPLElBQUksQ0FBQztRQUM5QixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDMUMsSUFBRyxRQUFRLElBQUksSUFBSSxJQUFJLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFDO1lBQzFDLE9BQVksUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3hCO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRU0sb0NBQVUsR0FBakIsVUFBa0IsR0FBVztRQUM1QixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDMUMsSUFBRyxRQUFRLElBQUksSUFBSTtZQUFFLE9BQU87UUFDNUIsS0FBSSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFO1lBQ3RDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUN6QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2xDLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFTSxtQ0FBUyxHQUFoQixVQUFpQixHQUFRO1FBQ3hCLEtBQUksSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFDO1lBQ3BDLElBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxJQUFFLElBQUk7Z0JBQUMsU0FBUztZQUM3QyxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDMUMsS0FBSSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFO2dCQUN0QyxJQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO29CQUFFLE9BQU8sSUFBSSxDQUFDO1NBQzVDO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZCxDQUFDO0lBbkVjLHdCQUFRLEdBQW9CLElBQUksQ0FBQztJQW9FakQsc0JBQUM7Q0F0RUQsQUFzRUMsSUFBQTtBQXRFWSwwQ0FBZSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TWVzc2FnZUJhc2V9IGZyb20gXCIuL01lc3NhZ2VCYXNlXCJcbmV4cG9ydCBjbGFzcyBNZXNzYWdlRGlzcGF0Y2h7XG5cblx0cHJpdmF0ZSBzdGF0aWMgX2luc3RhY2U6IE1lc3NhZ2VEaXNwYXRjaCA9IG51bGw7XG5cblx0cHVibGljIHN0YXRpYyBnZXRJbnN0YW5jZSgpe1xuXHRcdGlmKHRoaXMuX2luc3RhY2UgPT0gbnVsbCl7XG5cdFx0XHR0aGlzLl9pbnN0YWNlID0gbmV3IE1lc3NhZ2VEaXNwYXRjaCgpO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5faW5zdGFjZTtcblx0fVxuXG5cdHByaXZhdGUgX2hhbmRsZXI6IGFueTtcblx0cHJpdmF0ZSBfYWxsTWVzc2FnZUJhc2VzOiB7W2tleTogc3RyaW5nXTogTWVzc2FnZUJhc2VbXX07XG5cblx0Y29uc3RydWN0b3IoKXtcblx0XHR0aGlzLl9oYW5kbGVyID0gbnVsbDtcblx0XHR0aGlzLl9hbGxNZXNzYWdlQmFzZXMgPSB7fTtcblx0fVxuXG5cdHB1YmxpYyByZWdpc3RlcihrZXk6IHN0cmluZywgbXNnUHJvOiBNZXNzYWdlQmFzZSl7XG5cdFx0aWYoa2V5ID09IG51bGwpIHJldHVybiBudWxsO1xuXHRcdGlmKG1zZ1BybyA9PSBudWxsKSByZXR1cm4gbnVsbDtcblx0XHRsZXQgYWxsQmFzZXMgPSB0aGlzLl9hbGxNZXNzYWdlQmFzZXNba2V5XTtcblx0XHRpZihhbGxCYXNlcyA9PSBudWxsKXRoaXMuX2FsbE1lc3NhZ2VCYXNlc1trZXldID0gW107XG5cdFx0dGhpcy5fYWxsTWVzc2FnZUJhc2VzW2tleV0ucHVzaChtc2dQcm8pO1xuXHRcdHJldHVybiBtc2dQcm87XG5cdH1cblxuXHRwdWJsaWMgaXNOdWxsKGtleTogc3RyaW5nKXtcblx0XHRsZXQgYWxsQmFzZXMgPSB0aGlzLl9hbGxNZXNzYWdlQmFzZXNba2V5XTtcblx0XHRpZihhbGxCYXNlcyAhPSBudWxsICYmIGFsbEJhc2VzLmxlbmd0aCA+IDApXG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRwdWJsaWMgcmVnaXN0ZXJVbmlxdWUoa2V5OiBzdHJpbmcsIG1zZ1Bybz86IE1lc3NhZ2VCYXNlKXtcblx0XHRpZihrZXkgPT0gbnVsbCApIHJldHVybiBudWxsO1xuXHRcdGxldCBhbGxCYXNlcyA9IHRoaXMuX2FsbE1lc3NhZ2VCYXNlc1trZXldO1xuXHRcdGlmKGFsbEJhc2VzICE9IG51bGwgJiYgYWxsQmFzZXMubGVuZ3RoID4gMClcblx0XHRcdHJldHVybiB0aGlzLl9hbGxNZXNzYWdlQmFzZXNba2V5XVswXTtcblx0XHRlbHNlIHJldHVybiB0aGlzLnJlZ2lzdGVyKGtleSwgbXNnUHJvKTtcblx0fVxuXG5cdHB1YmxpYyBnZXRCZWFuKGtleTogc3RyaW5nKSB7XG5cdFx0aWYoIGtleSA9PSBudWxsICkgcmV0dXJuIG51bGw7XG5cdFx0bGV0IGFsbEJlYW5zID0gdGhpcy5fYWxsTWVzc2FnZUJhc2VzW2tleV07XG5cdFx0aWYoYWxsQmVhbnMgIT0gbnVsbCAmJiBhbGxCZWFucy5sZW5ndGggPiAwKXtcblx0XHRcdHJldHVybiA8YW55PmFsbEJlYW5zWzBdO1xuXHRcdH1cblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdHB1YmxpYyB1blJlZ2lzdGVyKGtleTogc3RyaW5nKXtcblx0XHRsZXQgYWxsQmFzZXMgPSB0aGlzLl9hbGxNZXNzYWdlQmFzZXNba2V5XTtcblx0XHRpZihhbGxCYXNlcyA9PSBudWxsKSByZXR1cm47XG5cdFx0Zm9yKGxldCBpID0gMDsgaSA8IGFsbEJhc2VzLmxlbmd0aDsgaSsrKVxuXHRcdFx0YWxsQmFzZXNbaV0ub25EZXN0b3J5KCk7XG5cdFx0dGhpcy5fYWxsTWVzc2FnZUJhc2VzW2tleV0gPSBudWxsO1xuXHRcdGRlbGV0ZSB0aGlzLl9hbGxNZXNzYWdlQmFzZXNba2V5XTtcblx0fVxuXG5cdHB1YmxpYyBvbk1lc3NhZ2UobXNnOiBhbnkpe1xuXHRcdGZvcihsZXQga2V5IGluIHRoaXMuX2FsbE1lc3NhZ2VCYXNlcyl7XG5cdFx0XHRpZih0aGlzLl9hbGxNZXNzYWdlQmFzZXNba2V5XT09bnVsbCljb250aW51ZTtcblx0XHRcdGxldCBhbGxCYXNlcyA9IHRoaXMuX2FsbE1lc3NhZ2VCYXNlc1trZXldO1xuXHRcdFx0Zm9yKGxldCBpID0gMDsgaSA8IGFsbEJhc2VzLmxlbmd0aDsgaSsrKVxuXHRcdFx0XHRpZihhbGxCYXNlc1tpXS5vbk1lc3NhZ2UobXNnKSkgcmV0dXJuIHRydWU7XG5cdFx0fVxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/network/ConnectManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ac5faec2blDKJorwXTfZFZx', 'ConnectManager');
// framework/network/ConnectManager.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.connManager = void 0;
var Socket_1 = require("./Socket");
var ConnectManager = /** @class */ (function () {
    function ConnectManager() {
        this._allConns = null;
        this._allConns = {};
    }
    ConnectManager.getInstance = function () {
        if (this._instance == null) {
            this._instance = new ConnectManager();
        }
        return this._instance;
    };
    ConnectManager.prototype.create = function (name, conf) {
        if (this._allConns[name] == null) {
            var socket = new Socket_1.Socket(conf);
            this._allConns[name] = socket;
            if (this._defaultKey == null)
                this._defaultKey = name;
        }
    };
    ConnectManager.prototype.setDefaultKey = function (key) {
        if (key != null && this._allConns[key]) {
            this._defaultKey = key;
        }
    };
    ConnectManager.prototype.getDefault = function () {
        return this.getConn(this._defaultKey);
    };
    ConnectManager.prototype.getConn = function (name) {
        if (name == null)
            return null;
        if (this._allConns[name] != null) {
            return this._allConns[name];
        }
        return null;
    };
    ConnectManager.prototype.sendMessage = function (msg, name) {
        if (name == null)
            name = this._defaultKey;
        var conn = this.getConn(name);
        if (conn != null) {
            conn.sendMessage(msg);
        }
    };
    ConnectManager.prototype.enableHeartbeat = function (name) {
        var conn = this.getConn(name);
        conn.enableHeartbeat(true);
    };
    ConnectManager.prototype.sendCustomMessage = function (msg) {
        var conn = this.getConn(this._defaultKey);
        if (conn != null)
            conn.sendCustomMessage(msg);
    };
    ConnectManager.prototype.remove = function (name) {
        var conn = this.getConn(name);
        if (conn != null) {
            delete this._allConns[name];
            conn.close();
        }
    };
    ConnectManager._instance = null;
    return ConnectManager;
}());
exports.connManager = ConnectManager.getInstance();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxuZXR3b3JrXFxDb25uZWN0TWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG1DQUFrQztBQUlsQztJQWFDO1FBRlEsY0FBUyxHQUE2QixJQUFJLENBQUM7UUFHbEQsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7SUFDckIsQ0FBQztJQVphLDBCQUFXLEdBQXpCO1FBQ0MsSUFBRyxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksRUFBQztZQUN6QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksY0FBYyxFQUFFLENBQUM7U0FDdEM7UUFDRCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDdkIsQ0FBQztJQVNNLCtCQUFNLEdBQWIsVUFBYyxJQUFZLEVBQUUsSUFBUztRQUNwQyxJQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFDO1lBQy9CLElBQUksTUFBTSxHQUFHLElBQUksZUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzlCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsTUFBTSxDQUFDO1lBQzlCLElBQUcsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJO2dCQUMxQixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztTQUN6QjtJQUNGLENBQUM7SUFFTSxzQ0FBYSxHQUFwQixVQUFxQixHQUFXO1FBQy9CLElBQUcsR0FBRyxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3RDLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDO1NBQ3ZCO0lBQ0YsQ0FBQztJQUVNLG1DQUFVLEdBQWpCO1FBQ0MsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRU0sZ0NBQU8sR0FBZCxVQUFlLElBQVk7UUFDMUIsSUFBRyxJQUFJLElBQUksSUFBSTtZQUFFLE9BQU8sSUFBSSxDQUFDO1FBQzdCLElBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLEVBQUM7WUFDL0IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzVCO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRU0sb0NBQVcsR0FBbEIsVUFBbUIsR0FBWSxFQUFFLElBQWE7UUFDN0MsSUFBRyxJQUFJLElBQUksSUFBSTtZQUFFLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQ3pDLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsSUFBRyxJQUFJLElBQUksSUFBSSxFQUFDO1lBQ2YsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN0QjtJQUNGLENBQUM7SUFFTSx3Q0FBZSxHQUF0QixVQUF1QixJQUFZO1FBQ2xDLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRU0sMENBQWlCLEdBQXhCLFVBQXlCLEdBQVk7UUFDcEMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDMUMsSUFBSSxJQUFJLElBQUksSUFBSTtZQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRU0sK0JBQU0sR0FBYixVQUFjLElBQVk7UUFDekIsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QixJQUFHLElBQUksSUFBSSxJQUFJLEVBQUM7WUFDZixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDNUIsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQ2I7SUFDRixDQUFDO0lBbEVjLHdCQUFTLEdBQW1CLElBQUksQ0FBQztJQW9FakQscUJBQUM7Q0F0RUQsQUFzRUMsSUFBQTtBQUVVLFFBQUEsV0FBVyxHQUFtQixjQUFjLENBQUMsV0FBVyxFQUFFLENBQUMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTb2NrZXQgfSBmcm9tIFwiLi9Tb2NrZXRcIjtcbmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tIFwiLi9NZXNzYWdlXCI7XG5cblxuY2xhc3MgQ29ubmVjdE1hbmFnZXIge1xuXHRcblx0cHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBDb25uZWN0TWFuYWdlciA9IG51bGw7XG5cdHB1YmxpYyBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogQ29ubmVjdE1hbmFnZXJ7XG5cdFx0aWYodGhpcy5faW5zdGFuY2UgPT0gbnVsbCl7XG5cdFx0XHR0aGlzLl9pbnN0YW5jZSA9IG5ldyBDb25uZWN0TWFuYWdlcigpO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5faW5zdGFuY2U7XG5cdH1cblx0XG5cdHByaXZhdGUgX2RlZmF1bHRLZXk6IHN0cmluZztcblx0cHJpdmF0ZSBfYWxsQ29ubnM6IHsgW25hbWU6c3RyaW5nXTogU29ja2V0fSA9IG51bGw7XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKCl7XG5cdFx0dGhpcy5fYWxsQ29ubnMgPSB7fTtcblx0fVxuXG5cdHB1YmxpYyBjcmVhdGUobmFtZTogc3RyaW5nLCBjb25mOiBhbnkpe1xuXHRcdGlmKHRoaXMuX2FsbENvbm5zW25hbWVdID09IG51bGwpe1xuXHRcdFx0bGV0IHNvY2tldCA9IG5ldyBTb2NrZXQoY29uZik7XG5cdFx0XHR0aGlzLl9hbGxDb25uc1tuYW1lXSA9IHNvY2tldDtcblx0XHRcdGlmKHRoaXMuX2RlZmF1bHRLZXkgPT0gbnVsbClcblx0XHRcdFx0dGhpcy5fZGVmYXVsdEtleSA9IG5hbWU7XG5cdFx0fVxuXHR9XG5cblx0cHVibGljIHNldERlZmF1bHRLZXkoa2V5OiBzdHJpbmcpe1xuXHRcdGlmKGtleSAhPSBudWxsICYmIHRoaXMuX2FsbENvbm5zW2tleV0pIHtcblx0XHRcdHRoaXMuX2RlZmF1bHRLZXkgPSBrZXk7XG5cdFx0fVxuXHR9XG5cblx0cHVibGljIGdldERlZmF1bHQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuZ2V0Q29ubih0aGlzLl9kZWZhdWx0S2V5KTtcblx0fVxuXG5cdHB1YmxpYyBnZXRDb25uKG5hbWU6IHN0cmluZyl7XG5cdFx0aWYobmFtZSA9PSBudWxsKSByZXR1cm4gbnVsbDtcblx0XHRpZih0aGlzLl9hbGxDb25uc1tuYW1lXSAhPSBudWxsKXtcblx0XHRcdHJldHVybiB0aGlzLl9hbGxDb25uc1tuYW1lXTtcblx0XHR9XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHRwdWJsaWMgc2VuZE1lc3NhZ2UobXNnOiBNZXNzYWdlLCBuYW1lPzogc3RyaW5nKXtcblx0XHRpZihuYW1lID09IG51bGwpIG5hbWUgPSB0aGlzLl9kZWZhdWx0S2V5O1xuXHRcdGxldCBjb25uID0gdGhpcy5nZXRDb25uKG5hbWUpO1xuXHRcdGlmKGNvbm4gIT0gbnVsbCl7XG5cdFx0XHRjb25uLnNlbmRNZXNzYWdlKG1zZyk7XG5cdFx0fVxuXHR9XG5cblx0cHVibGljIGVuYWJsZUhlYXJ0YmVhdChuYW1lOiBzdHJpbmcpIHtcblx0XHRsZXQgY29ubiA9IHRoaXMuZ2V0Q29ubihuYW1lKTtcblx0XHRjb25uLmVuYWJsZUhlYXJ0YmVhdCh0cnVlKTtcblx0fVxuXG5cdHB1YmxpYyBzZW5kQ3VzdG9tTWVzc2FnZShtc2c6IE1lc3NhZ2Upe1xuXHRcdGxldCBjb25uID0gdGhpcy5nZXRDb25uKHRoaXMuX2RlZmF1bHRLZXkpO1xuXHRcdGlmIChjb25uICE9IG51bGwpIGNvbm4uc2VuZEN1c3RvbU1lc3NhZ2UobXNnKTtcblx0fVxuXG5cdHB1YmxpYyByZW1vdmUobmFtZTogc3RyaW5nKXtcblx0XHRsZXQgY29ubiA9IHRoaXMuZ2V0Q29ubihuYW1lKTtcblx0XHRpZihjb25uICE9IG51bGwpe1xuXHRcdFx0ZGVsZXRlIHRoaXMuX2FsbENvbm5zW25hbWVdO1xuXHRcdFx0Y29ubi5jbG9zZSgpO1xuXHRcdH1cblx0fVxuXHRcbn1cblxuZXhwb3J0IHZhciBjb25uTWFuYWdlcjogQ29ubmVjdE1hbmFnZXIgPSBDb25uZWN0TWFuYWdlci5nZXRJbnN0YW5jZSgpOyJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/gamesys/PsFxPlayer.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'dc35b3gh69DGIz45mLQJxDM', 'PsFxPlayer');
// framework/plugin_boosts/gamesys/PsFxPlayer.ts

Object.defineProperty(exports, "__esModule", { value: true });
var PsFx_1 = require("./PsFx");
var Device_1 = require("./Device");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var PsFxPlayer = /** @class */ (function (_super) {
    __extends(PsFxPlayer, _super);
    function PsFxPlayer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.prefab = null;
        _this._fx = null;
        _this.spriteFrame = null;
        _this.duration = -1;
        _this.randomRotaion = false;
        return _this;
        // update (dt) {}
    }
    PsFxPlayer.prototype.start = function () {
    };
    Object.defineProperty(PsFxPlayer.prototype, "fx", {
        get: function () {
            if (this._fx == null && this.prefab) {
                var node = cc.instantiate(this.prefab);
                if (node == null)
                    return null;
                var fx = node.getComponent(PsFx_1.default);
                if (fx == null) {
                    fx = this.addComponent(PsFx_1.default);
                }
                node.setPosition(0, 0);
                node.setParent(this.node);
                this._fx = fx;
            }
            return this._fx;
        },
        enumerable: false,
        configurable: true
    });
    PsFxPlayer.prototype.isPlaying = function () {
        return this.fx.isPlaying;
    };
    PsFxPlayer.prototype.onEnable = function () {
    };
    PsFxPlayer.prototype.onDisable = function () {
        var fx = this._fx;
        if (fx)
            fx.node.active = false;
    };
    PsFxPlayer.prototype.sleep = function (sec) {
        return new Promise(function (resolve, reject) {
            setTimeout(function (_) {
                resolve();
            }, sec);
        });
    };
    ;
    PsFxPlayer.prototype.play = function () {
        return __awaiter(this, void 0, void 0, function () {
            var fx;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        Device_1.default.playEffect(this.audioClip, false);
                        fx = this.fx;
                        if (!fx) return [3 /*break*/, 1];
                        fx.node.active = true;
                        if (this.randomRotaion)
                            //fx.node.rotation = g.randomInt(0,360);  
                            fx.reset();
                        return [2 /*return*/, fx.play(this.audioClip, this.spriteFrame)];
                    case 1:
                        if (!(this.duration > 0)) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.sleep(this.duration * 1000)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        property(cc.Prefab)
    ], PsFxPlayer.prototype, "prefab", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], PsFxPlayer.prototype, "spriteFrame", void 0);
    __decorate([
        property({ type: cc.AudioClip })
    ], PsFxPlayer.prototype, "audioClip", void 0);
    __decorate([
        property
    ], PsFxPlayer.prototype, "duration", void 0);
    __decorate([
        property
    ], PsFxPlayer.prototype, "randomRotaion", void 0);
    PsFxPlayer = __decorate([
        ccclass
    ], PsFxPlayer);
    return PsFxPlayer;
}(cc.Component));
exports.default = PsFxPlayer;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxnYW1lc3lzXFxQc0Z4UGxheWVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwrQkFBMEI7QUFDMUIsbUNBQThCO0FBRXhCLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXdDLDhCQUFZO0lBQXBEO1FBQUEscUVBbUZDO1FBaEZHLFlBQU0sR0FBYSxJQUFJLENBQUE7UUFFdkIsU0FBRyxHQUFRLElBQUksQ0FBQztRQUdoQixpQkFBVyxHQUFrQixJQUFJLENBQUE7UUFNakMsY0FBUSxHQUFVLENBQUMsQ0FBQyxDQUFDO1FBR3JCLG1CQUFhLEdBQVksS0FBSyxDQUFDOztRQWlFL0IsaUJBQWlCO0lBQ3JCLENBQUM7SUFoRUcsMEJBQUssR0FBTDtJQUNBLENBQUM7SUFFRCxzQkFBSSwwQkFBRTthQUFOO1lBRUksSUFBRyxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxFQUNsQztnQkFDSSxJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDdkMsSUFBRyxJQUFJLElBQUksSUFBSTtvQkFBRSxPQUFPLElBQUksQ0FBQztnQkFDN0IsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFJLENBQUMsQ0FBQTtnQkFDaEMsSUFBRyxFQUFFLElBQUksSUFBSSxFQUNiO29CQUNJLEVBQUUsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQUksQ0FBQyxDQUFDO2lCQUNoQztnQkFDRCxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztnQkFDdEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQzFCLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDO2FBQ2pCO1lBQ0QsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDO1FBQ3BCLENBQUM7OztPQUFBO0lBRUQsOEJBQVMsR0FBVDtRQUVJLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUM7SUFDN0IsQ0FBQztJQUVELDZCQUFRLEdBQVI7SUFHQSxDQUFDO0lBRUQsOEJBQVMsR0FBVDtRQUVJLElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7UUFDbEIsSUFBRyxFQUFFO1lBQ0QsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQy9CLENBQUM7SUFFRCwwQkFBSyxHQUFMLFVBQU0sR0FBRztRQUNMLE9BQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUMsTUFBTTtZQUM5QixVQUFVLENBQUMsVUFBQSxDQUFDO2dCQUNSLE9BQU8sRUFBRSxDQUFDO1lBQ2QsQ0FBQyxFQUFHLEdBQUcsQ0FBQyxDQUFBO1FBQ1osQ0FBQyxDQUFDLENBQUE7SUFDTixDQUFDO0lBQUEsQ0FBQztJQUVJLHlCQUFJLEdBQVY7Ozs7Ozt3QkFFSSxnQkFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFDLEtBQUssQ0FBQyxDQUFDO3dCQUNwQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQzs2QkFDZCxFQUFFLEVBQUYsd0JBQUU7d0JBRUQsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO3dCQUN0QixJQUFHLElBQUksQ0FBQyxhQUFhOzRCQUNqQiwwQ0FBMEM7NEJBQzlDLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQzt3QkFDWCxzQkFBTyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFDOzs2QkFFN0MsQ0FBQSxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQSxFQUFqQix3QkFBaUI7d0JBQ2hCLHFCQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsRUFBQTs7d0JBQXRDLFNBQXNDLENBQUM7Ozs7OztLQUVsRDtJQTdFRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDOzhDQUNHO0lBS3ZCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUM7bURBQ1E7SUFHakM7UUFEQyxRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBQyxDQUFDO2lEQUNSO0lBR3ZCO1FBREMsUUFBUTtnREFDWTtJQUdyQjtRQURDLFFBQVE7cURBQ3NCO0lBakJkLFVBQVU7UUFEOUIsT0FBTztPQUNhLFVBQVUsQ0FtRjlCO0lBQUQsaUJBQUM7Q0FuRkQsQUFtRkMsQ0FuRnVDLEVBQUUsQ0FBQyxTQUFTLEdBbUZuRDtrQkFuRm9CLFVBQVUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHNGeCBmcm9tIFwiLi9Qc0Z4XCI7XG5pbXBvcnQgRGV2aWNlIGZyb20gXCIuL0RldmljZVwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBzRnhQbGF5ZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgQHByb3BlcnR5KGNjLlByZWZhYilcbiAgICBwcmVmYWI6Y2MuUHJlZmFiID0gbnVsbFxuXG4gICAgX2Z4OlBzRnggPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLlNwcml0ZUZyYW1lKVxuICAgIHNwcml0ZUZyYW1lOmNjLlNwcml0ZUZyYW1lID0gbnVsbFxuXG4gICAgQHByb3BlcnR5KHt0eXBlOiBjYy5BdWRpb0NsaXB9KVxuICAgIGF1ZGlvQ2xpcDpjYy5BdWRpb0NsaXA7XG5cbiAgICBAcHJvcGVydHlcbiAgICBkdXJhdGlvbjpudW1iZXIgPSAtMTtcblxuICAgIEBwcm9wZXJ0eVxuICAgIHJhbmRvbVJvdGFpb246IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIHN0YXJ0ICgpIHtcbiAgICB9XG5cbiAgICBnZXQgZngoKVxuICAgIHtcbiAgICAgICAgaWYodGhpcy5fZnggPT0gbnVsbCAmJiB0aGlzLnByZWZhYilcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IG5vZGUgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLnByZWZhYik7XG4gICAgICAgICAgICBpZihub2RlID09IG51bGwpIHJldHVybiBudWxsO1xuICAgICAgICAgICAgbGV0IGZ4ID0gbm9kZS5nZXRDb21wb25lbnQoUHNGeClcbiAgICAgICAgICAgIGlmKGZ4ID09IG51bGwpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZnggPSB0aGlzLmFkZENvbXBvbmVudChQc0Z4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5vZGUuc2V0UG9zaXRpb24oMCwwKTtcbiAgICAgICAgICAgIG5vZGUuc2V0UGFyZW50KHRoaXMubm9kZSk7XG4gICAgICAgICAgICB0aGlzLl9meCA9IGZ4O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9meDtcbiAgICB9XG5cbiAgICBpc1BsYXlpbmcoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZnguaXNQbGF5aW5nO1xuICAgIH1cblxuICAgIG9uRW5hYmxlKClcbiAgICB7XG4gICAgICAgIFxuICAgIH1cblxuICAgIG9uRGlzYWJsZSgpXG4gICAge1xuICAgICAgICBsZXQgZnggPSB0aGlzLl9meDtcbiAgICAgICAgaWYoZngpXG4gICAgICAgICAgICBmeC5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIHNsZWVwKHNlYyl7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpPT57XG4gICAgICAgICAgICBzZXRUaW1lb3V0KF89PntcbiAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICB9ICwgc2VjKVxuICAgICAgICB9KVxuICAgIH07XG5cbiAgICBhc3luYyBwbGF5KClcbiAgICB7XG4gICAgICAgIERldmljZS5wbGF5RWZmZWN0KHRoaXMuYXVkaW9DbGlwLGZhbHNlKTtcbiAgICAgICAgbGV0IGZ4ID0gdGhpcy5meDtcbiAgICAgICAgaWYoZngpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGZ4Lm5vZGUuYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmKHRoaXMucmFuZG9tUm90YWlvbilcbiAgICAgICAgICAgICAgICAvL2Z4Lm5vZGUucm90YXRpb24gPSBnLnJhbmRvbUludCgwLDM2MCk7ICBcbiAgICAgICAgICAgIGZ4LnJlc2V0KCk7XG4gICAgICAgICAgICByZXR1cm4gZngucGxheSh0aGlzLmF1ZGlvQ2xpcCx0aGlzLnNwcml0ZUZyYW1lKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICBpZih0aGlzLmR1cmF0aW9uID4gMCApXG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5zbGVlcCh0aGlzLmR1cmF0aW9uICogMTAwMCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/network/MessageBase.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'dde8btrP25FeqHeKW+G4Pfb', 'MessageBase');
// framework/network/MessageBase.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageBase = void 0;
var MessageType_1 = require("./MessageType");
var Message_1 = require("./Message");
var ConnectManager_1 = require("./ConnectManager");
var MessageBase = /** @class */ (function () {
    function MessageBase() {
        this.Cmd = {};
        this.Error = {};
        this._allFuncs = {};
        for (var i in game.Command) {
            var v = game.Command[i];
            this.Cmd[v] = i;
        }
        for (var i in game.ErrorCode) {
            var v = game.ErrorCode[i];
            this.Error[v] = i;
        }
    }
    MessageBase.prototype.useSocketKey = function (key) {
        this._socketKey = key;
    };
    MessageBase.prototype.addListener = function (cmd, func) {
        this._allFuncs[cmd] = func;
    };
    MessageBase.prototype.removeListener = function (cmd) {
        if (this._allFuncs[cmd] != null) {
            this._allFuncs[cmd] = null;
        }
    };
    MessageBase.prototype.onMessage = function (obj) {
        if (obj.type == MessageType_1.SocketTag.KSOCKET_MESSAGE) {
            var int8a = new Uint8Array(obj.msg);
            var buffer = new flatbuffers.ByteBuffer(int8a);
            var msg = game.Package.getRootAsPackage(buffer);
            if (this._allFuncs[msg.cmd()] != null) {
                return this._allFuncs[msg.cmd()].call(this, msg);
            }
            else
                return this.onHandler(msg);
        }
        else {
            this.onSocket(obj.type);
            return true;
        }
    };
    /**
     * 处理socket消息
     * @param type
     */
    MessageBase.prototype.onSocket = function (type) {
    };
    /**
     * 重写消息处理函数
     * return 消息处理结果，处理完成返回真，否则返回假(消息会入消息队列，等待下次处理)
     */
    MessageBase.prototype.onHandler = function (msg) {
        return false;
    };
    MessageBase.prototype.sendMessage = function (msg) {
        ConnectManager_1.connManager.sendMessage(msg, this._socketKey);
    };
    MessageBase.prototype.onDestory = function () {
        this._allFuncs = null;
    };
    MessageBase.prototype.send = function (cmd, cmdstr, procedure, build) {
        if (cmdstr === void 0) { cmdstr = ""; }
        if (procedure === void 0) { procedure = null; }
        if (build === void 0) { build = null; }
        console.log("Send Message : [" + this.Cmd[cmd] + "]");
        var socket = ConnectManager_1.connManager.getDefault();
        var msg = new Message_1.Message(cmd);
        var ds = game[cmdstr];
        if (ds != null) {
            if (build == null) {
                build = this.createBuilder();
            }
            var startFunc = ds["start" + cmdstr];
            var endFunc = ds["end" + cmdstr];
            startFunc.call(ds, build);
            if (procedure) {
                procedure(build);
                //game[cmd].addTaskId(build,task_id);
            }
            build.finish(endFunc.call(ds, build));
            msg.addBuilder(build);
        }
        else {
            msg.addString(cmdstr);
        }
        socket.sendMessage(msg);
    };
    MessageBase.prototype.createBuilder = function () {
        return new flatbuffers.Builder();
    };
    return MessageBase;
}());
exports.MessageBase = MessageBase;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxuZXR3b3JrXFxNZXNzYWdlQmFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDZDQUF1QztBQUN2QyxxQ0FBaUM7QUFDakMsbURBQStDO0FBQy9DO0lBT0M7UUFGQSxRQUFHLEdBQUksRUFBRSxDQUFBO1FBQ1QsVUFBSyxHQUFHLEVBQUUsQ0FBQTtRQUVULElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBRXBCLEtBQUssSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLE9BQU8sRUFDcEI7WUFDSSxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFBO1lBQ3ZCLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ3pCO1FBQ0QsS0FBSyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUN0QjtZQUNJLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUE7WUFDekIsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDM0I7SUFFRixDQUFDO0lBRU0sa0NBQVksR0FBbkIsVUFBb0IsR0FBVztRQUM5QixJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQztJQUN2QixDQUFDO0lBRU0saUNBQVcsR0FBbEIsVUFBbUIsR0FBUSxFQUFFLElBQWM7UUFDMUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDNUIsQ0FBQztJQUVNLG9DQUFjLEdBQXJCLFVBQXNCLEdBQVE7UUFDN0IsSUFBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksRUFBQztZQUM5QixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztTQUMzQjtJQUNGLENBQUM7SUFF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YSxHQUFiO1FBRUksT0FBTyxJQUFJLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNyQyxDQUFDO0lBRUwsa0JBQUM7QUFBRCxDQTdHQSxBQTZHQyxJQUFBO0FBN0dZLGtDQUFXIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtTb2NrZXRUYWd9IGZyb20gXCIuL01lc3NhZ2VUeXBlXCJcbmltcG9ydCB7TWVzc2FnZX0gZnJvbSBcIi4vTWVzc2FnZVwiXG5pbXBvcnQgeyBjb25uTWFuYWdlciB9IGZyb20gXCIuL0Nvbm5lY3RNYW5hZ2VyXCI7XG5leHBvcnQgY2xhc3MgTWVzc2FnZUJhc2Uge1xuXG5cdHByaXZhdGUgX3NvY2tldEtleTogc3RyaW5nO1xuXHRwcml2YXRlIF9hbGxGdW5jczoge1tjbWQ6IG51bWJlcl06IEZ1bmN0aW9ufTtcblxuXHRDbWQgID0ge31cblx0RXJyb3IgPSB7fVxuXHRwdWJsaWMgY29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5fYWxsRnVuY3MgPSB7fTtcblxuXHRcdGZvciAodmFyIGkgaW4gZ2FtZS5Db21tYW5kKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgdiA9IGdhbWUuQ29tbWFuZFtpXVxuICAgICAgICAgICAgdGhpcy5DbWRbdl0gPSBpO1xuXHRcdH1cblx0XHRmb3IgKHZhciBpIGluIGdhbWUuRXJyb3JDb2RlKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgdiA9IGdhbWUuRXJyb3JDb2RlW2ldXG4gICAgICAgICAgICB0aGlzLkVycm9yW3ZdID0gaTtcblx0XHR9XG5cdFx0XG5cdH1cblxuXHRwdWJsaWMgdXNlU29ja2V0S2V5KGtleTogc3RyaW5nKXtcblx0XHR0aGlzLl9zb2NrZXRLZXkgPSBrZXk7XG5cdH1cblxuXHRwdWJsaWMgYWRkTGlzdGVuZXIoY21kOiBhbnksIGZ1bmM6IEZ1bmN0aW9uKXtcblx0XHR0aGlzLl9hbGxGdW5jc1tjbWRdID0gZnVuYztcblx0fVxuXG5cdHB1YmxpYyByZW1vdmVMaXN0ZW5lcihjbWQ6IGFueSl7XG5cdFx0aWYodGhpcy5fYWxsRnVuY3NbY21kXSAhPSBudWxsKXtcblx0XHRcdHRoaXMuX2FsbEZ1bmNzW2NtZF0gPSBudWxsO1xuXHRcdH1cblx0fVxuXG5cdHB1YmxpYyBvbk1lc3NhZ2Uob2JqOiBhbnkpe1xuXHRcdGlmKG9iai50eXBlID09IFNvY2tldFRhZy5LU09DS0VUX01FU1NBR0Upe1xuXHRcdFx0bGV0IGludDhhID0gbmV3IFVpbnQ4QXJyYXkob2JqLm1zZyk7XG5cdFx0XHRsZXQgYnVmZmVyID0gbmV3IGZsYXRidWZmZXJzLkJ5dGVCdWZmZXIoaW50OGEpO1xuXHRcdFx0bGV0IG1zZzphbnkgPSBnYW1lLlBhY2thZ2UuZ2V0Um9vdEFzUGFja2FnZShidWZmZXIpO1xuXHRcdFx0aWYodGhpcy5fYWxsRnVuY3NbbXNnLmNtZCgpXSAhPSBudWxsKXtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX2FsbEZ1bmNzW21zZy5jbWQoKV0uY2FsbCh0aGlzLCBtc2cpO1xuXHRcdFx0fWVsc2UgcmV0dXJuIHRoaXMub25IYW5kbGVyKG1zZyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMub25Tb2NrZXQob2JqLnR5cGUpO1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIOWkhOeQhnNvY2tldOa2iOaBr1xuXHQgKiBAcGFyYW0gdHlwZSBcblx0ICovXG5cdHB1YmxpYyBvblNvY2tldCh0eXBlOiBTb2NrZXRUYWcpe1xuXG5cdH1cblx0XG5cdC8qKlxuXHQgKiDph43lhpnmtojmga/lpITnkIblh73mlbBcblx0ICogcmV0dXJuIOa2iOaBr+WkhOeQhue7k+aenO+8jOWkhOeQhuWujOaIkOi/lOWbnuecn++8jOWQpuWImei/lOWbnuWBhyjmtojmga/kvJrlhaXmtojmga/pmJ/liJfvvIznrYnlvoXkuIvmrKHlpITnkIYpXG5cdCAqL1xuXHRwdWJsaWMgb25IYW5kbGVyKG1zZzogZ2FtZS5QYWNrYWdlKXtcblx0XHRcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRwdWJsaWMgc2VuZE1lc3NhZ2UobXNnOiBNZXNzYWdlKXtcblx0XHRjb25uTWFuYWdlci5zZW5kTWVzc2FnZShtc2csIHRoaXMuX3NvY2tldEtleSk7XG5cdH1cblxuXHRwdWJsaWMgb25EZXN0b3J5KCl7XG5cdFx0dGhpcy5fYWxsRnVuY3MgPSBudWxsO1xuXHR9XG5cblx0c2VuZChjbWQsY21kc3RyPVwiXCIscHJvY2VkdXJlPW51bGwsYnVpbGQgPSBudWxsKVxuXHR7XG5cdFx0Y29uc29sZS5sb2coXCJTZW5kIE1lc3NhZ2UgOiBbXCIgKyB0aGlzLkNtZFtjbWRdICtcIl1cIilcbiAgICAgICAgbGV0IHNvY2tldCA9IGNvbm5NYW5hZ2VyLmdldERlZmF1bHQoKTtcblx0XHRsZXQgbXNnID0gbmV3IE1lc3NhZ2UoY21kKTtcblx0XHRsZXQgZHMgPSBnYW1lW2NtZHN0cl0gXG4gICAgICAgIGlmKGRzICE9IG51bGwpXG4gICAgICAgIHtcblx0XHRcdGlmKGJ1aWxkID09IG51bGwpXG5cdFx0XHR7XG5cdFx0XHRcdGJ1aWxkID0gdGhpcy5jcmVhdGVCdWlsZGVyKCk7XG5cdFx0XHR9XG4gICAgICAgICAgICBsZXQgc3RhcnRGdW5jID0gZHNbXCJzdGFydFwiICsgY21kc3RyXSBcblx0XHRcdGxldCBlbmRGdW5jID0gZHNbXCJlbmRcIiArIGNtZHN0cl0gXG5cdFx0XHRzdGFydEZ1bmMuY2FsbChkcywgYnVpbGQpO1xuICAgICAgICAgICAgaWYocHJvY2VkdXJlKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb2NlZHVyZShidWlsZClcbiAgICAgICAgICAgICAgICAvL2dhbWVbY21kXS5hZGRUYXNrSWQoYnVpbGQsdGFza19pZCk7XG4gICAgICAgICAgICB9XG5cdFx0XHRidWlsZC5maW5pc2goZW5kRnVuYy5jYWxsKGRzLGJ1aWxkKSlcblx0XHRcdG1zZy5hZGRCdWlsZGVyKGJ1aWxkKTtcblx0XHR9ZWxzZXtcblx0XHRcdG1zZy5hZGRTdHJpbmcoY21kc3RyKTtcblx0XHR9XG4gICAgICAgIHNvY2tldC5zZW5kTWVzc2FnZShtc2cpO1xuICAgIH1cblxuICAgIGNyZWF0ZUJ1aWxkZXIoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIG5ldyBmbGF0YnVmZmVycy5CdWlsZGVyKCk7XG4gICAgfVxuXHRcbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/gamesys/LocalTimeSystem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2f847KAJNJCwrvg4K3CKFUv', 'LocalTimeSystem');
// framework/plugin_boosts/gamesys/LocalTimeSystem.ts

Object.defineProperty(exports, "__esModule", { value: true });
var LocalTimeSystem = /** @class */ (function () {
    function LocalTimeSystem() {
    }
    LocalTimeSystem.init = function (utc_msec) {
        if (utc_msec == null || utc_msec == undefined)
            return;
        LocalTimeSystem.utc_sec = utc_msec;
        if (cc.sys.WECHAT_GAME == cc.sys.platform) {
            wx.onHide(this.onHidden);
            wx.onShow(this.onShown);
        }
        //g.setGlobalInstance(LocalTimeSystem);
    };
    LocalTimeSystem.startTimer = function () {
        this.timer = setInterval(function (_) {
            LocalTimeSystem.utc_sec += 1000;
        }, 1000);
    };
    LocalTimeSystem.stopTimer = function () {
        clearInterval(this.timer);
    };
    LocalTimeSystem.getSec = function () {
        return LocalTimeSystem.utc_sec || new Date().getTime() / 1000;
    };
    LocalTimeSystem.getDate = function () {
        if (LocalTimeSystem.utc_sec) {
            var date = new Date();
            date.setTime(LocalTimeSystem.utc_sec * 1000);
            return date;
        }
        return new Date();
    };
    LocalTimeSystem.onHidden = function () {
        console.log("game enter background");
        // this.stopTimer();
    };
    LocalTimeSystem.onShown = function () {
        console.log("game enter foreground");
        // this.startTimer();
    };
    return LocalTimeSystem;
}());
exports.default = LocalTimeSystem;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxnYW1lc3lzXFxMb2NhbFRpbWVTeXN0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0lBQUE7SUF1REEsQ0FBQztJQW5EVSxvQkFBSSxHQUFYLFVBQVksUUFBZTtRQUV2QixJQUFHLFFBQVEsSUFBSSxJQUFJLElBQUUsUUFBUSxJQUFJLFNBQVM7WUFBQyxPQUFPO1FBQ2xELGVBQWUsQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDO1FBQ25DLElBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLElBQUksRUFBRSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQ3hDO1lBQ0ksRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDekIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7U0FDMUI7UUFDRCx1Q0FBdUM7SUFDM0MsQ0FBQztJQUVNLDBCQUFVLEdBQWpCO1FBRUksSUFBSSxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUMsVUFBQSxDQUFDO1lBQ3RCLGVBQWUsQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDO1FBQ3BDLENBQUMsRUFBQyxJQUFJLENBQUMsQ0FBQztJQUNaLENBQUM7SUFFTSx5QkFBUyxHQUFoQjtRQUNJLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVNLHNCQUFNLEdBQWI7UUFFSSxPQUFPLGVBQWUsQ0FBQyxPQUFPLElBQUksSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsR0FBQyxJQUFJLENBQUM7SUFDaEUsQ0FBQztJQUVNLHVCQUFPLEdBQWQ7UUFFSSxJQUFHLGVBQWUsQ0FBQyxPQUFPLEVBQzFCO1lBQ0ksSUFBSSxJQUFJLEdBQUksSUFBSSxJQUFJLEVBQUUsQ0FBQTtZQUN0QixJQUFJLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxPQUFPLEdBQUMsSUFBSSxDQUFDLENBQUM7WUFDM0MsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUNELE9BQU8sSUFBSSxJQUFJLEVBQUUsQ0FBQztJQUV0QixDQUFDO0lBR00sd0JBQVEsR0FBZjtRQUVJLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsQ0FBQTtRQUNwQyxvQkFBb0I7SUFDeEIsQ0FBQztJQUNNLHVCQUFPLEdBQWQ7UUFFSSxPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLENBQUE7UUFDcEMscUJBQXFCO0lBQ3pCLENBQUM7SUFDTCxzQkFBQztBQUFELENBdkRBLEFBdURDLElBQUEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBMb2NhbFRpbWVTeXN0ZW1cbntcbiAgICBzdGF0aWMgdXRjX3NlYzpudW1iZXJcbiAgICBzdGF0aWMgdGltZXI6bnVtYmVyO1xuICAgIHN0YXRpYyBpbml0KHV0Y19tc2VjOm51bWJlcilcbiAgICB7XG4gICAgICAgIGlmKHV0Y19tc2VjID09IG51bGx8fHV0Y19tc2VjID09IHVuZGVmaW5lZClyZXR1cm47XG4gICAgICAgIExvY2FsVGltZVN5c3RlbS51dGNfc2VjID0gdXRjX21zZWM7XG4gICAgICAgIGlmKGNjLnN5cy5XRUNIQVRfR0FNRSA9PSBjYy5zeXMucGxhdGZvcm0pXG4gICAgICAgIHtcbiAgICAgICAgICAgIHd4Lm9uSGlkZSh0aGlzLm9uSGlkZGVuKTtcbiAgICAgICAgICAgIHd4Lm9uU2hvdyh0aGlzLm9uU2hvd24pXG4gICAgICAgIH1cbiAgICAgICAgLy9nLnNldEdsb2JhbEluc3RhbmNlKExvY2FsVGltZVN5c3RlbSk7XG4gICAgfVxuXG4gICAgc3RhdGljIHN0YXJ0VGltZXIoKVxuICAgIHtcbiAgICAgICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKF89PntcbiAgICAgICAgICAgIExvY2FsVGltZVN5c3RlbS51dGNfc2VjICs9IDEwMDA7XG4gICAgICAgIH0sMTAwMCk7XG4gICAgfVxuXG4gICAgc3RhdGljIHN0b3BUaW1lcigpe1xuICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXRTZWMoKTpudW1iZXJcbiAgICB7XG4gICAgICAgIHJldHVybiBMb2NhbFRpbWVTeXN0ZW0udXRjX3NlYyB8fCBuZXcgRGF0ZSgpLmdldFRpbWUoKS8xMDAwO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXREYXRlKClcbiAgICB7XG4gICAgICAgIGlmKExvY2FsVGltZVN5c3RlbS51dGNfc2VjKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgZGF0ZSA9ICBuZXcgRGF0ZSgpXG4gICAgICAgICAgICBkYXRlLnNldFRpbWUoTG9jYWxUaW1lU3lzdGVtLnV0Y19zZWMqMTAwMCk7XG4gICAgICAgICAgICByZXR1cm4gZGF0ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IERhdGUoKTtcbiAgICAgICAgXG4gICAgfVxuICBcbiAgICBzdGF0aWMgbGFzdExvY2FsVGltZTpudW1iZXI7XG4gICAgc3RhdGljIG9uSGlkZGVuKClcbiAgICB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiZ2FtZSBlbnRlciBiYWNrZ3JvdW5kXCIpXG4gICAgICAgIC8vIHRoaXMuc3RvcFRpbWVyKCk7XG4gICAgfVxuICAgIHN0YXRpYyBvblNob3duKClcbiAgICB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiZ2FtZSBlbnRlciBmb3JlZ3JvdW5kXCIpXG4gICAgICAgIC8vIHRoaXMuc3RhcnRUaW1lcigpO1xuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/gamesys/LocalLifeSystem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '550c0O4ualLIYQoOOiFtGsz', 'LocalLifeSystem');
// framework/plugin_boosts/gamesys/LocalLifeSystem.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.LifeSystem = exports.LocalLifeSystem = void 0;
var EventManager_1 = require("../utils/EventManager");
var Signal_1 = require("../misc/Signal");
var LocalLifeSystem = /** @class */ (function () {
    function LocalLifeSystem() {
        //生成一颗星需要的时间 
        this.sec_per_live = 60 * 5;
        //最多可得多少颗
        this.live_free_get = 5;
        this.max_freeLives_seconds = this.live_free_get * this.sec_per_live;
        this.livesSeconds = 0;
        this.isEnabledAutoRecovery = true;
        this.recoverySignal = new Signal_1.default();
    }
    LocalLifeSystem.prototype.init = function (liveSec, live_free) {
        if (liveSec === void 0) { liveSec = null; }
        if (live_free === void 0) { live_free = null; }
        this.sec_per_live = liveSec || this.sec_per_live;
        this.live_free_get = live_free || this.live_free_get;
        this.max_freeLives_seconds = this.sec_per_live * this.live_free_get;
        this.livesSeconds = 0;
        this.lastLifeSaveTime = Number(localStorage.getItem("sys_life_lastLifeSaveTime") || new Date().getTime());
        //g.setGlobalInstance(LifeSystem,"LocalLifeSystem");
        EventManager_1.event.on("onEnterForeground", this.onEnterForeground, this);
        this.onTimeRequested(new Date().getTime());
        console.log("体力系统初始化", this);
    };
    LocalLifeSystem.prototype.onEnterForeground = function () {
        this.onTimeRequested(new Date().getTime());
    };
    Object.defineProperty(LocalLifeSystem.prototype, "nextLifeTime", {
        get: function () {
            return (this.lives + 1) * this.sec_per_live - this.livesSeconds;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LocalLifeSystem.prototype, "lives", {
        get: function () {
            return Math.floor(this.livesSeconds / this.sec_per_live);
        },
        enumerable: false,
        configurable: true
    });
    LocalLifeSystem.prototype.save = function () {
        this.lastLifeSaveTime = new Date().getTime();
        localStorage.setItem("sys_life_lastLifeSaveTime", this.lastLifeSaveTime + "");
    };
    LocalLifeSystem.prototype.onTimeRequested = function (time) {
        if (this.lastLifeSaveTime) {
            var timeElapsed = Math.floor((time - this.lastLifeSaveTime) / 1000);
            this.livesSeconds = Math.min(this.max_freeLives_seconds, timeElapsed);
        }
    };
    LocalLifeSystem.prototype.startCheck = function (callback, target) {
        var _this = this;
        if (this.task_checkLives)
            return;
        var lastHeart = callback.call(target);
        this.task_checkLives = setInterval(function (_) {
            var heart = callback.call(target);
            if (lastHeart != heart && heart == _this.live_free_get - 1) {
                _this.livesSeconds = 0;
                _this.save();
            }
            if (heart < _this.live_free_get) {
                // this.checkForSpawnLives();
                _this.livesSeconds = _this.livesSeconds + 1;
                if (heart + _this.lives > heart) {
                    console.log("获得在线奖励一颗星", _this.lives);
                    _this.recoverySignal.fire(_this.lives);
                    _this.livesSeconds = 0;
                    _this.save();
                }
            }
            lastHeart = heart;
        }, 1000);
    };
    return LocalLifeSystem;
}());
exports.LocalLifeSystem = LocalLifeSystem;
exports.LifeSystem = new LocalLifeSystem();
// 

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxnYW1lc3lzXFxMb2NhbExpZmVTeXN0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxzREFBOEM7QUFDOUMseUNBQW9DO0FBR3BDO0lBQUE7UUFFQyxhQUFhO1FBQ2IsaUJBQVksR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFFO1FBQ3ZCLFNBQVM7UUFDVCxrQkFBYSxHQUFHLENBQUMsQ0FBQztRQUVsQiwwQkFBcUIsR0FBRyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7UUFNL0QsaUJBQVksR0FBVSxDQUFDLENBQUE7UUFHdkIsMEJBQXFCLEdBQUcsSUFBSSxDQUFDO1FBRXRCLG1CQUFjLEdBQUcsSUFBSSxnQkFBTSxFQUFFLENBQUM7SUF1RXRDLENBQUM7SUF0RUEsOEJBQUksR0FBSixVQUFLLE9BQWMsRUFBQyxTQUFnQjtRQUEvQix3QkFBQSxFQUFBLGNBQWM7UUFBQywwQkFBQSxFQUFBLGdCQUFnQjtRQUVuQyxJQUFJLENBQUMsWUFBWSxHQUFHLE9BQU8sSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFBO1FBQ2hELElBQUksQ0FBQyxhQUFhLEdBQUcsU0FBUyxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUE7UUFDcEQsSUFBSSxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUNwRSxJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQTtRQUNyQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsMkJBQTJCLENBQUMsSUFBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUE7UUFDeEcsb0RBQW9EO1FBRXBELG9CQUFLLENBQUMsRUFBRSxDQUFDLG1CQUFtQixFQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBQyxJ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LEVBQUUsQ0FBQztBQUM5QyxHQUFHIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExvY2FsVGltZVN5c3RlbSBmcm9tIFwiLi9Mb2NhbFRpbWVTeXN0ZW1cIjtcbmltcG9ydCB7IGV2ZW50IH0gZnJvbSBcIi4uL3V0aWxzL0V2ZW50TWFuYWdlclwiO1xuaW1wb3J0IFNpZ25hbCBmcm9tIFwiLi4vbWlzYy9TaWduYWxcIjtcbmltcG9ydCBQbGF0Zm9ybSBmcm9tIFwiLi4vLi4vUGxhdGZvcm1cIjtcblxuZXhwb3J0IGNsYXNzIExvY2FsTGlmZVN5c3RlbVxue1xuXHQvL+eUn+aIkOS4gOmil+aYn+mcgOimgeeahOaXtumXtCBcblx0c2VjX3Blcl9saXZlID0gNjAgKiA1IDtcblx0Ly/mnIDlpJrlj6/lvpflpJrlsJHpopdcblx0bGl2ZV9mcmVlX2dldCA9IDU7XG5cdFxuXHRtYXhfZnJlZUxpdmVzX3NlY29uZHMgPSB0aGlzLmxpdmVfZnJlZV9nZXQgKiB0aGlzLnNlY19wZXJfbGl2ZTtcblxuXHR0YXNrX3J1blNwYXduTGl2ZXM6bnVtYmVyO1xuXG5cdHRhc2tfY2hlY2tMaXZlczpudW1iZXI7XG5cblx0bGl2ZXNTZWNvbmRzOm51bWJlciA9IDBcblx0bGFzdExpZmVTYXZlVGltZTpudW1iZXI7XG5cblx0aXNFbmFibGVkQXV0b1JlY292ZXJ5ID0gdHJ1ZTtcblx0XG5cdHB1YmxpYyByZWNvdmVyeVNpZ25hbCA9IG5ldyBTaWduYWwoKTtcblx0aW5pdChsaXZlU2VjID0gbnVsbCxsaXZlX2ZyZWUgPSBudWxsKVxuXHR7XG5cdFx0dGhpcy5zZWNfcGVyX2xpdmUgPSBsaXZlU2VjIHx8IHRoaXMuc2VjX3Blcl9saXZlXG5cdFx0dGhpcy5saXZlX2ZyZWVfZ2V0ID0gbGl2ZV9mcmVlIHx8IHRoaXMubGl2ZV9mcmVlX2dldFxuXHRcdHRoaXMubWF4X2ZyZWVMaXZlc19zZWNvbmRzID0gdGhpcy5zZWNfcGVyX2xpdmUgKiB0aGlzLmxpdmVfZnJlZV9nZXQ7XG5cdFx0dGhpcy5saXZlc1NlY29uZHMgPSAwXG5cdFx0dGhpcy5sYXN0TGlmZVNhdmVUaW1lID0gTnVtYmVyKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwic3lzX2xpZmVfbGFzdExpZmVTYXZlVGltZVwiKXx8IG5ldyBEYXRlKCkuZ2V0VGltZSgpKVxuXHRcdC8vZy5zZXRHbG9iYWxJbnN0YW5jZShMaWZlU3lzdGVtLFwiTG9jYWxMaWZlU3lzdGVtXCIpO1xuXG5cdFx0ZXZlbnQub24oXCJvbkVudGVyRm9yZWdyb3VuZFwiLHRoaXMub25FbnRlckZvcmVncm91bmQsdGhpcylcblx0XHR0aGlzLm9uVGltZVJlcXVlc3RlZChuZXcgRGF0ZSgpLmdldFRpbWUoKSk7XG5cdFx0Y29uc29sZS5sb2coXCLkvZPlipvns7vnu5/liJ3lp4vljJZcIix0aGlzKTtcblx0fVxuXG5cdG9uRW50ZXJGb3JlZ3JvdW5kKClcblx0e1xuXHRcdHRoaXMub25UaW1lUmVxdWVzdGVkKG5ldyBEYXRlKCkuZ2V0VGltZSgpKTtcblx0fVxuXG5cdGdldCBuZXh0TGlmZVRpbWUoKVxuXHR7XG5cdFx0cmV0dXJuICh0aGlzLmxpdmVzICsgMSkgKiB0aGlzLnNlY19wZXJfbGl2ZSAtIHRoaXMubGl2ZXNTZWNvbmRzO1xuXHR9XG5cblx0Z2V0IGxpdmVzKClcblx0e1xuXHRcdHJldHVybiBNYXRoLmZsb29yKHRoaXMubGl2ZXNTZWNvbmRzIC8gdGhpcy5zZWNfcGVyX2xpdmUpXG5cdH1cblxuXHRzYXZlKClcblx0e1xuXHRcdHRoaXMubGFzdExpZmVTYXZlVGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuXHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwic3lzX2xpZmVfbGFzdExpZmVTYXZlVGltZVwiLHRoaXMubGFzdExpZmVTYXZlVGltZStcIlwiKVxuXHR9XG5cblx0b25UaW1lUmVxdWVzdGVkKHRpbWUpXG5cdHtcblx0XHRpZiAodGhpcy5sYXN0TGlmZVNhdmVUaW1lKVxuXHRcdHtcblx0XHRcdGxldCB0aW1lRWxhcHNlZCA9IE1hdGguZmxvb3IoKHRpbWUgLSB0aGlzLmxhc3RMaWZlU2F2ZVRpbWUpLzEwMDApXG5cdFx0XHR0aGlzLmxpdmVzU2Vjb25kcyA9IE1hdGgubWluKHRoaXMubWF4X2ZyZWVMaXZlc19zZWNvbmRzLCB0aW1lRWxhcHNlZClcblx0XHR9XG5cdH1cblxuXHRzdGFydENoZWNrKGNhbGxiYWNrLHRhcmdldClcblx0e1xuXHRcdGlmKHRoaXMudGFza19jaGVja0xpdmVzKSByZXR1cm47XG5cdFx0bGV0IGxhc3RIZWFydCA9IGNhbGxiYWNrLmNhbGwodGFyZ2V0KTtcblx0XHR0aGlzLnRhc2tfY2hlY2tMaXZlcyA9IHNldEludGVydmFsKF89Pntcblx0XHRcdGxldCBoZWFydCA9IGNhbGxiYWNrLmNhbGwodGFyZ2V0KTtcblx0XHRcdGlmKGxhc3RIZWFydCAhPSBoZWFydCAmJiBoZWFydCA9PSB0aGlzLmxpdmVfZnJlZV9nZXQgLSAxKVxuXHRcdFx0e1xuXHRcdFx0XHR0aGlzLmxpdmVzU2Vjb25kcyA9IDA7XG5cdFx0XHRcdHRoaXMuc2F2ZSgpO1xuXHRcdFx0fSBcblx0XHRcdGlmIChoZWFydCA8IHRoaXMubGl2ZV9mcmVlX2dldCkgeyBcblx0XHRcdFx0Ly8gdGhpcy5jaGVja0ZvclNwYXduTGl2ZXMoKTtcblx0XHRcdFx0dGhpcy5saXZlc1NlY29uZHMgPSB0aGlzLmxpdmVzU2Vjb25kcyArIDE7XG5cdFx0XHRcdGlmICggaGVhcnQgKyB0aGlzLmxpdmVzID4gaGVhcnQpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIuiOt+W+l+WcqOe6v+WlluWKseS4gOmil+aYn1wiLHRoaXMubGl2ZXMpXG5cdFx0XHRcdFx0dGhpcy5yZWNvdmVyeVNpZ25hbC5maXJlKHRoaXMubGl2ZXMpO1xuXHRcdFx0XHRcdHRoaXMubGl2ZXNTZWNvbmRzID0gMDtcblx0XHRcdFx0XHR0aGlzLnNhdmUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0bGFzdEhlYXJ0ID0gaGVhcnQ7XG5cdFx0fSwxMDAwKVxuXHR9XG5cbn1cblxuZXhwb3J0IHZhciBMaWZlU3lzdGVtID0gbmV3IExvY2FsTGlmZVN5c3RlbSgpO1xuLy8gXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/misc/FrameSwitch.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '92ea6+rkJ5BQ7Twyd4FI92I', 'FrameSwitch');
// framework/plugin_boosts/misc/FrameSwitch.ts

Object.defineProperty(exports, "__esModule", { value: true });
// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, requireComponent = _a.requireComponent;
var FrameSwitcher = /** @class */ (function (_super) {
    __extends(FrameSwitcher, _super);
    function FrameSwitcher() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.frames = [];
        // LIFE-CYCLE CALLBACKS:
        _this.target = null;
        _this._index = 0;
        _this.randomOnLoad = false;
        return _this;
        // update (dt) {}
    }
    FrameSwitcher.prototype.onLoad = function () {
        if (this.target == null)
            this.target = this.getComponent(cc.Sprite);
        if (this.randomOnLoad)
            this.switchRandom();
    };
    FrameSwitcher.prototype.switchRandom = function () {
        //this.index = g.randomInt(0,this.frames.length);
    };
    Object.defineProperty(FrameSwitcher.prototype, "index", {
        get: function () {
            return this._index;
        },
        set: function (k) {
            this.switch(k);
        },
        enumerable: false,
        configurable: true
    });
    FrameSwitcher.prototype.switch = function (index) {
        var len = this.frames.length;
        var idx = Math.min(Math.max(0, index), len - 1);
        this.target.spriteFrame = this.frames[idx];
        this._index = idx;
    };
    FrameSwitcher.prototype.start = function () {
    };
    __decorate([
        property([cc.SpriteFrame])
    ], FrameSwitcher.prototype, "frames", void 0);
    __decorate([
        property(cc.Sprite)
    ], FrameSwitcher.prototype, "target", void 0);
    __decorate([
        property
    ], FrameSwitcher.prototype, "randomOnLoad", void 0);
    FrameSwitcher = __decorate([
        ccclass
    ], FrameSwitcher);
    return FrameSwitcher;
}(cc.Component));
exports.default = FrameSwitcher;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxtaXNjXFxGcmFtZVN3aXRjaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFFN0YsSUFBQSxLQUF1QyxFQUFFLENBQUMsVUFBVSxFQUFuRCxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQUEsRUFBQyxnQkFBZ0Isc0JBQWlCLENBQUM7QUFHM0Q7SUFBMkMsaUNBQVk7SUFBdkQ7UUFBQSxxRUFpREM7UUE5Q0csWUFBTSxHQUFvQixFQUFFLENBQUE7UUFDNUIsd0JBQXdCO1FBRXhCLFlBQU0sR0FBYSxJQUFJLENBQUM7UUFFeEIsWUFBTSxHQUFXLENBQUMsQ0FBQTtRQUdsQixrQkFBWSxHQUFXLEtBQUssQ0FBQzs7UUFxQzdCLGlCQUFpQjtJQUNyQixDQUFDO0lBcENHLDhCQUFNLEdBQU47UUFFSSxJQUFHLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSTtZQUNsQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQy9DLElBQUcsSUFBSSxDQUFDLFlBQVk7WUFDaEIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFBO0lBQzNCLENBQUM7SUFFRCxvQ0FBWSxHQUFaO1FBRUksaURBQWlEO0lBQ3JELENBQUM7SUFFRCxzQkFBSSxnQ0FBSzthQUtUO1lBRUksT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFBO1FBQ3RCLENBQUM7YUFSRCxVQUFVLENBQUM7WUFFUCxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ25CLENBQUM7OztPQUFBO0lBT0QsOEJBQU0sR0FBTixVQUFPLEtBQUs7UUFFUixJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUM3QixJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFDLEtBQUssQ0FBQyxFQUFDLEdBQUcsR0FBQyxDQUFDLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBQzFDLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO0lBQ3RCLENBQUM7SUFFRCw2QkFBSyxHQUFMO0lBRUEsQ0FBQztJQTNDRDtRQURDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQztpREFDQztJQUc1QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO2lEQUNJO0lBS3hCO1FBREMsUUFBUTt1REFDb0I7SUFYWixhQUFhO1FBRGpDLE9BQU87T0FDYSxhQUFhLENBaURqQztJQUFELG9CQUFDO0NBakRELEFBaURDLENBakQwQyxFQUFFLENBQUMsU0FBUyxHQWlEdEQ7a0JBakRvQixhQUFhIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVjJDaGFuZ2VBY3Rpb24gfSBmcm9tIFwiLi9Cb29zdHNBY3Rpb25cIjtcblxuLy8gTGVhcm4gVHlwZVNjcmlwdDpcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcbi8vIExlYXJuIEF0dHJpYnV0ZTpcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5LHJlcXVpcmVDb21wb25lbnR9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZyYW1lU3dpdGNoZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgQHByb3BlcnR5KFtjYy5TcHJpdGVGcmFtZV0pXG4gICAgZnJhbWVzOmNjLlNwcml0ZUZyYW1lW10gPSBbXVxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxuICAgIEBwcm9wZXJ0eShjYy5TcHJpdGUpXG4gICAgdGFyZ2V0OmNjLlNwcml0ZSA9IG51bGw7XG5cbiAgICBfaW5kZXggOm51bWJlciA9IDBcblxuICAgIEBwcm9wZXJ0eVxuICAgIHJhbmRvbU9uTG9hZDpib29sZWFuID0gZmFsc2U7XG5cbiAgICBvbkxvYWQoKVxuICAgIHtcbiAgICAgICAgaWYodGhpcy50YXJnZXQgPT0gbnVsbClcbiAgICAgICAgICAgIHRoaXMudGFyZ2V0ID0gdGhpcy5nZXRDb21wb25lbnQoY2MuU3ByaXRlKTtcbiAgICAgICAgaWYodGhpcy5yYW5kb21PbkxvYWQpXG4gICAgICAgICAgICB0aGlzLnN3aXRjaFJhbmRvbSgpXG4gICAgfVxuXG4gICAgc3dpdGNoUmFuZG9tKClcbiAgICB7XG4gICAgICAgIC8vdGhpcy5pbmRleCA9IGcucmFuZG9tSW50KDAsdGhpcy5mcmFtZXMubGVuZ3RoKTtcbiAgICB9XG5cbiAgICBzZXQgaW5kZXgoaylcbiAgICB7XG4gICAgICAgIHRoaXMuc3dpdGNoKGspO1xuICAgIH1cblxuICAgIGdldCBpbmRleCgpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5faW5kZXhcbiAgICB9XG4gICAgXG4gICAgc3dpdGNoKGluZGV4KVxuICAgIHtcbiAgICAgICAgbGV0IGxlbiA9IHRoaXMuZnJhbWVzLmxlbmd0aDtcbiAgICAgICAgbGV0IGlkeCA9IE1hdGgubWluKE1hdGgubWF4KDAsaW5kZXgpLGxlbi0xKTtcbiAgICAgICAgdGhpcy50YXJnZXQuc3ByaXRlRnJhbWUgPSB0aGlzLmZyYW1lc1tpZHhdXG4gICAgICAgIHRoaXMuX2luZGV4ID0gaWR4O1xuICAgIH1cblxuICAgIHN0YXJ0ICgpIHtcblxuICAgIH1cblxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/misc/Net.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9e139lB+RRCNpxXRSqgoURG', 'Net');
// framework/plugin_boosts/misc/Net.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Net = /** @class */ (function () {
    function Net() {
    }
    Net.httpGet = function (url, callback) {
        var xhr = cc.loader.getXMLHttpRequest();
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && (xhr.status >= 200 && xhr.status < 300)) {
                var respone = xhr.responseText;
                callback(respone);
            }
        };
        xhr.open("GET", url, true);
        if (cc.sys.isNative) {
            xhr.setRequestHeader("Accept-Encoding", "gzip,deflate");
        }
        // note: In Internet Explorer, the timeout property may be set only after calling the open()
        // method and before calling the send() method.
        xhr.timeout = 5000; // 5 seconds for timeout
        xhr.send();
    };
    Net.httpPost = function (url, params, callback) {
        var xhr = cc.loader.getXMLHttpRequest();
        xhr.onreadystatechange = function () {
            // console.log('xhr.readyState='+xhr.readyState+'  xhr.status='+xhr.status);
            if (xhr.readyState === 4 && (xhr.status >= 200 && xhr.status < 300)) {
                var respone = xhr.responseText;
                callback(respone);
            }
            else {
                callback(-1);
            }
        };
        xhr.open("POST", url, true);
        if (cc.sys.isNative) {
            xhr.setRequestHeader("Accept-Encoding", "gzip,deflate");
        }
        // note: In Internet Explorer, the timeout property may be set only after calling the open()
        // method and before calling the send() method.
        xhr.timeout = 5000; // 5 seconds for timeout
        xhr.send(params);
    };
    return Net;
}());
exports.default = Net;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxtaXNjXFxOZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0lBQUE7SUE4Q0EsQ0FBQztJQTNDVSxXQUFPLEdBQWQsVUFBZSxHQUFHLEVBQUUsUUFBUTtRQUN4QixJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFDeEMsR0FBRyxDQUFDLGtCQUFrQixHQUFHO1lBQ3JCLElBQUksR0FBRyxDQUFDLFVBQVUsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxFQUFFO2dCQUNqRSxJQUFJLE9BQU8sR0FBRyxHQUFHLENBQUMsWUFBWSxDQUFDO2dCQUMvQixRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDckI7UUFDTCxDQUFDLENBQUM7UUFDRixHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDM0IsSUFBSSxFQUFFLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRTtZQUNqQixHQUFHLENBQUMsZ0JBQWdCLENBQUMsaUJBQWlCLEVBQUUsY0FBYyxDQUFDLENBQUM7U0FDM0Q7UUFFRCw0RkFBNEY7UUFDNUYsK0NBQStDO1FBQy9DLEdBQUcsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLENBQUEsd0JBQXdCO1FBRTNDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNmLENBQUM7SUFFTSxZQUFRLEdBQWYsVUFBZ0IsR0FBRyxFQUFFLE1BQU0sRUFBRSxRQUFRO1FBQ2pDLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUN4QyxHQUFHLENBQUMsa0JBQWtCLEdBQUc7WUFDckIsNEVBQTRFO1lBQzVFLElBQUksR0FBRyxDQUFDLFVBQVUsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxFQUFFO2dCQUNqRSxJQUFJLE9BQU8sR0FBRyxHQUFHLENBQUMsWUFBWSxDQUFDO2dCQUMvQixRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDckI7aUJBQUk7Z0JBQ0MsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDbEI7UUFDTCxDQUFDLENBQUM7UUFDRixHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDNUIsSUFBSSxFQUFFLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRTtZQUNqQixHQUFHLENBQUMsZ0JBQWdCLENBQUMsaUJBQWlCLEVBQUUsY0FBYyxDQUFDLENBQUM7U0FDM0Q7UUFFRCw0RkFBNEY7UUFDNUYsK0NBQStDO1FBQy9DLEdBQUcsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLENBQUEsd0JBQXdCO1FBRTNDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckIsQ0FBQztJQUVMLFVBQUM7QUFBRCxDQTlDQSxBQThDQyxJQUFBIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV0e1xuIFxuIFxuICAgIHN0YXRpYyBodHRwR2V0KHVybCwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIHhociA9IGNjLmxvYWRlci5nZXRYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHhoci5yZWFkeVN0YXRlID09PSA0ICYmICh4aHIuc3RhdHVzID49IDIwMCAmJiB4aHIuc3RhdHVzIDwgMzAwKSkge1xuICAgICAgICAgICAgICAgIHZhciByZXNwb25lID0geGhyLnJlc3BvbnNlVGV4dDtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhyZXNwb25lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgeGhyLm9wZW4oXCJHRVRcIiwgdXJsLCB0cnVlKTtcbiAgICAgICAgaWYgKGNjLnN5cy5pc05hdGl2ZSkge1xuICAgICAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoXCJBY2NlcHQtRW5jb2RpbmdcIiwgXCJnemlwLGRlZmxhdGVcIik7XG4gICAgICAgIH1cbiBcbiAgICAgICAgLy8gbm90ZTogSW4gSW50ZXJuZXQgRXhwbG9yZXIsIHRoZSB0aW1lb3V0IHByb3BlcnR5IG1heSBiZSBzZXQgb25seSBhZnRlciBjYWxsaW5nIHRoZSBvcGVuKClcbiAgICAgICAgLy8gbWV0aG9kIGFuZCBiZWZvcmUgY2FsbGluZyB0aGUgc2VuZCgpIG1ldGhvZC5cbiAgICAgICAgeGhyLnRpbWVvdXQgPSA1MDAwOy8vIDUgc2Vjb25kcyBmb3IgdGltZW91dFxuIFxuICAgICAgICB4aHIuc2VuZCgpO1xuICAgIH1cbiBcbiAgICBzdGF0aWMgaHR0cFBvc3QodXJsLCBwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciB4aHIgPSBjYy5sb2FkZXIuZ2V0WE1MSHR0cFJlcXVlc3QoKTtcbiAgICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCd4aHIucmVhZHlTdGF0ZT0nK3hoci5yZWFkeVN0YXRlKycgIHhoci5zdGF0dXM9Jyt4aHIuc3RhdHVzKTtcbiAgICAgICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gNCAmJiAoeGhyLnN0YXR1cyA+PSAyMDAgJiYgeGhyLnN0YXR1cyA8IDMwMCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzcG9uZSA9IHhoci5yZXNwb25zZVRleHQ7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2socmVzcG9uZSk7XG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKC0xKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgeGhyLm9wZW4oXCJQT1NUXCIsIHVybCwgdHJ1ZSk7XG4gICAgICAgIGlmIChjYy5zeXMuaXNOYXRpdmUpIHtcbiAgICAgICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKFwiQWNjZXB0LUVuY29kaW5nXCIsIFwiZ3ppcCxkZWZsYXRlXCIpO1xuICAgICAgICB9XG4gXG4gICAgICAgIC8vIG5vdGU6IEluIEludGVybmV0IEV4cGxvcmVyLCB0aGUgdGltZW91dCBwcm9wZXJ0eSBtYXkgYmUgc2V0IG9ubHkgYWZ0ZXIgY2FsbGluZyB0aGUgb3BlbigpXG4gICAgICAgIC8vIG1ldGhvZCBhbmQgYmVmb3JlIGNhbGxpbmcgdGhlIHNlbmQoKSBtZXRob2QuXG4gICAgICAgIHhoci50aW1lb3V0ID0gNTAwMDsvLyA1IHNlY29uZHMgZm9yIHRpbWVvdXRcbiBcbiAgICAgICAgeGhyLnNlbmQocGFyYW1zKTtcbiAgICB9XG5cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/misc/ClickAudioManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '679c3x/ZwhD8KnIy6p5lX5y', 'ClickAudioManager');
// framework/plugin_boosts/misc/ClickAudioManager.ts

Object.defineProperty(exports, "__esModule", { value: true });
var ClickAudio_1 = require("./ClickAudio");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ClickAudioManager = /** @class */ (function (_super) {
    __extends(ClickAudioManager, _super);
    function ClickAudioManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.audio = null;
        _this.elastic = false;
        return _this;
        // update (dt) {}
    }
    ClickAudioManager.prototype.onLoad = function () {
        //window.g = require('g');
        //g.foreachNode(this.node,this.each,this)
    };
    ClickAudioManager.prototype.each = function (item) {
        //if button 
        if (!item.getComponent(cc.Button))
            return;
        var comp = item.getComponent(ClickAudio_1.default);
        if (comp == null) {
            comp = item.addComponent(ClickAudio_1.default);
            comp.elastic = this.elastic;
            comp.audio = this.audio;
        }
    };
    ClickAudioManager.prototype.start = function () {
    };
    __decorate([
        property({ type: cc.AudioClip })
    ], ClickAudioManager.prototype, "audio", void 0);
    __decorate([
        property
    ], ClickAudioManager.prototype, "elastic", void 0);
    ClickAudioManager = __decorate([
        ccclass
    ], ClickAudioManager);
    return ClickAudioManager;
}(cc.Component));
exports.default = ClickAudioManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxtaXNjXFxDbGlja0F1ZGlvTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsMkNBQXNDO0FBQ2hDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQStDLHFDQUFZO0lBQTNEO1FBQUEscUVBOEJDO1FBM0JHLFdBQUssR0FBaUIsSUFBSSxDQUFDO1FBRzNCLGFBQU8sR0FBVyxLQUFLLENBQUM7O1FBdUJ4QixpQkFBaUI7SUFDckIsQ0FBQztJQXRCRyxrQ0FBTSxHQUFOO1FBQ0ksMEJBQTBCO1FBQzFCLHlDQUF5QztJQUM3QyxDQUFDO0lBRUQsZ0NBQUksR0FBSixVQUFLLElBQVk7UUFFYixZQUFZO1FBQ1osSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztZQUFFLE9BQU87UUFDMUMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxvQkFBVSxDQUFDLENBQUE7UUFDeEMsSUFBRyxJQUFJLElBQUksSUFBSSxFQUNmO1lBQ0ksSUFBSSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsb0JBQVUsQ0FBQyxDQUFDO1lBQ3JDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQTtZQUMzQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7U0FDM0I7SUFDTCxDQUFDO0lBQ0QsaUNBQUssR0FBTDtJQUVBLENBQUM7SUF4QkQ7UUFEQyxRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBQyxDQUFDO29EQUNKO0lBRzNCO1FBREMsUUFBUTtzREFDZTtJQU5QLGlCQUFpQjtRQURyQyxPQUFPO09BQ2EsaUJBQWlCLENBOEJyQztJQUFELHdCQUFDO0NBOUJELEFBOEJDLENBOUI4QyxFQUFFLENBQUMsU0FBUyxHQThCMUQ7a0JBOUJvQixpQkFBaUIiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2xpY2tBdWRpbyBmcm9tIFwiLi9DbGlja0F1ZGlvXCI7XG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENsaWNrQXVkaW9NYW5hZ2VyIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblxuICAgIEBwcm9wZXJ0eSh7dHlwZTogY2MuQXVkaW9DbGlwfSlcbiAgICBhdWRpbyA6Y2MuQXVkaW9DbGlwID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eVxuICAgIGVsYXN0aWM6Ym9vbGVhbiA9IGZhbHNlO1xuXG4gICAgb25Mb2FkICgpIHtcbiAgICAgICAgLy93aW5kb3cuZyA9IHJlcXVpcmUoJ2cnKTtcbiAgICAgICAgLy9nLmZvcmVhY2hOb2RlKHRoaXMubm9kZSx0aGlzLmVhY2gsdGhpcylcbiAgICB9XG4gICAgXG4gICAgZWFjaChpdGVtOmNjLk5vZGUpXG4gICAge1xuICAgICAgICAvL2lmIGJ1dHRvbiBcbiAgICAgICAgaWYgKCFpdGVtLmdldENvbXBvbmVudChjYy5CdXR0b24pKSByZXR1cm47XG4gICAgICAgIGxldCBjb21wID0gaXRlbS5nZXRDb21wb25lbnQoQ2xpY2tBdWRpbylcbiAgICAgICAgaWYoY29tcCA9PSBudWxsKVxuICAgICAgICB7XG4gICAgICAgICAgICBjb21wID0gaXRlbS5hZGRDb21wb25lbnQoQ2xpY2tBdWRpbyk7XG4gICAgICAgICAgICBjb21wLmVsYXN0aWMgPSB0aGlzLmVsYXN0aWNcbiAgICAgICAgICAgIGNvbXAuYXVkaW8gPSB0aGlzLmF1ZGlvO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXJ0ICgpIHtcblxuICAgIH1cblxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/misc/JoyStick.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '297d6dgG6ZIJJ+ZjeNWq2ub', 'JoyStick');
// framework/plugin_boosts/misc/JoyStick.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var JoyStick = /** @class */ (function (_super) {
    __extends(JoyStick, _super);
    function JoyStick() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.outterCircle = null;
        _this.innerCircle = null;
        _this.radius = 250;
        _this.innerCircleRadius = 20;
        // 超出是否relase 
        _this.releaseAfterOver = false;
        // dynamic Joystick
        _this.dynamicJoystick = false;
        _this.autoRadius = false;
        _this.isReleased = false;
        _this._startPos = cc.Vec2.ZERO;
        return _this;
    }
    JoyStick.prototype.onLoad = function () {
        if (this.autoRadius) {
            this.radius = this.outterCircle.getBoundingBox().height / 2;
        }
        this.innerCircle.setPosition(0, 0);
        this.node.active = false;
    };
    JoyStick.prototype.start = function () {
        this.releaseStick();
    };
    JoyStick.prototype.releaseStick = function () {
        var move = cc.moveTo(0.5, cc.Vec2.ZERO);
        var action = move.easing(cc.easeExponentialOut());
        this.innerCircle.runAction(action);
        this.isReleased = true;
        if (this.dynamicJoystick) {
            this.scheduleOnce(this.delayClose, 1);
        }
    };
    JoyStick.prototype.delayClose = function () {
        this.node.active = false;
    };
    Object.defineProperty(JoyStick.prototype, "axis", {
        get: function () {
            if (this.isReleased)
                return cc.Vec2.ZERO;
            var vec = this.innerCircle.getPosition();
            vec.normalizeSelf();
            return vec;
        },
        enumerable: false,
        configurable: true
    });
    JoyStick.prototype.move = function (pos) {
        var mag = pos.mag();
        if (mag > this.radius) {
            if (this.releaseAfterOver)
                this.releaseStick();
            pos.normalizeSelf();
            pos.mulSelf(this.radius);
        }
        this.innerCircle.setPosition(pos);
    };
    // p : screen position
    JoyStick.prototype.touchStart = function (p) {
        if (!this.enabled)
            return;
        this.isReleased = false;
        this._startPos = p;
        this.unschedule(this.delayClose);
        this.node.active = true;
        if (this.dynamicJoystick) {
            // converto screen position
            var pos = this.node.getParent().convertToNodeSpaceAR(p);
            this.node.setPosition(pos);
            // this.node.opacity = 0;
            // this.node.runAction(cc.fadeIn(0.5));
        }
        this.move(cc.Vec2.ZERO);
    };
    JoyStick.prototype.touchMove = function (p) {
        if (!this.enabled)
            return;
        var vec = p.sub(this._startPos);
        this.move(vec);
    };
    JoyStick.prototype.touchEnd = function (p) {
        if (!this.enabled)
            return;
        // this.move(p);
        this.releaseStick();
    };
    __decorate([
        property(cc.Node)
    ], JoyStick.prototype, "outterCircle", void 0);
    __decorate([
        property(cc.Node)
    ], JoyStick.prototype, "innerCircle", void 0);
    __decorate([
        property
    ], JoyStick.prototype, "radius", void 0);
    __decorate([
        property
    ], JoyStick.prototype, "innerCircleRadius", void 0);
    __decorate([
        property
    ], JoyStick.prototype, "releaseAfterOver", void 0);
    __decorate([
        property
    ], JoyStick.prototype, "dynamicJoystick", void 0);
    __decorate([
        property
    ], JoyStick.prototype, "autoRadius", void 0);
    JoyStick = __decorate([
        ccclass
    ], JoyStick);
    return JoyStick;
}(cc.Component));
exports.default = JoyStick;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxtaXNjXFxKb3lTdGljay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBc0MsNEJBQVk7SUFBbEQ7UUFBQSxxRUFtSEM7UUFoSEcsa0JBQVksR0FBVyxJQUFJLENBQUM7UUFHNUIsaUJBQVcsR0FBVyxJQUFJLENBQUM7UUFHM0IsWUFBTSxHQUFVLEdBQUcsQ0FBQztRQUdwQix1QkFBaUIsR0FBVyxFQUFFLENBQUM7UUFFL0IsY0FBYztRQUVkLHNCQUFnQixHQUFXLEtBQUssQ0FBQztRQUVqQyxtQkFBbUI7UUFFbkIscUJBQWUsR0FBVyxLQUFLLENBQUM7UUFHaEMsZ0JBQVUsR0FBVyxLQUFLLENBQUM7UUFFM0IsZ0JBQVUsR0FBRyxLQUFLLENBQUM7UUF3RG5CLGVBQVMsR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQzs7SUFrQ3JDLENBQUM7SUF6RkcseUJBQU0sR0FBTjtRQUVJLElBQUcsSUFBSSxDQUFDLFVBQVUsRUFDbEI7WUFDSSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxFQUFFLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQztTQUM3RDtRQUNELElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDN0IsQ0FBQztJQUVELHdCQUFLLEdBQUw7UUFFSSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVELCtCQUFZLEdBQVo7UUFFSSxJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRyxFQUFF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USxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7aURBQ1M7SUFHM0I7UUFEQyxRQUFROzRDQUNXO0lBR3BCO1FBREMsUUFBUTt1REFDc0I7SUFJL0I7UUFEQyxRQUFRO3NEQUN3QjtJQUlqQztRQURDLFFBQVE7cURBQ3VCO0lBR2hDO1FBREMsUUFBUTtnREFDa0I7SUF2QlYsUUFBUTtRQUQ1QixPQUFPO09BQ2EsUUFBUSxDQW1INUI7SUFBRCxlQUFDO0NBbkhELEFBbUhDLENBbkhxQyxFQUFFLENBQUMsU0FBUyxHQW1IakQ7a0JBbkhvQixRQUFRIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBKb3lTdGljayBleHRlbmRzIGNjLkNvbXBvbmVudFxue1xuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxuICAgIG91dHRlckNpcmNsZTpjYy5Ob2RlID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxuICAgIGlubmVyQ2lyY2xlOmNjLk5vZGUgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5XG4gICAgcmFkaXVzOm51bWJlciA9IDI1MDtcblxuICAgIEBwcm9wZXJ0eVxuICAgIGlubmVyQ2lyY2xlUmFkaXVzOm51bWJlciA9ICAyMDtcblxuICAgIC8vIOi2heWHuuaYr+WQpnJlbGFzZSBcbiAgICBAcHJvcGVydHlcbiAgICByZWxlYXNlQWZ0ZXJPdmVyOmJvb2xlYW4gPSBmYWxzZTtcblxuICAgIC8vIGR5bmFtaWMgSm95c3RpY2tcbiAgICBAcHJvcGVydHlcbiAgICBkeW5hbWljSm95c3RpY2s6Ym9vbGVhbiA9IGZhbHNlO1xuXG4gICAgQHByb3BlcnR5XG4gICAgYXV0b1JhZGl1czpib29sZWFuID0gZmFsc2U7XG5cbiAgICBpc1JlbGVhc2VkID0gZmFsc2U7XG4gICAgb25Mb2FkKClcbiAgICB7XG4gICAgICAgIGlmKHRoaXMuYXV0b1JhZGl1cylcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5yYWRpdXMgPSB0aGlzLm91dHRlckNpcmNsZS5nZXRCb3VuZGluZ0JveCgpLmhlaWdodC8yO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaW5uZXJDaXJjbGUuc2V0UG9zaXRpb24oMCwwKTtcbiAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIHN0YXJ0KClcbiAgICB7XG4gICAgICAgIHRoaXMucmVsZWFzZVN0aWNrKCk7XG4gICAgfVxuICAgIFxuICAgIHJlbGVhc2VTdGljaygpXG4gICAge1xuICAgICAgICBsZXQgbW92ZSA9IGNjLm1vdmVUbygwLjUgLCBjYy5WZWMyLlpFUk8pO1xuICAgICAgICBsZXQgYWN0aW9uID0gbW92ZS5lYXNpbmcoY2MuZWFzZUV4cG9uZW50aWFsT3V0KCkpO1xuICAgICAgICB0aGlzLmlubmVyQ2lyY2xlLnJ1bkFjdGlvbihhY3Rpb24pO1xuICAgICAgICB0aGlzLmlzUmVsZWFzZWQgPSB0cnVlO1xuICAgICAgICBcbiAgICAgICAgaWYodGhpcy5keW5hbWljSm95c3RpY2spXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKCB0aGlzLmRlbGF5Q2xvc2UsIDEpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkZWxheUNsb3NlKClcbiAgICB7XG4gICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBnZXQgYXhpcygpXG4gICAge1xuICAgICAgICBpZih0aGlzLmlzUmVsZWFzZWQpIHJldHVybiBjYy5WZWMyLlpFUk87XG4gICAgICAgIGxldCB2ZWMgPSB0aGlzLmlubmVyQ2lyY2xlLmdldFBvc2l0aW9uKCk7XG4gICAgICAgIHZlYy5ub3JtYWxpemVTZWxmKClcbiAgICAgICAgcmV0dXJuIHZlYztcbiAgICB9XG5cbiAgICBtb3ZlKHBvczpjYy5WZWMyKVxuICAgIHtcbiAgICAgICAgbGV0IG1hZyA9IHBvcy5tYWcoKTtcbiAgICAgICAgaWYobWFnID4gdGhpcy5yYWRpdXMpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKHRoaXMucmVsZWFzZUFmdGVyT3ZlcilcbiAgICAgICAgICAgICAgICB0aGlzLnJlbGVhc2VTdGljaygpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBwb3Mubm9ybWFsaXplU2VsZigpO1xuICAgICAgICAgICAgcG9zLm11bFNlbGYodGhpcy5yYWRpdXMpXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbm5lckNpcmNsZS5zZXRQb3NpdGlvbihwb3MpO1xuICAgIH1cblxuICAgIF9zdGFydFBvczpjYy5WZWMyID0gY2MuVmVjMi5aRVJPO1xuXG4gICAgLy8gcCA6IHNjcmVlbiBwb3NpdGlvblxuICAgIHRvdWNoU3RhcnQocClcbiAgICB7XG4gICAgICAgIGlmKCF0aGlzLmVuYWJsZWQpIHJldHVybjtcbiAgICAgICAgdGhpcy5pc1JlbGVhc2VkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX3N0YXJ0UG9zID0gcDtcbiAgICAgICAgdGhpcy51bnNjaGVkdWxlKHRoaXMuZGVsYXlDbG9zZSk7XG4gICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSB0cnVlO1xuICAgICAgICBpZih0aGlzLmR5bmFtaWNKb3lzdGljaylcbiAgICAgICAge1xuICAgICAgICAgICAgLy8gY29udmVydG8gc2NyZWVuIHBvc2l0aW9uXG4gICAgICAgICAgICBsZXQgcG9zID0gdGhpcy5ub2RlLmdldFBhcmVudCgpLmNvbnZlcnRUb05vZGVTcGFjZUFSKHApO1xuICAgICAgICAgICAgdGhpcy5ub2RlLnNldFBvc2l0aW9uKHBvcyk7XG4gICAgICAgICAgICAvLyB0aGlzLm5vZGUub3BhY2l0eSA9IDA7XG4gICAgICAgICAgICAvLyB0aGlzLm5vZGUucnVuQWN0aW9uKGNjLmZhZGVJbigwLjUpKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm1vdmUoY2MuVmVjMi5aRVJPKTtcbiAgICB9XG5cbiAgICB0b3VjaE1vdmUocClcbiAgICB7XG4gICAgICAgIGlmKCF0aGlzLmVuYWJsZWQpIHJldHVybjtcbiAgICAgICAgbGV0IHZlYyA9IHAuc3ViKHRoaXMuX3N0YXJ0UG9zKTtcbiAgICAgICAgdGhpcy5tb3ZlKHZlYyk7XG4gICAgfVxuXG4gICAgdG91Y2hFbmQocClcbiAgICB7XG4gICAgICAgIGlmKCF0aGlzLmVuYWJsZWQpIHJldHVybjtcbiAgICAgICAgLy8gdGhpcy5tb3ZlKHApO1xuICAgICAgICB0aGlzLnJlbGVhc2VTdGljaygpO1xuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/misc/DataCenter.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2946dm7U5hPgIxciZRaL5Q+', 'DataCenter');
// framework/plugin_boosts/misc/DataCenter.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.field = exports.dc = void 0;
var EventManager_1 = require("../utils/EventManager");
var all_class_properties = {};
var all_registed_class = {};
function dc(name, serializable) {
    if (serializable === void 0) { serializable = true; }
    return function (target) {
        // target.endRegister(name);
        var proto = target['prototype'].constructor;
        // let cls = all_class_properties[proto]
        all_registed_class[target] = { name: name, serializable: serializable };
    };
}
exports.dc = dc;
function field(obj) {
    return function (target, propertyName) {
        if (obj && obj.default)
            target[propertyName] = obj.default;
        // target.register(propertyName,target[propertyName])
        var constructor = target.constructor;
        var cls = all_class_properties[constructor];
        if (cls == null) {
            cls = [];
            all_class_properties[constructor] = cls;
        }
        cls.push(propertyName);
    };
}
exports.field = field;
var DataCenter = /** @class */ (function () {
    function DataCenter() {
        this.__namespace = "DataCenter";
        this.kvs = {};
        this.kts = {};
        this.kvs = {};
        this.kts = {};
    }
    DataCenter.prototype.registerFields = function (namespace) {
        console.log(this);
        var target = this["__proto__"].constructor;
        var cls = all_class_properties[target];
        var cfg = all_registed_class[target];
        // let proto:any = target['prototype'];
        for (var i in cls) {
            var k = cls[i];
            if (typeof (k) == "function")
                continue;
            this.register(k, this[k]);
            delete this[k]; //删除默认属性 ,否则设置 setter getter 会失效
        }
        namespace = namespace || cfg.name;
        this.endRegister(namespace, cfg.serializable);
    };
    DataCenter.prototype.register = function (k, defaultValue) {
        var proto = this.constructor["prototype"];
        var self = this;
        proto.__defineGetter__(k, function () {
            return self.getData(k);
        });
        proto.__defineSetter__(k, function (s) {
            self.setData(k, s);
        });
        this.kvs[k] = defaultValue;
        var type = typeof (defaultValue);
        this.kts[k] = type;
        console.log("[DataCenter] register :" + k + ":" + defaultValue + "(" + type + ")");
    };
    DataCenter.prototype.setData = function (k, nv) {
        var v = this.kvs[k];
        if (v == nv)
            return;
        var type = this.kts[k];
        var kk = this._field_(k);
        if (type != typeof (nv)) {
            console.warn("[DataCenter] wrong type <" + typeof (nv) + "> for :" + kk + "<" + type + "> ,converting...");
            if (type == "number")
                nv = Number(nv);
            else if (type == "boolean") {
                nv = (nv == "true") ? true : false;
            }
        }
        this.kvs[k] = nv;
        console.log("[DataCenter] onValueChanged", kk, nv);
        EventManager_1.event.emit(kk, nv, v);
    };
    DataCenter.prototype._field_ = function (k) {
        return this.__namespace + "." + k;
    };
    DataCenter.prototype.getData = function (k) {
        return this.kvs[k];
    };
    DataCenter.prototype.limit = function (v, min, max) {
        if (v > max) {
            return max;
        }
        else if (v < min) {
            return 0;
        }
        else {
            return v;
        }
    };
    DataCenter.prototype.addData = function (k, c) {
        c = Number(c);
        if (c == null)
            return;
        var v = this.kvs[k];
        var nv = Number(v) + c;
        this.kvs[k] = nv;
        EventManager_1.event.emit(this._field_(k), nv, v);
    };
    DataCenter.prototype.load = function () {
        for (var k in this.kvs) {
            var fromstroage = localStorage.getItem(this._field_(k));
            var v = fromstroage;
            if (fromstroage) {
                var type = this.kts[k];
                if (type == "number") {
                    v = Number(fromstroage);
                }
                else if (type == "boolean") {
                    v = fromstroage == "true" ? true : false;
                }
            }
            else {
                v = this.getData(k);
            }
            this.kvs[k] = v;
        }
    };
    DataCenter.prototype.save = function () {
        console.log("[DataCenter] save :==================================");
        for (var k in this.kvs) {
            var v = this.kvs[k];
            var kk = this._field_(k);
            localStorage.setItem(kk, v.toString());
            console.log(cc.js.formatStr("%s:%s", kk, v));
        }
        console.log("[DataCenter] save succ :==================================");
        // localStorage.setItem("#1_coin",this.getData("coin"));
    };
    DataCenter.prototype.endRegister = function (s, serializable) {
        if (serializable === void 0) { serializable = true; }
        this.__namespace = s;
        DataCenter.alldata[s] = this;
        if (serializable) {
            this.load();
            this.save();
        }
    };
    DataCenter.off = function (k, callback, target) {
        EventManager_1.event.off(k, callback, target);
    };
    DataCenter.on = function (k, callback, target) {
        EventManager_1.event.on(k, callback, target);
        this.set(k, this.get(k));
    };
    DataCenter.get = function (k) {
        var strs = k.split(".");
        var namespace = strs[0];
        var name = strs[1];
        var target = DataCenter.alldata[namespace];
        if (target)
            return target[name];
        else
            return null;
    };
    DataCenter.set = function (k, v) {
        var strs = k.split(".");
        var namespace = strs[0];
        var name = strs[1];
        var target = DataCenter.alldata[namespace];
        if (target) {
            target[name] = v;
        }
    };
    DataCenter.register = function (cls) {
        var v = new cls();
        v.registerFields();
        return v;
    };
    DataCenter.alldata = {};
    return DataCenter;
}());
exports.default = DataCenter;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/gamesys/PsFx.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5e90fpm8LtO1JagTdF3cTrm', 'PsFx');
// framework/plugin_boosts/gamesys/PsFx.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Device_1 = require("./Device");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var PsFx = /** @class */ (function (_super) {
    __extends(PsFx, _super);
    function PsFx() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // @property([cc.ParticleSystem])
        _this.particles = [];
        // @property([cc.Animation])
        _this.animations = [];
        // armature:dragonBones.ArmatureDisplay = null
        _this.armature = null;
        // name:string = null;
        // _callback:Function;
        // _target:any;
        _this.isPlaying = false;
        _this.sfx = null;
        _this.sprite = null;
        _this.playedTime = 0;
        _this.duration = -1;
        _this.fadeAfterFinish = -1;
        _this.repeatTime = 1;
        _this.removeAfterFinish = false;
        return _this;
        // update (dt) {}
    }
    PsFx.prototype.onLoad = function () {
        if (this.sprite == null) {
            this.sprite = this.getComponent(cc.Sprite);
        }
        var anim = this.getComponent(cc.Animation);
        if (anim) {
            this.animations.push(anim);
        }
        var root_ps = this.getComponent(cc.ParticleSystem);
        root_ps && this.particles.push(root_ps);
        for (var i = 0; i < this.node.childrenCount; i++) {
            var child = this.node.children[i];
            var ps = child.getComponent(cc.ParticleSystem);
            if (ps)
                this.particles.push(ps);
            else {
                var anim_1 = child.getComponent(cc.Animation);
                if (anim_1)
                    this.animations.push(anim_1);
            }
        }
        if (typeof (dragonBones) != "undefined") {
            this.armature = this.getComponent(dragonBones.ArmatureDisplay);
            if (!this.armature)
                this.armature = this.getComponentInChildren(dragonBones.ArmatureDisplay);
        }
    };
    PsFx.prototype.play = function (audio, spriteFrame) {
        var _this = this;
        if (audio === void 0) { audio = null; }
        if (spriteFrame === void 0) { spriteFrame = null; }
        this.isPlaying = true;
        var dur = 0;
        if (audio) {
            this.sfx = audio;
        }
        if (spriteFrame)
            this.sprite.spriteFrame = spriteFrame;
        this.node.active = true;
        for (var i = 0; i < this.particles.length; i++) {
            var element = this.particles[i];
            element.resetSystem();
            if (dur < element.duration) {
                dur = element.duration + element.life + element.lifeVar;
            }
        }
        for (var i = 0; i < this.animations.length; i++) {
            var element = this.animations[i];
            var clips = element.getClips();
            if (clips && clips.length > 0) {
                var clip = clips[0];
                var duration = clip.duration / clip.speed;
                if (duration > dur) {
                    dur = duration;
                }
                element.play(clip.name);
            }
        }
        if (this.sfx) {
            Device_1.default.playEffect(this.sfx, false);
        }
        if (this.armature) {
            this.armature.playAnimation("", this.repeatTime);
            dur = this.duration;
            if (dur <= 0) {
                return new Promise(function (resolve, reject) {
                    // this.armature.addEventListener(dragonBones.EventObject.LOOP_COMPLETE, _=>{
                    //     console.log("loop complete");
                    //     this.fadeOnFinish(resolve)
                    // })
                    _this.armature.addEventListener(dragonBones.EventObject.COMPLETE, function (_) {
                        console.log("armature play complete");
                        if (_this.removeAfterFinish) {
                            _this.node.removeFromParent();
                        }
                        else {
                            _this.fadeOnFinish(resolve);
                        }
                    });
                });
            }
        }
        else {
            dur = dur + 0.1;
        }
        // console.log("[psfx] play : " ,  this.name,  dur);
        return new Promise(function (resolve, reject) {
            setTimeout(function (_) {
                if (!_this.isValid)
                    return;
                if (_this.removeAfterFinish) {
                    _this.node.removeFromParent();
                }
                else {
                    _this.fadeOnFinish(resolve);
                }
            }, dur * 1000);
        });
    };
    PsFx.prototype.fadeOnFinish = function (callback) {
        this.isPlaying = false;
        for (var i = 0; i < this.particles.length; i++) {
            var element = this.particles[i];
            element.stopSystem();
        }
        if (this.fadeAfterFinish > 0) {
            var seq = cc.sequence(cc.fadeOut(this.fadeAfterFinish), cc.callFunc(callback));
            this.node.runAction(seq);
        }
        else {
            callback();
        }
    };
    PsFx.prototype.reset = function () {
        this.playedTime = 0;
    };
    PsFx.prototype.start = function () {
    };
    __decorate([
        property({ type: cc.AudioClip })
    ], PsFx.prototype, "sfx", void 0);
    __decorate([
        property(cc.Sprite)
    ], PsFx.prototype, "sprite", void 0);
    __decorate([
        property
    ], PsFx.prototype, "duration", void 0);
    __decorate([
        property
    ], PsFx.prototype, "fadeAfterFinish", void 0);
    __decorate([
        property
    ], PsFx.prototype, "repeatTime", void 0);
    __decorate([
        property
    ], PsFx.prototype, "removeAfterFinish", void 0);
    PsFx = __decorate([
        ccclass
    ], PsFx);
    return PsFx;
}(cc.Component));
exports.default = PsFx;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/misc/InputSystem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4643c14ws5Msox+teVpsIzz', 'InputSystem');
// framework/plugin_boosts/misc/InputSystem.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.InputSystem = exports.Input = void 0;
var JoyStick_1 = require("./JoyStick");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
exports.Input = null;
var InputSystem = /** @class */ (function (_super) {
    __extends(InputSystem, _super);
    function InputSystem() {
        // @property(cc.Component.EventHandler)
        // onKeyDown:cc.Component.EventHandler;
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._target = null;
        _this.keys = {};
        _this.__touchVec = cc.Vec2.ZERO;
        _this.radius_axis = 256;
        _this.joyStick = null;
        _this.__lastTouch = cc.Vec2.ZERO;
        _this.moveOffset = cc.Vec2.ZERO;
        _this.__curTouchId = -1;
        return _this;
    }
    /**
     * if target is a Component ,this function must be called in onLoad
     * @param target
     */
    InputSystem.prototype.setDelegate = function (target) {
        this._target = target;
    };
    InputSystem.prototype.onLoad = function () {
        exports.Input = this;
        var components = this.getComponents(cc.Component);
        for (var i = 0; i < components.length; i++) {
            var comp = components[i];
            if (comp != this && (comp.onTouchBegan || comp.onTouchEnded || comp.onTouchMoved)) {
                this._target = comp;
                break;
            }
        }
        console.log("InputSystem Component -> target:", this._target);
    };
    //Horizontal
    //Vertical
    InputSystem.prototype.start = function () {
        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.triggerKeyDown, this);
        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.triggerKeyUp, this);
        // if(this._target)
        // {
        this.node.on(cc.Node.EventType.TOUCH_START, this.triggerTouchBegan, this);
        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.triggerTouchMoved, this);
        this.node.on(cc.Node.EventType.TOUCH_END, this.triggerTouchEnded, this);
        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.triggerTouchCanceled, this);
        // }
    };
    Object.defineProperty(InputSystem.prototype, "touch", {
        get: function () {
            return this.__touch;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(InputSystem.prototype, "axis", {
        // only valid when joystick is enabled 
        get: function () {
            if (this.joyStick)
                return this.joyStick.axis;
            else
                return this.__touchVec;
        },
        enumerable: false,
        configurable: true
    });
    InputSystem.prototype.getKey = function (k) {
        return this.keys[k];
    };
    InputSystem.prototype.triggerKeyUp = function (e) {
        if (this._target.onKeyUp)
            this._target.onKeyUp(event);
        this.keys[event["key"]] = false;
    };
    InputSystem.prototype.triggerKeyDown = function (e) {
        if (this._target.onKeyDown)
            this._target.onKeyDown(event);
        this.keys[event["key"]] = true;
    };
    InputSystem.prototype.triggerTouchEnded = function (e) {
        if (this.__curTouchId != -1 && e.getID() != this.__curTouchId) {
            return;
        }
        this.__curTouchId = -1;
        if (this._target.onTouchEnded)
            this._target.onTouchEnded(e);
        this.__touch = null;
        this.__touchVec = cc.Vec2.ZERO;
        if (e.currentTouch)
            if (this.joyStick)
                this.joyStick.touchEnd(e.currentTouch.getLocation());
        this.moveOffset = cc.Vec2.ZERO;
    };
    InputSystem.prototype.triggerTouchMoved = function (e) {
        if (this.__curTouchId != -1 && e.getID() != this.__curTouchId) {
            return;
        }
        if (this._target.onTouchMoved)
            this._target.onTouchMoved(e);
        this.__touch = e.currentTouch.getLocation();
        this.moveOffset = this.__touch.sub(this.__lastTouch);
        if (this.__touch && this.__startLocation) {
            this.__touchVec = this.__touch.sub(this.__startLocation);
            if (this.joyStick)
                this.joyStick.touchMove(this.__touch);
        }
        this.__lastTouch = this.__touch;
    };
    InputSystem.prototype.triggerTouchBegan = function (e) {
        if (this.__curTouchId != -1 && e.getID() != this.__curTouchId) {
            return;
        }
        if (this._target.onTouchBegan)
            this._target.onTouchBegan(e);
        this.__curTouchId = e.getID();
        this.__startLocation = e.currentTouch.getLocation();
        this.__touch = e.currentTouch.getLocation();
        this.__lastTouch = this.__touch;
        if (this.joyStick)
            this.joyStick.touchStart(this.__startLocation);
    };
    InputSystem.prototype.triggerTouchCanceled = function (e) {
        this.triggerTouchEnded(e);
    };
    InputSystem.prototype.onEnable = function () {
        this.schedule(this.checkTouch, 0.02);
    };
    InputSystem.prototype.onDisable = function () {
        this.unschedule(this.checkTouch);
    };
    InputSystem.prototype.checkTouch = function () {
        if (this.__touch) {
            this.moveOffset = this.__touch.sub(this.__lastTouch);
        }
    };
    __decorate([
        property(JoyStick_1.default)
    ], InputSystem.prototype, "joyStick", void 0);
    InputSystem = __decorate([
        ccclass
    ], InputSystem);
    return InputSystem;
}(cc.Component));
exports.InputSystem = InputSystem;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/gamesys/Device.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b88b4v3H5tF7ozLVLmzIPqR', 'Device');
// framework/plugin_boosts/gamesys/Device.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Device = /** @class */ (function () {
    function Device() {
    }
    Device.setSoundsEnable = function (b) {
        Device.setSFXEnable(b);
        Device.setBGMEnable(b);
    };
    Device.setSFXEnable = function (b) {
        cc.audioEngine.setEffectsVolume(b == true ? 1 : 0);
        Device.isSfxEnabled = b;
        if (!b) {
            cc.audioEngine.pauseAllEffects();
        }
        else {
            cc.audioEngine.resumeAllEffects();
        }
    };
    Device.useCCAudioEngine = function () {
        this._useCCAudioEngine = true;
    };
    Device.useDefaultAudioEngine = function () {
        this._useCCAudioEngine = false;
    };
    Device.setBGMEnable = function (b) {
        cc.audioEngine.setMusicVolume(b == true ? 1 : 0);
        Device.isBgmEnabled = b;
        if (!b) {
            cc.audioEngine.pauseMusic();
        }
        else {
            cc.audioEngine.resumeMusic();
        }
    };
    Device.playEffect = function (clip, loop) {
        if (loop === void 0) { loop = false; }
        if (Device.isSfxEnabled) {
            if (cc.sys.platform == cc.sys.QQ_PLAY) {
                if (this._useCCAudioEngine) {
                    return cc.audioEngine.playEffect(clip, loop);
                }
                else {
                }
            }
            else
                return cc.audioEngine.playEffect(clip, loop);
        }
    };
    Device.stopMusic = function () {
        cc.audioEngine.stopMusic();
    };
    Device.playMusic = function (clip, loop) {
        if (loop === void 0) { loop = true; }
        if (Device.isBgmEnabled) {
            return cc.audioEngine.playMusic(clip, loop);
        }
    };
    Device.vibrate = function () {
        if (cc.sys.WECHAT_GAME == cc.sys.platform) {
            wx.vibrateShort();
        }
        else {
            console.log("not support vibrate on except-wx platfrom ");
        }
    };
    Device.isSfxEnabled = true;
    Device.isBgmEnabled = true;
    Device._useCCAudioEngine = false;
    return Device;
}());
exports.default = Device;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxnYW1lc3lzXFxEZXZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUVBO0lBQUE7SUEwRkEsQ0FBQztJQW5GVSxzQkFBZSxHQUF0QixVQUF1QixDQUFTO1FBRTVCLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFDdEIsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRU0sbUJBQVksR0FBbkIsVUFBb0IsQ0FBQztRQUVqQixFQUFFLENBQUMsV0FBVyxDQUFDLGdCQUFnQixDQUFDLENBQUMsSUFBSSxJQUFJLENBQUEsQ0FBQyxDQUFBLENBQUMsQ0FBQSxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUM7UUFDL0MsTUFBTSxDQUFDLFlBQVksR0FBRyxDQUFDLENBQUM7UUFDeEIsSUFBRyxDQUFDLENBQUMsRUFDTDtZQUNJLEVBQUUsQ0FBQyxXQUFXLENBQUMsZUFBZSxFQUFFLENBQUE7U0FDbkM7YUFBSTtZQUNELEVBQUUsQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztTQUNyQztJQUNMLENBQUM7SUFJTSx1QkFBZ0IsR0FBdkI7UUFFSSxJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDO0lBQ2xDLENBQUM7SUFFTSw0QkFBcUIsR0FBNUI7UUFFSSxJQUFJLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO0lBQ25DLENBQUM7SUFFTSxtQkFBWSxHQUFuQixVQUFvQixDQUFDO1FBRWpCLEVBQUUsQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUEsQ0FBQyxDQUFBLENBQUMsQ0FBQSxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUM7UUFDN0MsTUFBTSxDQUFDLFlBQVksR0FBRyxDQUFDLENBQUM7UUFDeEIsSUFBRyxDQUFDLENBQUMsRUFDTDtZQUNJLEVBQUUsQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFLENBQUE7U0FDOUI7YUFBSTtZQUNELEVBQUUsQ0FBQyxXQUFXLENBQUMsV0FBVyxFQUFFLENBQUE7U0FDL0I7SUFDTCxDQUFDO0lBR00saUJBQVUsR0FBakIsVUFBa0IsSUFBSSxFQUFDLElBQVk7UUFBWixxQkFBQSxFQUFBLFlBQVk7UUFFL0IsSUFBRyxNQUFNLENBQUMsWUFBWSxFQUN0QjtZQUNJLElBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxRQUFRLElBQUksRUFBRSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQ3BDO2dCQUNJLElBQUcsSUFBSSxDQUFDLGlCQUFpQixFQUN6QjtvQkFDSSxPQUFPLEVBQUUsQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLElBQUksRUFBQyxJQUFJLENBQUMsQ0FBQTtpQkFDOUM7cUJBQUk7aUJBR0o7YUFDSjs7Z0JBQ0csT0FBTyxFQUFFLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUMsSUFBSSxDQUFDLENBQUE7U0FDbEQ7SUFDTCxDQUFDO0lBRU0sZ0JBQVMsR0FBaEI7UUFFSSxFQUFFLENBQUMsV0FBVyxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFTSxnQkFBUyxHQUFoQixVQUFpQixJQUFJLEVBQUMsSUFBVztRQUFYLHFCQUFBLEVBQUEsV0FBVztRQUU3QixJQUFHLE1BQU0sQ0FBQyxZQUFZLEVBQ3RCO1lBQ0ksT0FBTyxFQUFFLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUMsSUFBSSxDQUFDLENBQUM7U0FDOUM7SUFDTCxDQUFDO0lBRU0sY0FBTyxHQUFkO1FBRUksSUFBRyxFQUFFLENBQUMsR0FBRyxDQUFDLFdBQVcsSUFBSSxFQUFFLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFDeEM7WUFDSSxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUE7U0FDcEI7YUFBSTtZQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsNENBQTRDLENBQUMsQ0FBQTtTQUM1RDtJQUNMLENBQUM7SUF0Rk0sbUJBQVksR0FBRyxJQUFJLENBQUM7SUFFcEIsbUJBQVksR0FBRyxJQUFJLENBQUM7SUFvQnBCLHdCQUFpQixHQUFHLEtBQUssQ0FBQztJQWlFckMsYUFBQztDQTFGRCxBQTBGQyxJQUFBO2tCQTFGb0IsTUFBTSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEZXZpY2UgXG57XG5cbiAgICBzdGF0aWMgaXNTZnhFbmFibGVkID0gdHJ1ZTtcblxuICAgIHN0YXRpYyBpc0JnbUVuYWJsZWQgPSB0cnVlO1xuXG4gICAgc3RhdGljIHNldFNvdW5kc0VuYWJsZShiOmJvb2xlYW4pXG4gICAge1xuICAgICAgICBEZXZpY2Uuc2V0U0ZYRW5hYmxlKGIpXG4gICAgICAgIERldmljZS5zZXRCR01FbmFibGUoYik7XG4gICAgfVxuXG4gICAgc3RhdGljIHNldFNGWEVuYWJsZShiKVxuICAgIHtcbiAgICAgICAgY2MuYXVkaW9FbmdpbmUuc2V0RWZmZWN0c1ZvbHVtZShiID09IHRydWU/MTowKTtcbiAgICAgICAgRGV2aWNlLmlzU2Z4RW5hYmxlZCA9IGI7XG4gICAgICAgIGlmKCFiKVxuICAgICAgICB7XG4gICAgICAgICAgICBjYy5hdWRpb0VuZ2luZS5wYXVzZUFsbEVmZmVjdHMoKVxuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIGNjLmF1ZGlvRW5naW5lLnJlc3VtZUFsbEVmZmVjdHMoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN0YXRpYyBfdXNlQ0NBdWRpb0VuZ2luZSA9IGZhbHNlO1xuXG4gICAgc3RhdGljIHVzZUNDQXVkaW9FbmdpbmUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fdXNlQ0NBdWRpb0VuZ2luZSA9IHRydWU7XG4gICAgfVxuXG4gICAgc3RhdGljIHVzZURlZmF1bHRBdWRpb0VuZ2luZSgpXG4gICAge1xuICAgICAgICB0aGlzLl91c2VDQ0F1ZGlvRW5naW5lID0gZmFsc2U7XG4gICAgfVxuXG4gICAgc3RhdGljIHNldEJHTUVuYWJsZShiKVxuICAgIHtcbiAgICAgICAgY2MuYXVkaW9FbmdpbmUuc2V0TXVzaWNWb2x1bWUoYiA9PSB0cnVlPzE6MCk7XG4gICAgICAgIERldmljZS5pc0JnbUVuYWJsZWQgPSBiO1xuICAgICAgICBpZighYilcbiAgICAgICAge1xuICAgICAgICAgICAgY2MuYXVkaW9FbmdpbmUucGF1c2VNdXNpYygpXG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgY2MuYXVkaW9FbmdpbmUucmVzdW1lTXVzaWMoKVxuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICBzdGF0aWMgcGxheUVmZmVjdChjbGlwLGxvb3AgPSBmYWxzZSlcbiAgICB7XG4gICAgICAgIGlmKERldmljZS5pc1NmeEVuYWJsZWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKGNjLnN5cy5wbGF0Zm9ybSA9PSBjYy5zeXMuUVFfUExBWSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZih0aGlzLl91c2VDQ0F1ZGlvRW5naW5lKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNjLmF1ZGlvRW5naW5lLnBsYXlFZmZlY3QoY2xpcCxsb29wKVxuICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1lbHNlXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNjLmF1ZGlvRW5naW5lLnBsYXlFZmZlY3QoY2xpcCxsb29wKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgc3RhdGljIHN0b3BNdXNpYygpXG4gICAge1xuICAgICAgICBjYy5hdWRpb0VuZ2luZS5zdG9wTXVzaWMoKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgcGxheU11c2ljKGNsaXAsbG9vcCA9IHRydWUpXG4gICAge1xuICAgICAgICBpZihEZXZpY2UuaXNCZ21FbmFibGVkKVxuICAgICAgICB7XG4gICAgICAgICAgICByZXR1cm4gY2MuYXVkaW9FbmdpbmUucGxheU11c2ljKGNsaXAsbG9vcCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzdGF0aWMgdmlicmF0ZSgpXG4gICAge1xuICAgICAgICBpZihjYy5zeXMuV0VDSEFUX0dBTUUgPT0gY2Muc3lzLnBsYXRmb3JtKVxuICAgICAgICB7XG4gICAgICAgICAgICB3eC52aWJyYXRlU2hvcnQoKVxuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwibm90IHN1cHBvcnQgdmlicmF0ZSBvbiBleGNlcHQtd3ggcGxhdGZyb20gXCIpXG4gICAgICAgIH1cbiAgICB9XG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/misc/Signal.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bf602DYuhZP7Z8VfN9eJFzO', 'Signal');
// framework/plugin_boosts/misc/Signal.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Signal = /** @class */ (function () {
    function Signal(c, t) {
        this.add(c, t);
    }
    Signal.prototype.add = function (callback, target) {
        this.callback = callback;
        this.target = target;
    };
    Signal.prototype.fire = function () {
        var _a;
        var ps = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            ps[_i] = arguments[_i];
        }
        if (this.callback) {
            (_a = this.callback).call.apply(_a, __spreadArrays([this.target], ps));
        }
    };
    Signal.prototype.on = function (callback, target) {
        this.callback = callback;
        this.target = target;
    };
    Signal.prototype.clear = function () {
        this.callback = null;
    };
    return Signal;
}());
exports.default = Signal;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxtaXNjXFxTaWduYWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0lBSUksZ0JBQVksQ0FBRSxFQUFDLENBQUU7UUFFYixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQTtJQUNqQixDQUFDO0lBRUQsb0JBQUcsR0FBSCxVQUFJLFFBQWlCLEVBQUcsTUFBTztRQUUzQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN6QixDQUFDO0lBRUQscUJBQUksR0FBSjs7UUFBSyxZQUFLO2FBQUwsVUFBSyxFQUFMLHFCQUFLLEVBQUwsSUFBSztZQUFMLHVCQUFLOztRQUVOLElBQUksSUFBSSxDQUFDLFFBQVEsRUFDakI7WUFDSSxDQUFBLEtBQUEsSUFBSSxDQUFDLFFBQVEsQ0FBQSxDQUFDLElBQUksMkJBQUMsSUFBSSxDQUFDLE1BQU0sR0FBSSxFQUFFLEdBQUM7U0FDeEM7SUFDTCxDQUFDO0lBRUQsbUJBQUUsR0FBRixVQUFHLFFBQWlCLEVBQUMsTUFBTztRQUV4QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN6QixDQUFDO0lBRUQsc0JBQUssR0FBTDtRQUVJLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0lBQ3pCLENBQUM7SUFDTCxhQUFDO0FBQUQsQ0FqQ0EsQUFpQ0MsSUFBQSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNpZ25hbFxue1xuICAgIGNhbGxiYWNrOkZ1bmN0aW9uIDtcbiAgICB0YXJnZXQ6YW55O1xuICAgIGNvbnN0cnVjdG9yKGM/LHQ/KVxuICAgIHtcbiAgICAgICAgdGhpcy5hZGQoYyx0KVxuICAgIH1cblxuICAgIGFkZChjYWxsYmFjazpGdW5jdGlvbiAsIHRhcmdldD8pXG4gICAge1xuICAgICAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICAgIHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuICAgIH1cblxuICAgIGZpcmUoLi4ucHMpXG4gICAge1xuICAgICAgICBpZiAodGhpcy5jYWxsYmFjaylcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5jYWxsYmFjay5jYWxsKHRoaXMudGFyZ2V0LC4uLnBzKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgb24oY2FsbGJhY2s6RnVuY3Rpb24sdGFyZ2V0PylcbiAgICB7XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgICAgdGhpcy50YXJnZXQgPSB0YXJnZXQ7XG4gICAgfVxuXG4gICAgY2xlYXIoKVxuICAgIHtcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IG51bGw7XG4gICAgfVxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/gamesys/PsSpawner.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '12e8aPL0IBPxYKO3t/sxN/O', 'PsSpawner');
// framework/plugin_boosts/gamesys/PsSpawner.ts

Object.defineProperty(exports, "__esModule", { value: true });
var PsFx_1 = require("./PsFx");
var PoolManager_1 = require("./PoolManager");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var PsSpawner = /** @class */ (function (_super) {
    __extends(PsSpawner, _super);
    function PsSpawner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PsSpawner.prototype.onLoad = function () {
        this.poolmgr = new PoolManager_1.default();
    };
    PsSpawner.prototype.start = function () {
    };
    PsSpawner.prototype.clear = function () {
        if (this.poolmgr)
            this.poolmgr.clear();
    };
    PsSpawner.prototype.getFx = function (prefabPath) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var node = _this.poolmgr.get(prefabPath);
            if (node == null) {
                if (prefabPath instanceof cc.Prefab) {
                    node = cc.instantiate(prefabPath);
                    _this.poolmgr.tag(node, prefabPath);
                }
                else {
                    cc.loader.loadRes(prefabPath, cc.Prefab, function (e, prefab) {
                        node = cc.instantiate(prefab);
                        node.setParent(_this.node);
                        var psfx = node.getComponent(PsFx_1.default);
                        psfx.name = prefabPath;
                        resolve(psfx);
                    });
                    return;
                }
            }
            node.setParent(_this.node);
            node.active = false;
            var psfx = node.getComponent(PsFx_1.default);
            psfx.reset();
            resolve(psfx);
        });
    };
    PsSpawner.prototype.onFxFinshPlay = function (fx) {
        this.poolmgr.put(fx.node);
    };
    PsSpawner.prototype.play = function (prefabPath, pos, rotation, audio, spriteframe) {
        if (pos === void 0) { pos = cc.Vec2.ZERO; }
        if (rotation === void 0) { rotation = 0; }
        return __awaiter(this, void 0, void 0, function () {
            var fx;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getFx(prefabPath)];
                    case 1:
                        fx = _a.sent();
                        fx.node.position = pos;
                        fx.node.rotation = rotation;
                        return [4 /*yield*/, fx.play(audio, spriteframe)];
                    case 2:
                        _a.sent();
                        this.onFxFinshPlay(fx);
                        return [2 /*return*/];
                }
            });
        });
    };
    PsSpawner.prototype.play2 = function (prefabPath, pos, rotation, scale) {
        if (pos === void 0) { pos = cc.Vec2.ZERO; }
        if (rotation === void 0) { rotation = 0; }
        if (scale === void 0) { scale = 0; }
        return __awaiter(this, void 0, void 0, function () {
            var fx;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getFx(prefabPath)];
                    case 1:
                        fx = _a.sent();
                        fx.node.position = pos;
                        fx.node.scale = scale;
                        fx.node.rotation = rotation;
                        return [4 /*yield*/, fx.play()];
                    case 2:
                        _a.sent();
                        this.onFxFinshPlay(fx);
                        return [2 /*return*/];
                }
            });
        });
    };
    PsSpawner.prototype.play3 = function (prefabPath, pos) {
        return __awaiter(this, void 0, void 0, function () {
            var fx;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getFx(prefabPath)];
                    case 1:
                        fx = _a.sent();
                        fx.node.position = pos;
                        fx.play().then(function (_) { return _this.onFxFinshPlay(fx); });
                        return [2 /*return*/, fx.node];
                }
            });
        });
    };
    PsSpawner = __decorate([
        ccclass
    ], PsSpawner);
    return PsSpawner;
}(cc.Component));
exports.default = PsSpawner;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxnYW1lc3lzXFxQc1NwYXduZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLCtCQUEwQjtBQUMxQiw2Q0FBd0M7QUFFbEMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBdUMsNkJBQVk7SUFBbkQ7O0lBbUZBLENBQUM7SUE5RUcsMEJBQU0sR0FBTjtRQUVJLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxxQkFBVyxFQUFFLENBQUM7SUFDckMsQ0FBQztJQUVELHlCQUFLLEdBQUw7SUFFQSxDQUFDO0lBRUQseUJBQUssR0FBTDtRQUVJLElBQUcsSUFBSSxDQUFDLE9BQU87WUFDWCxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFFRCx5QkFBSyxHQUFMLFVBQU0sVUFBVTtRQUFoQixpQkEyQkM7UUF6QkcsT0FBTyxJQUFJLE9BQU8sQ0FBTyxVQUFDLE9BQU8sRUFBQyxNQUFNO1lBQ3BDLElBQUksSUFBSSxHQUFHLEtBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFBO1lBQ3ZDLElBQUcsSUFBSSxJQUFJLElBQUksRUFDZjtnQkFDSSxJQUFHLFVBQVUsWUFBWSxFQUFFLENBQUMsTUFBTSxFQUNsQztvQkFDSSxJQUFJLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQztvQkFDbEMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFDLFVBQVUsQ0FBQyxDQUFBO2lCQUNwQztxQkFBSTtvQkFDRCxFQUFFLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUMsRUFBRSxDQUFDLE1BQU0sRUFBQyxVQUFDLENBQUMsRUFBQyxNQUFnQjt3QkFDdEQsSUFBSSxHQUFHLEVB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QUNsQjtJQS9FZ0IsU0FBUztRQUQ3QixPQUFPO09BQ2EsU0FBUyxDQW1GN0I7SUFBRCxnQkFBQztDQW5GRCxBQW1GQyxDQW5Gc0MsRUFBRSxDQUFDLFNBQVMsR0FtRmxEO2tCQW5Gb0IsU0FBUyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQc0Z4IGZyb20gXCIuL1BzRnhcIjtcbmltcG9ydCBQb29sTWFuYWdlciBmcm9tIFwiLi9Qb29sTWFuYWdlclwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBzU3Bhd25lciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cbiAgICBzdGF0aWMgaW5zdGFuY2U6UHNTcGF3bmVyO1xuICAgIFxuICAgIHBvb2xtZ3I6UG9vbE1hbmFnZXI7XG4gICAgb25Mb2FkKClcbiAgICB7XG4gICAgICAgIHRoaXMucG9vbG1nciA9IG5ldyBQb29sTWFuYWdlcigpO1xuICAgIH1cblxuICAgIHN0YXJ0ICgpIHtcblxuICAgIH1cblxuICAgIGNsZWFyKClcbiAgICB7XG4gICAgICAgIGlmKHRoaXMucG9vbG1ncilcbiAgICAgICAgICAgIHRoaXMucG9vbG1nci5jbGVhcigpO1xuICAgIH1cblxuICAgIGdldEZ4KHByZWZhYlBhdGgpOlByb21pc2U8UHNGeD5cbiAgICB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZTxQc0Z4PigocmVzb2x2ZSxyZWplY3QpPT57XG4gICAgICAgICAgICBsZXQgbm9kZSA9IHRoaXMucG9vbG1nci5nZXQocHJlZmFiUGF0aClcbiAgICAgICAgICAgIGlmKG5vZGUgPT0gbnVsbClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZihwcmVmYWJQYXRoIGluc3RhbmNlb2YgY2MuUHJlZmFiIClcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGUgPSBjYy5pbnN0YW50aWF0ZShwcmVmYWJQYXRoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wb29sbWdyLnRhZyhub2RlLHByZWZhYlBhdGgpXG4gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgIGNjLmxvYWRlci5sb2FkUmVzKHByZWZhYlBhdGgsY2MuUHJlZmFiLChlLHByZWZhYjpjYy5QcmVmYWIpID0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSA9IGNjLmluc3RhbnRpYXRlKHByZWZhYik7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLnNldFBhcmVudCh0aGlzLm5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHBzZnggPSBub2RlLmdldENvbXBvbmVudChQc0Z4KVxuICAgICAgICAgICAgICAgICAgICAgICAgcHNmeC5uYW1lID0gcHJlZmFiUGF0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUocHNmeCk7XG4gICAgICAgICAgICAgICAgICAgIH0pIFxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbm9kZS5zZXRQYXJlbnQodGhpcy5ub2RlKTtcbiAgICAgICAgICAgIG5vZGUuYWN0aXZlID0gZmFsc2U7XG4gICAgICAgICAgICBsZXQgcHNmeCA9IG5vZGUuZ2V0Q29tcG9uZW50KFBzRngpXG4gICAgICAgICAgICBwc2Z4LnJlc2V0KCk7XG4gICAgICAgICAgICByZXNvbHZlKHBzZngpO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIG9uRnhGaW5zaFBsYXkoZng6UHNGeClcbiAgICB7XG4gICAgICAgIHRoaXMucG9vbG1nci5wdXQoZngubm9kZSk7XG4gICAgfVxuXG4gICAgYXN5bmMgcGxheShwcmVmYWJQYXRoLHBvcyA9IGNjLlZlYzIuWkVSTyxyb3RhdGlvbiA9IDAsYXVkaW8/LHNwcml0ZWZyYW1lPylcbiAgICB7XG4gICAgICAgIGxldCBmeCA9IGF3YWl0IHRoaXMuZ2V0RngocHJlZmFiUGF0aCk7XG4gICAgICAgIGZ4Lm5vZGUucG9zaXRpb24gPSBwb3M7XG4gICAgICAgIGZ4Lm5vZGUucm90YXRpb24gPSByb3RhdGlvbjtcbiAgICAgICAgYXdhaXQgZngucGxheShhdWRpbyxzcHJpdGVmcmFtZSlcbiAgICAgICAgdGhpcy5vbkZ4Rmluc2hQbGF5KGZ4KTtcbiAgICB9XG5cbiAgICBhc3luYyBwbGF5MihwcmVmYWJQYXRoLHBvcyA9IGNjLlZlYzIuWkVSTyxyb3RhdGlvbiA9IDAsc2NhbGU9MClcbiAgICB7XG4gICAgICAgIGxldCBmeCA9IGF3YWl0IHRoaXMuZ2V0RngocHJlZmFiUGF0aCk7XG4gICAgICAgIGZ4Lm5vZGUucG9zaXRpb24gPSBwb3M7XG4gICAgICAgIGZ4Lm5vZGUuc2NhbGUgPSBzY2FsZTtcbiAgICAgICAgZngubm9kZS5yb3RhdGlvbiA9IHJvdGF0aW9uO1xuICAgICAgICBhd2FpdCBmeC5wbGF5KClcbiAgICAgICAgdGhpcy5vbkZ4Rmluc2hQbGF5KGZ4KTtcbiAgICB9XG5cbiAgICBhc3luYyBwbGF5MyhwcmVmYWJQYXRoLHBvcylcbiAgICB7XG4gICAgICAgIGxldCBmeCA9IGF3YWl0IHRoaXMuZ2V0RngocHJlZmFiUGF0aCk7XG4gICAgICAgIGZ4Lm5vZGUucG9zaXRpb24gPSBwb3M7XG4gICAgICAgIGZ4LnBsYXkoKS50aGVuKF89PnRoaXMub25GeEZpbnNoUGxheShmeCkpO1xuICAgICAgICByZXR1cm4gZngubm9kZTtcbiAgICB9XG5cblxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/DCLabel.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a56c0Fh1bpDto6UwDov+u7M', 'DCLabel');
// framework/plugin_boosts/ui/DCLabel.ts

Object.defineProperty(exports, "__esModule", { value: true });
var DCUI_1 = require("./DCUI");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, requireComponent = _a.requireComponent;
var DCLabel = /** @class */ (function (_super) {
    __extends(DCLabel, _super);
    function DCLabel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DCLabel.prototype.onLoad = function () {
        this.label = this.getComponent(cc.Label);
    };
    DCLabel.prototype.onValueChanged = function (v) {
        if (!v) {
            console.log("[DCLabel] warn!", "not found field " + this.dataBind);
            v = "0";
        }
        this.label.string = v;
    };
    DCLabel = __decorate([
        ccclass,
        requireComponent(cc.Label)
    ], DCLabel);
    return DCLabel;
}(DCUI_1.default));
exports.default = DCLabel;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1aVxcRENMYWJlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsK0JBQTBCO0FBRXBCLElBQUEsS0FBdUMsRUFBRSxDQUFDLFVBQVUsRUFBbkQsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFBLEVBQUMsZ0JBQWdCLHNCQUFpQixDQUFDO0FBSzNEO0lBQXFDLDJCQUFJO0lBQXpDOztJQWtCQSxDQUFDO0lBZkcsd0JBQU0sR0FBTjtRQUVJLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVELGdDQUFjLEdBQWQsVUFBZSxDQUFDO1FBRVosSUFBRyxDQUFDLENBQUMsRUFBQztZQUNGLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUcsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1lBQ25FLENBQUMsR0FBRyxHQUFHLENBQUE7U0FDVjtRQUNELElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBZmdCLE9BQU87UUFGM0IsT0FBTztRQUNQLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7T0FDTixPQUFPLENBa0IzQjtJQUFELGNBQUM7Q0FsQkQsQUFrQkMsQ0FsQm9DLGNBQUksR0FrQnhDO2tCQWxCb0IsT0FBTyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEQ1VJIGZyb20gXCIuL0RDVUlcIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5LHJlcXVpcmVDb21wb25lbnR9ID0gY2MuX2RlY29yYXRvcjtcblxuXG5AY2NjbGFzc1xuQHJlcXVpcmVDb21wb25lbnQoY2MuTGFiZWwpXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEQ0xhYmVsIGV4dGVuZHMgRENVSSB7XG5cbiAgICBsYWJlbDpjYy5MYWJlbDtcbiAgICBvbkxvYWQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5sYWJlbCA9IHRoaXMuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKTtcbiAgICB9XG5cbiAgICBvblZhbHVlQ2hhbmdlZCh2KVxuICAgIHtcbiAgICAgICAgaWYoIXYpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJbRENMYWJlbF0gd2FybiFcIiAsIFwibm90IGZvdW5kIGZpZWxkIFwiICsgdGhpcy5kYXRhQmluZClcbiAgICAgICAgICAgIHYgPSBcIjBcIlxuICAgICAgICB9XG4gICAgICAgIHRoaXMubGFiZWwuc3RyaW5nID0gdjtcbiAgICB9XG4gICBcbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/LoadingManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '48049jD6zJMmoi+cPkRhX7D', 'LoadingManager');
// framework/plugin_boosts/ui/LoadingManager.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.Loading = void 0;
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
exports.Loading = null;
var LoadingManager = /** @class */ (function (_super) {
    __extends(LoadingManager, _super);
    function LoadingManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.prefab = null;
        _this.loadingNode = null;
        _this.loadingSprite = null;
        _this.loadingText = null;
        _this.blockEventComp = null;
        _this._callback = null;
        _this._target = null;
        return _this;
        // update (dt) {}
    }
    LoadingManager.prototype.onLoad = function () {
        this.loadingNode = cc.instantiate(this.prefab);
        this.blockEventComp = this.loadingNode.getComponent(cc.BlockInputEvents);
        this.loadingNode.parent = this.node;
        this.loadingNode.zIndex = 9999;
        this.loadingSprite = this.loadingNode.getComponentInChildren(cc.Sprite);
        this.loadingText = this.loadingNode.getComponentInChildren(cc.Label);
        this.hide();
        exports.Loading = this;
    };
    LoadingManager.prototype.start = function () {
        this.loadingSprite.node.runAction(cc.rotateBy(4, 360).repeatForever());
    };
    LoadingManager.prototype.dealyClose = function () {
        this.hide();
        if (this._callback) {
            this._callback.call(this._target);
        }
    };
    LoadingManager.prototype.show = function (timeout, text, modal, callback, target) {
        if (text === void 0) { text = null; }
        if (modal === void 0) { modal = true; }
        if (callback === void 0) { callback = null; }
        if (target === void 0) { target = null; }
        this.loadingNode.active = true;
        this.loadingNode.resumeAllActions();
        this.blockEventComp.enabled = modal;
        this._callback = callback;
        this._target = target;
        if (text)
            this.loadingText.string = text;
        if (timeout > 0) {
            this.unschedule(this.dealyClose);
            this.scheduleOnce(this.dealyClose, timeout);
        }
    };
    LoadingManager.prototype.hide = function () {
        this.loadingNode.active = false;
        this.loadingNode.pauseAllActions();
    };
    __decorate([
        property(cc.Prefab)
    ], LoadingManager.prototype, "prefab", void 0);
    LoadingManager = __decorate([
        ccclass
    ], LoadingManager);
    return LoadingManager;
}(cc.Component));
exports.default = LoadingManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1aVxcTG9hZGluZ01hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUUvQixRQUFBLE9BQU8sR0FBa0IsSUFBSSxDQUFDO0FBR3pDO0lBQTRDLGtDQUFZO0lBQXhEO1FBQUEscUVBNERDO1FBekRHLFlBQU0sR0FBYSxJQUFJLENBQUM7UUFFeEIsaUJBQVcsR0FBVyxJQUFJLENBQUM7UUFDM0IsbUJBQWEsR0FBYSxJQUFJLENBQUM7UUFDL0IsaUJBQVcsR0FBWSxJQUFJLENBQUM7UUFDNUIsb0JBQWMsR0FBdUIsSUFBSSxDQUFDO1FBRTFDLGVBQVMsR0FBTyxJQUFJLENBQUM7UUFDckIsYUFBTyxHQUFPLElBQUksQ0FBQzs7UUFnRG5CLGlCQUFpQjtJQUNyQixDQUFDO0lBaERHLCtCQUFNLEdBQU47UUFFSSxJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDekUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNwQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLHNCQUFzQixDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4RSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsc0JBQXNCLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JFLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNaLGVBQU8sR0FBRyxJQUFJLENBQUM7SUFDbkIsQ0FBQztJQUVELDhCQUFLLEdBQUw7UUFDSSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUMsR0FBRyxDQUFDLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztJQUMxRSxDQUFDO0lBRUQsbUNBQVUsR0FBVjtRQUVJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNaLElBQUcsSUFBSSxDQUFDLFNBQVMsRUFDakI7WUFDSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7U0FDcEM7SUFDTCxDQUFDO0lBRUQsNkJBQUksR0FBSixVQUFLLE9BQU8sRUFBQyxJQUFTLEVBQUMsS0FBWSxFQUFDLFFBQWUsRUFBQyxNQUFhO1FBQXBELHFCQUFBLEVBQUEsV0FBUztRQUFDLHNCQUFBLEVBQUEsWUFBWTtRQUFDLHlCQUFBLEVBQUEsZUFBZTtRQUFDLHVCQUFBLEVBQUEsYUFBYTtRQUU3RCxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQTtRQUNuQyxJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQTtRQUN6QixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQTtRQUNyQixJQUFHLElBQUk7WUFDSCxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDbkMsSUFBRyxPQUFPLEdBQUcsQ0FBQyxFQUNkO1lBQ0ksSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDakMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFDLE9BQU8sQ0FBQyxDQUFBO1NBQzdDO0lBQ0wsQ0FBQztJQUVELDZCQUFJLEdBQUo7UUFFSSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDaEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN2QyxDQUFDO0lBdEREO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7a0RBQ0k7SUFIUCxjQUFjO1FBRGxDLE9BQU87T0FDYSxjQUFjLENBNERsQztJQUFELHFCQUFDO0NBNURELEFBNERDLENBNUQyQyxFQUFFLENBQUMsU0FBUyxHQTREdkQ7a0JBNURvQixjQUFjIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbmV4cG9ydCB2YXIgTG9hZGluZzpMb2FkaW5nTWFuYWdlciA9IG51bGw7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb2FkaW5nTWFuYWdlciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cbiAgICBAcHJvcGVydHkoY2MuUHJlZmFiKVxuICAgIHByZWZhYjpjYy5QcmVmYWIgPSBudWxsO1xuXG4gICAgbG9hZGluZ05vZGU6Y2MuTm9kZSA9IG51bGw7XG4gICAgbG9hZGluZ1Nwcml0ZTpjYy5TcHJpdGUgPSBudWxsO1xuICAgIGxvYWRpbmdUZXh0OmNjLkxhYmVsID0gbnVsbDtcbiAgICBibG9ja0V2ZW50Q29tcDpjYy5CbG9ja0lucHV0RXZlbnRzID0gbnVsbDtcblxuICAgIF9jYWxsYmFjazphbnkgPSBudWxsO1xuICAgIF90YXJnZXQ6YW55ID0gbnVsbDtcbiAgICBvbkxvYWQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5sb2FkaW5nTm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMucHJlZmFiKTtcbiAgICAgICAgdGhpcy5ibG9ja0V2ZW50Q29tcCA9IHRoaXMubG9hZGluZ05vZGUuZ2V0Q29tcG9uZW50KGNjLkJsb2NrSW5wdXRFdmVudHMpO1xuICAgICAgICB0aGlzLmxvYWRpbmdOb2RlLnBhcmVudCA9IHRoaXMubm9kZTtcbiAgICAgICAgdGhpcy5sb2FkaW5nTm9kZS56SW5kZXggPSA5OTk5O1xuICAgICAgICB0aGlzLmxvYWRpbmdTcHJpdGUgPSB0aGlzLmxvYWRpbmdOb2RlLmdldENvbXBvbmVudEluQ2hpbGRyZW4oY2MuU3ByaXRlKTtcbiAgICAgICAgdGhpcy5sb2FkaW5nVGV4dCA9IHRoaXMubG9hZGluZ05vZGUuZ2V0Q29tcG9uZW50SW5DaGlsZHJlbihjYy5MYWJlbCk7XG4gICAgICAgIHRoaXMuaGlkZSgpO1xuICAgICAgICBMb2FkaW5nID0gdGhpcztcbiAgICB9XG5cbiAgICBzdGFydCAoKSB7XG4gICAgICAgIHRoaXMubG9hZGluZ1Nwcml0ZS5ub2RlLnJ1bkFjdGlvbihjYy5yb3RhdGVCeSg0LDM2MCkucmVwZWF0Rm9yZXZlcigpKTtcbiAgICB9XG5cbiAgICBkZWFseUNsb3NlKClcbiAgICB7XG4gICAgICAgIHRoaXMuaGlkZSgpO1xuICAgICAgICBpZih0aGlzLl9jYWxsYmFjaylcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fY2FsbGJhY2suY2FsbCh0aGlzLl90YXJnZXQpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzaG93KHRpbWVvdXQsdGV4dD1udWxsLG1vZGFsID0gdHJ1ZSxjYWxsYmFjayA9IG51bGwsdGFyZ2V0ID0gbnVsbClcbiAgICB7XG4gICAgICAgIHRoaXMubG9hZGluZ05vZGUuYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5sb2FkaW5nTm9kZS5yZXN1bWVBbGxBY3Rpb25zKCk7XG4gICAgICAgIHRoaXMuYmxvY2tFdmVudENvbXAuZW5hYmxlZCA9IG1vZGFsXG4gICAgICAgIHRoaXMuX2NhbGxiYWNrID0gY2FsbGJhY2sgXG4gICAgICAgIHRoaXMuX3RhcmdldCA9IHRhcmdldFxuICAgICAgICBpZih0ZXh0KVxuICAgICAgICAgICAgdGhpcy5sb2FkaW5nVGV4dC5zdHJpbmcgPSB0ZXh0O1xuICAgICAgICBpZih0aW1lb3V0ID4gMClcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy51bnNjaGVkdWxlKHRoaXMuZGVhbHlDbG9zZSk7XG4gICAgICAgICAgICB0aGlzLnNjaGVkdWxlT25jZSh0aGlzLmRlYWx5Q2xvc2UsdGltZW91dClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGhpZGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5sb2FkaW5nTm9kZS5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5sb2FkaW5nTm9kZS5wYXVzZUFsbEFjdGlvbnMoKTtcbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/misc/ClickAudio.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5ee8a8X6jFF5qtYOWlGoNww', 'ClickAudio');
// framework/plugin_boosts/misc/ClickAudio.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Device_1 = require("../gamesys/Device");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ClickAudio = /** @class */ (function (_super) {
    __extends(ClickAudio, _super);
    function ClickAudio() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.audio = null;
        _this.elastic = false;
        _this._oldScale = 1;
        return _this;
        // update (dt) {}
    }
    ClickAudio.prototype.anim2 = function () {
        var act = cc.scaleBy(0.6, 0.9, 0.9).easing(cc.easeElasticOut(0.3));
        this.node.runAction(act);
    };
    ClickAudio.prototype.anim2back = function () {
        var act = cc.scaleTo(0.6, this._oldScale, this._oldScale).easing(cc.easeElasticOut(0.3));
        this.node.runAction(act);
    };
    ClickAudio.prototype.onLoad = function () {
        var _this = this;
        if (this.elastic) {
            var btn = this.getComponent(cc.Button);
            btn.transition = cc.Button.Transition.COLOR;
            btn.normalColor = cc.Color.WHITE;
            btn.pressedColor = new cc.Color(200, 200, 200);
            this._oldScale = this.node.scale;
        }
        this.node.on('touchstart', function (_) {
            //cc.EaseElasticOut:create(
            // this.node.stopAllActions();
            _this.elastic && _this.anim2();
        }, this.node);
        this.node.on("touchend", function (_) {
            Device_1.default.playEffect(_this.audio, false);
            _this.elastic && _this.anim2back();
        });
        this.node.on("touchcancel", function (_) {
            _this.elastic && _this.anim2back();
        });
    };
    __decorate([
        property({ type: cc.AudioClip })
    ], ClickAudio.prototype, "audio", void 0);
    __decorate([
        property
    ], ClickAudio.prototype, "elastic", void 0);
    ClickAudio = __decorate([
        ccclass
    ], ClickAudio);
    return ClickAudio;
}(cc.Component));
exports.default = ClickAudio;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxtaXNjXFxDbGlja0F1ZGlvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw0Q0FBdUM7QUFFakMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBd0MsOEJBQVk7SUFBcEQ7UUFBQSxxRUFnREM7UUE3Q0csV0FBSyxHQUFpQixJQUFJLENBQUM7UUFHM0IsYUFBTyxHQUFXLEtBQUssQ0FBQztRQUV4QixlQUFTLEdBQVUsQ0FBQyxDQUFDOztRQXVDckIsaUJBQWlCO0lBQ3JCLENBQUM7SUF0Q0csMEJBQUssR0FBTDtRQUVJLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2xFLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFRCw4QkFBUyxHQUFUO1FBRUksSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUN4RixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRUQsMkJBQU0sR0FBTjtRQUFBLGlCQXVCQztRQXRCRyxJQUFHLElBQUksQ0FBQyxPQUFPLEVBQ2Y7WUFDSSxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQTtZQUN0QyxHQUFHLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQztZQUM1QyxHQUFHLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO1lBQ2pDLEdBQUcsQ0FBQyxZQUFZLEdBQUcsSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxDQUFDLENBQUM7WUFDN0MsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztTQUNwQztRQUVELElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxVQUFBLENBQUM7WUFDeEIsMkJBQTJCO1lBQzNCLDhCQUE4QjtZQUM5QixLQUFJLENBQUMsT0FBTyxJQUFJLEtBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNqQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRWQsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFDLFVBQUEsQ0FBQztZQUNyQixnQkFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFJLENBQUMsS0FBSyxFQUFDLEtBQUssQ0FBQyxDQUFBO1lBQ25DLEtBQUksQ0FBQyxPQUFPLElBQUksS0FBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3JDLENBQUMsQ0FBQyxDQUFBO1FBQ0YsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFDLFVBQUEsQ0FBQztZQUN4QixLQUFJLENBQUMsT0FBTyxJQUFJLEtBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNyQyxDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUExQ0Q7UUFEQyxRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBQyxDQUFDOzZDQUNKO0lBRzNCO1FBREMsUUFBUTsrQ0FDZTtJQU5QLFVBQVU7UUFEOUIsT0FBTztPQUNhLFVBQVUsQ0FnRDlCO0lBQUQsaUJBQUM7Q0FoREQsQUFnREMsQ0FoRHVDLEVBQUUsQ0FBQyxTQUFTLEdBZ0RuRDtrQkFoRG9CLFVBQVUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGV2aWNlIGZyb20gXCIuLi9nYW1lc3lzL0RldmljZVwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENsaWNrQXVkaW8gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgQHByb3BlcnR5KHt0eXBlOiBjYy5BdWRpb0NsaXB9KVxuICAgIGF1ZGlvIDpjYy5BdWRpb0NsaXAgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5XG4gICAgZWxhc3RpYzpib29sZWFuID0gZmFsc2U7XG5cbiAgICBfb2xkU2NhbGU6bnVtYmVyID0gMTtcblxuICAgIGFuaW0yKClcbiAgICB7XG4gICAgICAgIGxldCBhY3QgPSBjYy5zY2FsZUJ5KDAuNiwgMC45LDAuOSkuZWFzaW5nKGNjLmVhc2VFbGFzdGljT3V0KDAuMykpO1xuICAgICAgICB0aGlzLm5vZGUucnVuQWN0aW9uKGFjdCk7XG4gICAgfVxuICAgIFxuICAgIGFuaW0yYmFjaygpXG4gICAge1xuICAgICAgICBsZXQgYWN0ID0gY2Muc2NhbGVUbygwLjYsIHRoaXMuX29sZFNjYWxlLHRoaXMuX29sZFNjYWxlKS5lYXNpbmcoY2MuZWFzZUVsYXN0aWNPdXQoMC4zKSk7XG4gICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oYWN0KTtcbiAgICB9XG5cbiAgICBvbkxvYWQgKCkge1xuICAgICAgICBpZih0aGlzLmVsYXN0aWMpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBidG4gPSB0aGlzLmdldENvbXBvbmVudChjYy5CdXR0b24pXG4gICAgICAgICAgICBidG4udHJhbnNpdGlvbiA9IGNjLkJ1dHRvbi5UcmFuc2l0aW9uLkNPTE9SO1xuICAgICAgICAgICAgYnRuLm5vcm1hbENvbG9yID0gY2MuQ29sb3IuV0hJVEU7XG4gICAgICAgICAgICBidG4ucHJlc3NlZENvbG9yID0gbmV3IGNjLkNvbG9yKDIwMCwyMDAsMjAwKTtcbiAgICAgICAgICAgIHRoaXMuX29sZFNjYWxlID0gdGhpcy5ub2RlLnNjYWxlO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB0aGlzLm5vZGUub24oJ3RvdWNoc3RhcnQnLCBfPT57XG4gICAgICAgICAgICAvL2NjLkVhc2VFbGFzdGljT3V0OmNyZWF0ZShcbiAgICAgICAgICAgIC8vIHRoaXMubm9kZS5zdG9wQWxsQWN0aW9ucygpO1xuICAgICAgICAgICAgdGhpcy5lbGFzdGljICYmIHRoaXMuYW5pbTIoKTtcbiAgICAgICAgfSwgdGhpcy5ub2RlKTtcblxuICAgICAgICB0aGlzLm5vZGUub24oXCJ0b3VjaGVuZFwiLF89PntcbiAgICAgICAgICAgIERldmljZS5wbGF5RWZmZWN0KHRoaXMuYXVkaW8sZmFsc2UpXG4gICAgICAgICAgICB0aGlzLmVsYXN0aWMgJiYgdGhpcy5hbmltMmJhY2soKTtcbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy5ub2RlLm9uKFwidG91Y2hjYW5jZWxcIixfPT57XG4gICAgICAgICAgICB0aGlzLmVsYXN0aWMgJiYgdGhpcy5hbmltMmJhY2soKTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/DCSprite.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '82b09vMdyFCOb0NEdBTtZHy', 'DCSprite');
// framework/plugin_boosts/ui/DCSprite.ts

Object.defineProperty(exports, "__esModule", { value: true });
var DCUI_1 = require("./DCUI");
var SpriteFrameCache_1 = require("../misc/SpriteFrameCache");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, requireComponent = _a.requireComponent;
var DCSprite = /** @class */ (function (_super) {
    __extends(DCSprite, _super);
    function DCSprite() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DCSprite.prototype.onLoad = function () {
        this.sprite = this.getComponent(cc.Sprite);
    };
    DCSprite.prototype.refreshSpriteFrame = function (v) {
        var _this = this;
        // this.sprite.spriteFrame = v;
        var spriteframe = SpriteFrameCache_1.default.instance.getSpriteFrame(v).then(function (sf) {
            _this.sprite.spriteFrame = sf;
        }).catch(function (_) { console.log("request imageUrl error :" + v); });
    };
    DCSprite.prototype.onValueChanged = function (v) {
        this.refreshSpriteFrame(v);
    };
    DCSprite = __decorate([
        ccclass,
        requireComponent(cc.Sprite)
    ], DCSprite);
    return DCSprite;
}(DCUI_1.default));
exports.default = DCSprite;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1aVxcRENTcHJpdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLCtCQUEwQjtBQUMxQiw2REFBd0Q7QUFFbEQsSUFBQSxLQUF1QyxFQUFFLENBQUMsVUFBVSxFQUFuRCxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQUEsRUFBQyxnQkFBZ0Isc0JBQWlCLENBQUM7QUFLM0Q7SUFBc0MsNEJBQUk7SUFBMUM7O0lBc0JBLENBQUM7SUFuQkcseUJBQU0sR0FBTjtRQUVJLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELHFDQUFrQixHQUFsQixVQUFtQixDQUFDO1FBQXBCLGlCQU1DO1FBSkcsK0JBQStCO1FBQy9CLElBQUksV0FBVyxHQUFHLDBCQUFnQixDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUEsRUFBRTtZQUNqRSxLQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUM7UUFDakMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQUEsQ0FBQyxJQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsMEJBQTBCLEdBQUcsQ0FBQyxDQUFDLENBQUEsQ0FBQSxDQUFDLENBQUMsQ0FBQTtJQUM5RCxDQUFDO0lBRUQsaUNBQWMsR0FBZCxVQUFlLENBQUM7UUFFWixJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQW5CZ0IsUUFBUTtRQUY1QixPQUFPO1FBQ1AsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztPQUNQLFFBQVEsQ0FzQjVCO0lBQUQsZUFBQztDQXRCRCxBQXNCQyxDQXRCcUMsY0FBSSxHQXNCekM7a0JBdEJvQixRQUFRIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERDVUkgZnJvbSBcIi4vRENVSVwiO1xuaW1wb3J0IFNwcml0ZUZyYW1lQ2FjaGUgZnJvbSBcIi4uL21pc2MvU3ByaXRlRnJhbWVDYWNoZVwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHkscmVxdWlyZUNvbXBvbmVudH0gPSBjYy5fZGVjb3JhdG9yO1xuXG5cbkBjY2NsYXNzXG5AcmVxdWlyZUNvbXBvbmVudChjYy5TcHJpdGUpXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEQ1Nwcml0ZSBleHRlbmRzIERDVUkge1xuXG4gICAgc3ByaXRlOmNjLlNwcml0ZTtcbiAgICBvbkxvYWQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5zcHJpdGUgPSB0aGlzLmdldENvbXBvbmVudChjYy5TcHJpdGUpO1xuICAgIH1cblxuICAgIHJlZnJlc2hTcHJpdGVGcmFtZSh2KVxuICAgIHtcbiAgICAgICAgLy8gdGhpcy5zcHJpdGUuc3ByaXRlRnJhbWUgPSB2O1xuICAgICAgICBsZXQgc3ByaXRlZnJhbWUgPSBTcHJpdGVGcmFtZUNhY2hlLmluc3RhbmNlLmdldFNwcml0ZUZyYW1lKHYpLnRoZW4oc2Y9PntcbiAgICAgICAgICAgIHRoaXMuc3ByaXRlLnNwcml0ZUZyYW1lID0gc2Y7XG4gICAgICAgIH0pLmNhdGNoKF89Pntjb25zb2xlLmxvZyhcInJlcXVlc3QgaW1hZ2VVcmwgZXJyb3IgOlwiICsgdil9KVxuICAgIH1cblxuICAgIG9uVmFsdWVDaGFuZ2VkKHYpXG4gICAge1xuICAgICAgICB0aGlzLnJlZnJlc2hTcHJpdGVGcmFtZSh2KTtcbiAgICB9XG4gICBcbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/misc/SpriteFrameCache.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8756by7qCVIPpJ06/9qmobv', 'SpriteFrameCache');
// framework/plugin_boosts/misc/SpriteFrameCache.ts

Object.defineProperty(exports, "__esModule", { value: true });
var SpriteFrameCache = /** @class */ (function () {
    function SpriteFrameCache() {
        this.frames = {};
    }
    Object.defineProperty(SpriteFrameCache, "instance", {
        get: function () {
            if (this._instance == null) {
                this._instance = new SpriteFrameCache();
            }
            return this._instance;
        },
        enumerable: false,
        configurable: true
    });
    SpriteFrameCache.prototype.getSpriteFrame = function (url) {
        return __awaiter(this, void 0, Promise, function () {
            var frame;
            var _this = this;
            return __generator(this, function (_a) {
                frame = this.frames[url];
                if (frame == null) {
                    return [2 /*return*/, new Promise(function (resolve, reject) {
                            // console.log("[SpriteFrameCache] request image:" + url)
                            if (!url || url == "") {
                                reject("empty-url");
                                return;
                            }
                            if (url.indexOf("http") == -1) {
                                cc.loader.loadRes(url, cc.SpriteFrame, function (error, frame) {
                                    if (error) {
                                        reject();
                                        return;
                                    }
                                    if (frame) {
                                        _this.addSpriteFrame(url, frame);
                                        resolve(frame);
                                    }
                                    else {
                                        reject();
                                    }
                                });
                            }
                            else {
                                cc.loader.load({ url: url, type: 'png' }, function (error, texture) {
                                    if (error) {
                                        reject();
                                        return;
                                    }
                                    if (texture) {
                                        frame = new cc.SpriteFrame(texture);
                                        _this.addSpriteFrame(url, frame);
                                        resolve(frame);
                                    }
                                    else {
                                        reject();
                                    }
                                });
                            }
                        })];
                }
                return [2 /*return*/, new Promise(function (resolve, reject) { return resolve(frame); })];
            });
        });
    };
    SpriteFrameCache.prototype.addSpriteFrame = function (url, frame) {
        this.frames[url] = frame;
        return frame;
    };
    SpriteFrameCache.prototype.clear = function () {
        for (var k in this.frames) {
            var frame = this.frames[k];
            cc.loader.release(frame);
            delete this.frames[k];
        }
    };
    SpriteFrameCache.prototype.remove = function (k) {
        var frame = this.frames[k];
        cc.loader.release(frame);
        delete this.frames[k];
    };
    return SpriteFrameCache;
}());
exports.default = SpriteFrameCache;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFxtaXNjXFxTcHJpdGVGcmFtZUNhY2hlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtJQUFBO1FBYVksV0FBTSxHQUFtQyxFQUFFLENBQUM7SUFrRXhELENBQUM7SUEzRUcsc0JBQVcsNEJBQVE7YUFBbkI7WUFFSSxJQUFHLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxFQUN6QjtnQkFDSSxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksZ0JBQWdCLEVBQUUsQ0FBQzthQUMzQztZQUNELE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUMxQixDQUFDOzs7T0FBQTtJQUdLLHlDQUFjLEdBQXBCLFVBQXFCLEdBQVU7dUNBQUUsT0FBTzs7OztnQkFFaEMsS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUE7Z0JBQzVCLElBQUcsS0FBSyxJQUFJLElBQUksRUFDaEI7b0JBQ0ksc0JBQU8sSUFBSSxPQUFPLENBQWlCLFVBQUMsT0FBTyxFQUFDLE1BQU07NEJBQzlDLHlEQUF5RDs0QkFDekQsSUFBRyxDQUFDLEdBQUcsSUFBRyxHQUFHLElBQUksRUFBRSxFQUFFO2dDQUNqQixNQUFNLENBQUMsV0FBVyxDQUFDLENBQUE7Z0NBQ25CLE9BQU87NkJBQ1Y7NEJBQ0QsSUFBSyxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUM5QjtnQ0FDSSxFQUFFLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUMsRUFBRSxDQUFDLFdBQVcsRUFBQyxVQUFDLEtBQUssRUFBQyxLQUFLO29DQUM3QyxJQUFHLEtBQUssRUFBQzt3Q0FBQyxNQUFNLEVBQUUsQ0FBQzt3Q0FBQSxPQUFNO3FDQUFDO29DQUMxQixJQUFHLEtBQUssRUFDUjt3Q0FDSSxLQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQTt3Q0FDL0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFBO3FDQUNqQjt5Q0FBSTt3Q0FDRCxNQUFNLEVBQUUsQ0FBQTtxQ0FDWDtnQ0FDTCxDQUFDLENBQUMsQ0FBQTs2QkFDTDtpQ0FBSTtnQ0FDRCxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBQyxFQUFFLFVBQUMsS0FBSyxFQUFFLE9BQU87b0NBQ25ELElBQUcsS0FBSyxFQUFDO3dDQUFDLE1BQU0sRUFBRSxDQUFDO3dDQUFBLE9BQU07cUNBQUM7b0NBQzFCLElBQUcsT0FBTyxFQUNWO3dDQUNJLEtBQUssR0FBRyxJQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7d0NBQ3BDLEtBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFBO3dDQUMvQixPQUFPLENBQUMsS0FBSyxDQUFDLENBQUE7cUNBQ2pCO3lDQUFJO3dDQUNELE1BQU0sRUFBRSxDQUFBO3FDQUNYO2dDQUNMLENBQUMsQ0FBQyxDQUFDOzZCQUNOO3dCQUNMLENBQUMsQ0FBQyxFQUFBO2lCQUNMO2dCQUNELHNCQUFPLElBQUksT0FBTyxDQUFpQixVQUFDLE9BQU8sRUFBQyxNQUFNLElBQUcsT0FBQSxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQWQsQ0FBYyxDQUFDLEVBQUM7OztLQUV4RTtJQUVELHlDQUFjLEdBQWQsVUFBZSxHQUFXLEVBQUUsS0FBVTtRQUNsQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUN6QixPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBR0QsZ0NBQUssR0FBTDtRQUVJLEtBQUssSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLE1BQU0sRUFDekI7WUFDSSxJQUFJLEtBQUssR0FBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFBO1lBQzNCLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3pCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQTtTQUN4QjtJQUNMLENBQUM7SUFFRCxpQ0FBTSxHQUFOLFVBQU8sQ0FBQztRQUVKLElBQUksS0FBSyxHQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFDM0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQ3pCLENBQUM7SUFFTCx1QkFBQztBQUFELENBL0VBLEFBK0VDLElBQUEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBTcHJpdGVGcmFtZUNhY2hlXG57XG4gICAgc3RhdGljIF9pbnN0YW5jZTpTcHJpdGVGcmFtZUNhY2hlO1xuXG4gICAgc3RhdGljIGdldCBpbnN0YW5jZSgpXG4gICAge1xuICAgICAgICBpZih0aGlzLl9pbnN0YW5jZSA9PSBudWxsKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG5ldyBTcHJpdGVGcmFtZUNhY2hlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xuICAgIH1cblxuICAgIHByaXZhdGUgZnJhbWVzOntbaW5kZXg6c3RyaW5nXTpjYy5TcHJpdGVGcmFtZX0gPSB7fTtcbiAgICBhc3luYyBnZXRTcHJpdGVGcmFtZSh1cmw6c3RyaW5nKTpQcm9taXNlPGNjLlNwcml0ZUZyYW1lPlxuICAgIHtcbiAgICAgICAgbGV0IGZyYW1lID0gdGhpcy5mcmFtZXNbdXJsXVxuICAgICAgICBpZihmcmFtZSA9PSBudWxsKVxuICAgICAgICB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2U8Y2MuU3ByaXRlRnJhbWU+KChyZXNvbHZlLHJlamVjdCk9PntcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIltTcHJpdGVGcmFtZUNhY2hlXSByZXF1ZXN0IGltYWdlOlwiICsgdXJsKVxuICAgICAgICAgICAgICAgIGlmKCF1cmwgfHx1cmwgPT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoXCJlbXB0eS11cmxcIilcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIHVybC5pbmRleE9mKFwiaHR0cFwiKSA9PSAtMSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNjLmxvYWRlci5sb2FkUmVzKHVybCxjYy5TcHJpdGVGcmFtZSwoZXJyb3IsZnJhbWUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihlcnJvcil7cmVqZWN0KCk7cmV0dXJufVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoZnJhbWUpXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRTcHJpdGVGcmFtZSh1cmwgLGZyYW1lKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZnJhbWUpXG4gICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICAgICBjYy5sb2FkZXIubG9hZCh7dXJsOiB1cmwsIHR5cGU6ICdwbmcnfSwgKGVycm9yLCB0ZXh0dXJlKSA9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGVycm9yKXtyZWplY3QoKTtyZXR1cm59XG4gICAgICAgICAgICAgICAgICAgICAgICBpZih0ZXh0dXJlKVxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyYW1lID0gbmV3IGNjLlNwcml0ZUZyYW1lKHRleHR1cmUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkU3ByaXRlRnJhbWUodXJsICxmcmFtZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGZyYW1lKVxuICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KClcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2U8Y2MuU3ByaXRlRnJhbWU+KChyZXNvbHZlLHJlamVjdCk9PnJlc29sdmUoZnJhbWUpKTtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgYWRkU3ByaXRlRnJhbWUodXJsOiBzdHJpbmcsIGZyYW1lOiBhbnkpOiBhbnkge1xuICAgICAgICB0aGlzLmZyYW1lc1t1cmxdID0gZnJhbWU7XG4gICAgICAgIHJldHVybiBmcmFtZTtcbiAgICB9XG5cblxuICAgIGNsZWFyKClcbiAgICB7XG4gICAgICAgIGZvciAodmFyIGsgaW4gdGhpcy5mcmFtZXMpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBmcmFtZSA9ICB0aGlzLmZyYW1lc1trXVxuICAgICAgICAgICAgY2MubG9hZGVyLnJlbGVhc2UoZnJhbWUpO1xuICAgICAgICAgICAgZGVsZXRlIHRoaXMuZnJhbWVzW2tdXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW1vdmUoaylcbiAgICB7XG4gICAgICAgIGxldCBmcmFtZSA9ICB0aGlzLmZyYW1lc1trXVxuICAgICAgICBjYy5sb2FkZXIucmVsZWFzZShmcmFtZSk7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmZyYW1lc1trXVxuICAgIH1cblxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/ToastComponent.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c4ad6Rf0DpFeay8D3aly6IU', 'ToastComponent');
// framework/plugin_boosts/ui/ToastComponent.ts

Object.defineProperty(exports, "__esModule", { value: true });
var UIFunctions_1 = require("./UIFunctions");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ToastComponent = /** @class */ (function (_super) {
    __extends(ToastComponent, _super);
    function ToastComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.label = null;
        return _this;
        // update (dt) {}
    }
    ToastComponent.prototype.onLoad = function () {
        this.animations = UIFunctions_1.default.getChildrenAnimations(this.node);
    };
    ToastComponent.prototype.start = function () {
    };
    ToastComponent.prototype.hide = function (callback) {
        this.node.active = true;
        if (!UIFunctions_1.default.doHideAnimations(this.animations, callback)) {
            this.node.active = false;
            // this.node.removeFromParent();
            if (callback) {
                callback(this);
            }
        }
    };
    ToastComponent.prototype.show = function (text) {
        this.label.string = text;
        UIFunctions_1.default.doShowAnimations(this.animations);
    };
    __decorate([
        property(cc.Label)
    ], ToastComponent.prototype, "label", void 0);
    ToastComponent = __decorate([
        ccclass
    ], ToastComponent);
    return ToastComponent;
}(cc.Component));
exports.default = ToastComponent;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1aVxcVG9hc3RDb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDZDQUF3QztBQUVsQyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUE0QyxrQ0FBWTtJQUF4RDtRQUFBLHFFQWlDQztRQS9CRyxXQUFLLEdBQWEsSUFBSSxDQUFDOztRQThCdkIsaUJBQWlCO0lBQ3JCLENBQUM7SUExQkcsK0JBQU0sR0FBTjtRQUVJLElBQUksQ0FBQyxVQUFVLEdBQUcscUJBQVcsQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbkUsQ0FBQztJQUVELDhCQUFLLEdBQUw7SUFFQSxDQUFDO0lBRUQsNkJBQUksR0FBSixVQUFLLFFBQVE7UUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDeEIsSUFBRyxDQUFDLHFCQUFXLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBQyxRQUFRLENBQUMsRUFDMUQ7WUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7WUFDekIsZ0NBQWdDO1lBQ2hDLElBQUcsUUFBUSxFQUNYO2dCQUNJLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUNsQjtTQUNKO0lBQ0wsQ0FBQztJQUNELDZCQUFJLEdBQUosVUFBSyxJQUFTO1FBQ1YsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLHFCQUFXLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUE3QkQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQztpREFDSTtJQUZOLGNBQWM7UUFEbEMsT0FBTztPQUNhLGNBQWMsQ0FpQ2xDO0lBQUQscUJBQUM7Q0FqQ0QsQUFpQ0MsQ0FqQzJDLEVBQUUsQ0FBQyxTQUFTLEdBaUN2RDtrQkFqQ29CLGNBQWMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVUlGdW5jdGlvbnMgZnJvbSBcIi4vVUlGdW5jdGlvbnNcIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUb2FzdENvbXBvbmVudCBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxuICAgIGxhYmVsOiBjYy5MYWJlbCA9IG51bGw7XG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XG4gICAgLy8gb25Mb2FkICgpIHt9XG4gICAgYW5pbWF0aW9uczpjYy5BbmltYXRpb25bXVxuXG4gICAgb25Mb2FkKClcbiAgICB7XG4gICAgICAgIHRoaXMuYW5pbWF0aW9ucyA9IFVJRnVuY3Rpb25zLmdldENoaWxkcmVuQW5pbWF0aW9ucyh0aGlzLm5vZGUpO1xuICAgIH1cblxuICAgIHN0YXJ0ICgpIHtcblxuICAgIH1cblxuICAgIGhpZGUoY2FsbGJhY2spOiBhbnkge1xuICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgaWYoIVVJRnVuY3Rpb25zLmRvSGlkZUFuaW1hdGlvbnModGhpcy5hbmltYXRpb25zLGNhbGxiYWNrKSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgLy8gdGhpcy5ub2RlLnJlbW92ZUZyb21QYXJlbnQoKTtcbiAgICAgICAgICAgIGlmKGNhbGxiYWNrKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKHRoaXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHNob3codGV4dDogYW55KTogYW55IHtcbiAgICAgICAgdGhpcy5sYWJlbC5zdHJpbmcgPSB0ZXh0O1xuICAgICAgICBVSUZ1bmN0aW9ucy5kb1Nob3dBbmltYXRpb25zKHRoaXMuYW5pbWF0aW9ucyk7XG4gICAgfVxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/MessageBoxComponent.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5d14c63Zc1PupexE+EkksQp', 'MessageBoxComponent');
// framework/plugin_boosts/ui/MessageBoxComponent.ts

Object.defineProperty(exports, "__esModule", { value: true });
var View_1 = require("./View");
var MessageBoxManager_1 = require("./MessageBoxManager");
// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, executeInEditMode = _a.executeInEditMode, playOnFocus = _a.playOnFocus;
var MessageBoxComponent = /** @class */ (function (_super) {
    __extends(MessageBoxComponent, _super);
    function MessageBoxComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.node_title = null;
        _this.node_content = null;
        _this.btn_ok = null;
        _this.btn_cancel = null;
        _this.messageBoxCallback = null;
        _this.label_ok = null;
        _this.label_cancel = null;
        _this.group_ok_cancel = null;
        _this.group_ok = null;
        return _this;
        // update (dt) {}
    }
    MessageBoxComponent.prototype.onLoad = function () {
        this.label_ok = this.btn_ok.getChildByName("Label").getComponent(cc.Label);
        this.label_cancel = this.btn_cancel.getChildByName("Label").getComponent(cc.Label);
        this.getComponent(View_1.default).setDelegate(this);
        this.bgAnimation = this.node.getChildByName("bg").getComponent(cc.Animation);
    };
    MessageBoxComponent.prototype.onHidden = function () {
    };
    MessageBoxComponent.prototype.onShown = function (params) {
        this.node_title.string = params.title;
        this.node_content.string = params.content;
        this.messageBoxCallback = params.callback;
        if (params.extra) {
            this.label_ok.string = params.extra.okText;
            this.label_cancel.string = params.extra.cancelText;
        }
        if (params.buttons == MessageBoxManager_1.MessageBox.OK_CANCEL) {
            //show two 
            this.group_ok_cancel.active = true;
            this.group_ok.active = false;
        }
        else {
            //show one 
            this.group_ok.active = true;
            this.group_ok_cancel.active = false;
        }
    };
    MessageBoxComponent.prototype.start = function () {
    };
    MessageBoxComponent.prototype.on_btn_ok_clicked = function () {
        if (this.messageBoxCallback)
            this.messageBoxCallback.call(null, MessageBoxManager_1.MessageBox.OK);
        this.getComponent(View_1.default).hide();
    };
    MessageBoxComponent.prototype.on_btn_cancel_clicked = function () {
        if (this.messageBoxCallback)
            this.messageBoxCallback.call(null, MessageBoxManager_1.MessageBox.CANCEL);
        this.getComponent(View_1.default).hide();
    };
    __decorate([
        property(cc.Label)
    ], MessageBoxComponent.prototype, "node_title", void 0);
    __decorate([
        property(cc.Label)
    ], MessageBoxComponent.prototype, "node_content", void 0);
    __decorate([
        property(cc.Node)
    ], MessageBoxComponent.prototype, "btn_ok", void 0);
    __decorate([
        property(cc.Node)
    ], MessageBoxComponent.prototype, "btn_cancel", void 0);
    __decorate([
        property(cc.Node)
    ], MessageBoxComponent.prototype, "group_ok_cancel", void 0);
    __decorate([
        property(cc.Node)
    ], MessageBoxComponent.prototype, "group_ok", void 0);
    MessageBoxComponent = __decorate([
        ccclass
    ], MessageBoxComponent);
    return MessageBoxComponent;
}(cc.Component));
exports.default = MessageBoxComponent;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1aVxcTWVzc2FnZUJveENvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsK0JBQTBCO0FBQzFCLHlEQUErQztBQUUvQyxvQkFBb0I7QUFDcEIsaUZBQWlGO0FBQ2pGLHlGQUF5RjtBQUN6RixtQkFBbUI7QUFDbkIsMkZBQTJGO0FBQzNGLG1HQUFtRztBQUNuRyw4QkFBOEI7QUFDOUIsMkZBQTJGO0FBQzNGLG1HQUFtRztBQUU3RixJQUFBLEtBQW9ELEVBQUUsQ0FBQyxVQUFVLEVBQWhFLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBQSxFQUFDLGlCQUFpQix1QkFBQSxFQUFDLFdBQVcsaUJBQWlCLENBQUM7QUFHeEU7SUFBaUQsdUNBQVk7SUFBN0Q7UUFBQSxxRUFnRkM7UUE3RUcsZ0JBQVUsR0FBWSxJQUFJLENBQUM7UUFFM0Isa0JBQVksR0FBWSxJQUFJLENBQUM7UUFHN0IsWUFBTSxHQUFXLElBQUksQ0FBQztRQUV0QixnQkFBVSxHQUFXLElBQUksQ0FBQztRQUUxQix3QkFBa0IsR0FBWSxJQUFJLENBQUM7UUFFbkMsY0FBUSxHQUFZLElBQUksQ0FBQztRQUN6QixrQkFBWSxHQUFZLElBQUksQ0FBQztRQUc3QixxQkFBZSxHQUFZLElBQUksQ0FBQztRQUdoQyxjQUFRLEdBQVcsSUFBSSxDQUFDOztRQTBEeEIsaUJBQWlCO0lBQ3JCLENBQUM7SUF4REcsb0NBQU0sR0FBTjtRQUNJLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUMxRSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDbEYsSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFJLENBQUMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ2pGLENBQUM7SUFFRCxzQ0FBUSxHQUFSO0lBRUEsQ0FBQztJQUVELHFDQUFPLEdBQVAsVUFBUSxNQUFNO1FBRVYsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUN0QyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDO1FBQzFDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQzFDLElBQUcsTUFBTSxDQUFDLEtBQUssRUFDZjtZQUNJLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFBO1lBQzFDLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFBO1NBQ3JEO1FBQ0QsSUFBSyxNQUFNLENBQUMsT0FBTyxJQUFHLDhCQUFVLENBQUMsU0FBUyxFQUMxQztZQUNJLFdBQVc7WUFDWCxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7WUFDbkMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1NBQ2hDO2FBQUk7WUFDRCxXQUFXO1lBQ1gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1lBQzVCLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztTQUN2QztJQUNMLENBQUM7SUFFRCxtQ0FBSyxHQUFMO0lBRUEsQ0FBQztJQUlELCtDQUFpQixHQUFqQjtRQUVJLElBQUcsSUFBSSxDQUFDLGtCQUFrQjtZQUN0QixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksRUFBQyw4QkFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQ3BELElBQUksQ0FBQyxZQUFZLENBQUMsY0FBSSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDbkMsQ0FBQztJQUVELG1EQUFxQixHQUFyQjtRQUVJLElBQUcsSUFBSSxDQUFDLGtCQUFrQjtZQUN0QixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksRUFBQyw4QkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQ3hELElBQUksQ0FBQyxZQUFZLENBQUMsY0FBSSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDbkMsQ0FBQztJQXhFRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDOzJEQUNRO0lBRTNCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7NkRBQ1U7SUFHN0I7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzt1REFDSTtJQUV0QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDOzJEQUNRO0lBUTFCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7Z0VBQ2M7SUFHaEM7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzt5REFDTTtJQXJCUCxtQkFBbUI7UUFEdkMsT0FBTztPQUNhLG1CQUFtQixDQWdGdkM7SUFBRCwwQkFBQztDQWhGRCxBQWdGQyxDQWhGZ0QsRUFBRSxDQUFDLFNBQVMsR0FnRjVEO2tCQWhGb0IsbUJBQW1CIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZpZXcgZnJvbSBcIi4vVmlld1wiO1xuaW1wb3J0IHtNZXNzYWdlQm94fSBmcm9tIFwiLi9NZXNzYWdlQm94TWFuYWdlclwiO1xuXG4vLyBMZWFybiBUeXBlU2NyaXB0OlxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxuLy8gTGVhcm4gQXR0cmlidXRlOlxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXG4vLyBMZWFybiBsaWZlLWN5Y2xlIGNhbGxiYWNrczpcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHksZXhlY3V0ZUluRWRpdE1vZGUscGxheU9uRm9jdXN9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lc3NhZ2VCb3hDb21wb25lbnQgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxuICAgIG5vZGVfdGl0bGU6Y2MuTGFiZWwgPSBudWxsO1xuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcbiAgICBub2RlX2NvbnRlbnQ6Y2MuTGFiZWwgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXG4gICAgYnRuX29rOmNjLk5vZGUgPSBudWxsO1xuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxuICAgIGJ0bl9jYW5jZWw6Y2MuTm9kZSA9IG51bGw7XG5cbiAgICBtZXNzYWdlQm94Q2FsbGJhY2s6RnVuY3Rpb24gPSBudWxsO1xuXG4gICAgbGFiZWxfb2s6Y2MuTGFiZWwgPSBudWxsO1xuICAgIGxhYmVsX2NhbmNlbDpjYy5MYWJlbCA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcbiAgICBncm91cF9va19jYW5jZWwgOmNjLk5vZGUgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXG4gICAgZ3JvdXBfb2s6Y2MuTm9kZSA9IG51bGw7XG5cbiAgICBiZ0FuaW1hdGlvbjpjYy5BbmltYXRpb247XG4gICAgb25Mb2FkICgpIHtcbiAgICAgICAgdGhpcy5sYWJlbF9vayA9IHRoaXMuYnRuX29rLmdldENoaWxkQnlOYW1lKFwiTGFiZWxcIikuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKVxuICAgICAgICB0aGlzLmxhYmVsX2NhbmNlbCA9IHRoaXMuYnRuX2NhbmNlbC5nZXRDaGlsZEJ5TmFtZShcIkxhYmVsXCIpLmdldENvbXBvbmVudChjYy5MYWJlbClcbiAgICAgICAgdGhpcy5nZXRDb21wb25lbnQoVmlldykuc2V0RGVsZWdhdGUodGhpcyk7XG4gICAgICAgIHRoaXMuYmdBbmltYXRpb24gPSB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJiZ1wiKS5nZXRDb21wb25lbnQoY2MuQW5pbWF0aW9uKTtcbiAgICB9XG5cbiAgICBvbkhpZGRlbigpXG4gICAge1xuICAgIH1cblxuICAgIG9uU2hvd24ocGFyYW1zKVxuICAgIHtcbiAgICAgICAgdGhpcy5ub2RlX3RpdGxlLnN0cmluZyA9IHBhcmFtcy50aXRsZTtcbiAgICAgICAgdGhpcy5ub2RlX2NvbnRlbnQuc3RyaW5nID0gcGFyYW1zLmNvbnRlbnQ7XG4gICAgICAgIHRoaXMubWVzc2FnZUJveENhbGxiYWNrID0gcGFyYW1zLmNhbGxiYWNrO1xuICAgICAgICBpZihwYXJhbXMuZXh0cmEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMubGFiZWxfb2suc3RyaW5nID0gcGFyYW1zLmV4dHJhLm9rVGV4dFxuICAgICAgICAgICAgdGhpcy5sYWJlbF9jYW5jZWwuc3RyaW5nID0gcGFyYW1zLmV4dHJhLmNhbmNlbFRleHRcbiAgICAgICAgfVxuICAgICAgICBpZiAoIHBhcmFtcy5idXR0b25zPT0gTWVzc2FnZUJveC5PS19DQU5DRUwpXG4gICAgICAgIHtcbiAgICAgICAgICAgIC8vc2hvdyB0d28gXG4gICAgICAgICAgICB0aGlzLmdyb3VwX29rX2NhbmNlbC5hY3RpdmUgPSB0cnVlOyAgICAgXG4gICAgICAgICAgICB0aGlzLmdyb3VwX29rLmFjdGl2ZSA9IGZhbHNlOyAgICAgXG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgLy9zaG93IG9uZSBcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBfb2suYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBfb2tfY2FuY2VsLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc3RhcnQgKCkge1xuXG4gICAgfVxuXG5cblxuICAgIG9uX2J0bl9va19jbGlja2VkKClcbiAgICB7XG4gICAgICAgIGlmKHRoaXMubWVzc2FnZUJveENhbGxiYWNrKVxuICAgICAgICAgICAgdGhpcy5tZXNzYWdlQm94Q2FsbGJhY2suY2FsbChudWxsLE1lc3NhZ2VCb3guT0spXG4gICAgICAgIHRoaXMuZ2V0Q29tcG9uZW50KFZpZXcpLmhpZGUoKTtcbiAgICB9XG5cbiAgICBvbl9idG5fY2FuY2VsX2NsaWNrZWQoKVxuICAgIHtcbiAgICAgICAgaWYodGhpcy5tZXNzYWdlQm94Q2FsbGJhY2spXG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2VCb3hDYWxsYmFjay5jYWxsKG51bGwsTWVzc2FnZUJveC5DQU5DRUwpICAgXG4gICAgICAgIHRoaXMuZ2V0Q29tcG9uZW50KFZpZXcpLmhpZGUoKTsgICAgIFxuICAgIH1cblxuXG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/DCToggle.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f9e52WLze5MBrhxXx/fWqyL', 'DCToggle');
// framework/plugin_boosts/ui/DCToggle.ts

Object.defineProperty(exports, "__esModule", { value: true });
var DCUI_1 = require("./DCUI");
// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var DCToggle = /** @class */ (function (_super) {
    __extends(DCToggle, _super);
    function DCToggle() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.revserse = false;
        _this.autosync = true;
        return _this;
    }
    DCToggle.prototype.onLoad = function () {
        this.toggle = this.getComponent(cc.Toggle);
        if (this.autosync) {
            var listener = new cc.Component.EventHandler();
            listener.component = "DCToggle";
            listener.target = this.node;
            listener.handler = "onChecked";
            this.toggle.checkEvents.push(listener);
        }
    };
    DCToggle.prototype.onChecked = function (v) {
        if (this.isFromSelf)
            return;
        if (this.revserse) {
            this.setDCValue(!v.isChecked);
        }
        else {
            this.setDCValue(v.isChecked);
        }
    };
    DCToggle.prototype.setChecked = function (b) {
        this.isFromSelf = true;
        if (b)
            this.toggle.check();
        else
            this.toggle.uncheck();
        this.isFromSelf = false;
    };
    DCToggle.prototype.onValueChanged = function (v) {
        if (this.revserse) {
            this.setChecked(!v);
        }
        else {
            this.setChecked(v);
        }
    };
    __decorate([
        property({ tooltip: "If reverse is enabled ,checked is false !, unchecked is true" })
    ], DCToggle.prototype, "revserse", void 0);
    __decorate([
        property({ tooltip: " Make sure data bind type should be boolean" })
    ], DCToggle.prototype, "autosync", void 0);
    DCToggle = __decorate([
        ccclass
    ], DCToggle);
    return DCToggle;
}(DCUI_1.default));
exports.default = DCToggle;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1aVxcRENUb2dnbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLCtCQUEwQjtBQUUxQixvQkFBb0I7QUFDcEIsaUZBQWlGO0FBQ2pGLHlGQUF5RjtBQUN6RixtQkFBbUI7QUFDbkIsMkZBQTJGO0FBQzNGLG1HQUFtRztBQUNuRyw4QkFBOEI7QUFDOUIsMkZBQTJGO0FBQzNGLG1HQUFtRztBQUU3RixJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFzQyw0QkFBSTtJQUExQztRQUFBLHFFQXlEQztRQXJERyxjQUFRLEdBQVcsS0FBSyxDQUFDO1FBSXpCLGNBQVEsR0FBVyxJQUFJLENBQUM7O0lBaUQ1QixDQUFDO0lBN0NHLHlCQUFNLEdBQU47UUFFSSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzNDLElBQUcsSUFBSSxDQUFDLFFBQVEsRUFDaEI7WUFDSSxJQUFJLFFBQVEsR0FBRyxJQUFJLEVBQUUsQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLENBQUM7WUFDL0MsUUFBUSxDQUFDLFNBQVMsR0FBRyxVQUFVLENBQUM7WUFDaEMsUUFBUSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQzVCLFFBQVEsQ0FBQyxPQUFPLEdBQUcsV0FBVyxDQUFDO1lBQy9CLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQTtTQUN6QztJQUNMLENBQUM7SUFFRCw0QkFBUyxHQUFULFVBQVUsQ0FBQztRQUVQLElBQUcsSUFBSSxDQUFDLFVBQVU7WUFBRSxPQUFPO1FBQzNCLElBQUcsSUFBSSxDQUFDLFFBQVEsRUFDaEI7WUFDSSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQ2pDO2FBQUk7WUFDRCxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUNoQztJQUNMLENBQUM7SUFFRCw2QkFBVSxHQUFWLFVBQVcsQ0FBQztRQUVSLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLElBQUcsQ0FBQztZQUNBLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUE7O1lBRW5CLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUE7SUFDM0IsQ0FBQztJQUVELGlDQUFjLEdBQWQsVUFBZSxDQUFDO1FBRVosSUFBRyxJQUFJLENBQUMsUUFBUSxFQUNoQjtZQUNJLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtTQUN0QjthQUFJO1lBQ0QsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQTtTQUNyQjtJQUVMLENBQUM7SUFuREQ7UUFEQyxRQUFRLENBQUMsRUFBQyxPQUFPLEVBQUMsOERBQThELEVBQUMsQ0FBQzs4Q0FDMUQ7SUFJekI7UUFEQyxRQUFRLENBQUMsRUFBQyxPQUFPLEVBQUMsNkNBQTZDLEVBQUMsQ0FBQzs4Q0FDMUM7SUFSUCxRQUFRO1FBRDVCLE9BQU87T0FDYSxRQUFRLENBeUQ1QjtJQUFELGVBQUM7Q0F6REQsQUF5REMsQ0F6RHFDLGNBQUksR0F5RHpDO2tCQXpEb0IsUUFBUSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEQ1VJIGZyb20gXCIuL0RDVUlcIjtcblxuLy8gTGVhcm4gVHlwZVNjcmlwdDpcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcbi8vIExlYXJuIEF0dHJpYnV0ZTpcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEQ1RvZ2dsZSBleHRlbmRzIERDVUkge1xuXG4gICAgdG9nZ2xlOmNjLlRvZ2dsZTtcbiAgICBAcHJvcGVydHkoe3Rvb2x0aXA6XCJJZiByZXZlcnNlIGlzIGVuYWJsZWQgLGNoZWNrZWQgaXMgZmFsc2UgISwgdW5jaGVja2VkIGlzIHRydWVcIn0pXG4gICAgcmV2c2Vyc2U6Ym9vbGVhbiA9IGZhbHNlO1xuXG5cbiAgICBAcHJvcGVydHkoe3Rvb2x0aXA6XCIgTWFrZSBzdXJlIGRhdGEgYmluZCB0eXBlIHNob3VsZCBiZSBib29sZWFuXCJ9KVxuICAgIGF1dG9zeW5jOmJvb2xlYW4gPSB0cnVlO1xuXG4gICAgaXNGcm9tU2VsZjpib29sZWFuO1xuXG4gICAgb25Mb2FkKClcbiAgICB7XG4gICAgICAgIHRoaXMudG9nZ2xlID0gdGhpcy5nZXRDb21wb25lbnQoY2MuVG9nZ2xlKTtcbiAgICAgICAgaWYodGhpcy5hdXRvc3luYylcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IGxpc3RlbmVyID0gbmV3IGNjLkNvbXBvbmVudC5FdmVudEhhbmRsZXIoKTtcbiAgICAgICAgICAgIGxpc3RlbmVyLmNvbXBvbmVudCA9IFwiRENUb2dnbGVcIjtcbiAgICAgICAgICAgIGxpc3RlbmVyLnRhcmdldCA9IHRoaXMubm9kZTtcbiAgICAgICAgICAgIGxpc3RlbmVyLmhhbmRsZXIgPSBcIm9uQ2hlY2tlZFwiO1xuICAgICAgICAgICAgdGhpcy50b2dnbGUuY2hlY2tFdmVudHMucHVzaChsaXN0ZW5lcilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uQ2hlY2tlZCh2KVxuICAgIHtcbiAgICAgICAgaWYodGhpcy5pc0Zyb21TZWxmKSByZXR1cm47XG4gICAgICAgIGlmKHRoaXMucmV2c2Vyc2UpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuc2V0RENWYWx1ZSghdi5pc0NoZWNrZWQpO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIHRoaXMuc2V0RENWYWx1ZSh2LmlzQ2hlY2tlZCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzZXRDaGVja2VkKGIpXG4gICAge1xuICAgICAgICB0aGlzLmlzRnJvbVNlbGYgPSB0cnVlO1xuICAgICAgICBpZihiKVxuICAgICAgICAgICAgdGhpcy50b2dnbGUuY2hlY2soKVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICB0aGlzLnRvZ2dsZS51bmNoZWNrKCk7XG4gICAgICAgIHRoaXMuaXNGcm9tU2VsZiA9IGZhbHNlXG4gICAgfVxuXG4gICAgb25WYWx1ZUNoYW5nZWQodilcbiAgICB7XG4gICAgICAgIGlmKHRoaXMucmV2c2Vyc2UpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuc2V0Q2hlY2tlZCghdilcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICB0aGlzLnNldENoZWNrZWQodilcbiAgICAgICAgfVxuICAgICAgICBcbiAgICB9XG5cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/PandoraPoint.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3f36aidibxFPY2TBTu8gRyi', 'PandoraPoint');
// framework/plugin_boosts/ui/PandoraPoint.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var PandoraPoint = /** @class */ (function (_super) {
    __extends(PandoraPoint, _super);
    function PandoraPoint() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.numberVisible = true;
        return _this;
        // update (dt) {}
    }
    PandoraPoint.prototype.onLoad = function () {
        this.sprite = this.getComponent(cc.Sprite);
        this.label = this.getComponentInChildren(cc.Label);
        this.label.node.active = this.numberVisible;
    };
    PandoraPoint.prototype.start = function () {
    };
    PandoraPoint.prototype.setNumber = function (n) {
        if (this.numberVisible) {
            this.label.string = n + "";
        }
        if (this.numberVisible) {
            this.label.node.active = n != 0;
        }
        this.sprite.enabled = n != 0;
    };
    __decorate([
        property
    ], PandoraPoint.prototype, "numberVisible", void 0);
    PandoraPoint = __decorate([
        ccclass
    ], PandoraPoint);
    return PandoraPoint;
}(cc.Component));
exports.default = PandoraPoint;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1aVxcUGFuZG9yYVBvaW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUEwQyxnQ0FBWTtJQUF0RDtRQUFBLHFFQWlDQztRQTVCRyxtQkFBYSxHQUFXLElBQUksQ0FBQzs7UUEyQjdCLGlCQUFpQjtJQUNyQixDQUFDO0lBeEJHLDZCQUFNLEdBQU47UUFDSSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLHNCQUFzQixDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUNoRCxDQUFDO0lBRUQsNEJBQUssR0FBTDtJQUVBLENBQUM7SUFFRCxnQ0FBUyxHQUFULFVBQVUsQ0FBUTtRQUVkLElBQUcsSUFBSSxDQUFDLGFBQWEsRUFDckI7WUFDSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUUsRUFBRSxDQUFBO1NBQzVCO1FBQ0QsSUFBRyxJQUFJLENBQUMsYUFBYSxFQUNyQjtZQUNJLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBSSxDQUFDLElBQUUsQ0FBQyxDQUFDO1NBQ2xDO1FBQ0QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsQ0FBQyxJQUFHLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBekJEO1FBREMsUUFBUTt1REFDb0I7SUFMWixZQUFZO1FBRGhDLE9BQU87T0FDYSxZQUFZLENBaUNoQztJQUFELG1CQUFDO0NBakNELEFBaUNDLENBakN5QyxFQUFFLENBQUMsU0FBUyxHQWlDckQ7a0JBakNvQixZQUFZIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYW5kb3JhUG9pbnQgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgbGFiZWw6Y2MuTGFiZWw7XG5cbiAgICBAcHJvcGVydHlcbiAgICBudW1iZXJWaXNpYmxlOmJvb2xlYW4gPSB0cnVlO1xuXG4gICAgc3ByaXRlOmNjLlNwcml0ZVxuXG4gICAgb25Mb2FkICgpIHtcbiAgICAgICAgdGhpcy5zcHJpdGUgPSB0aGlzLmdldENvbXBvbmVudChjYy5TcHJpdGUpO1xuICAgICAgICB0aGlzLmxhYmVsID0gdGhpcy5nZXRDb21wb25lbnRJbkNoaWxkcmVuKGNjLkxhYmVsKTtcbiAgICAgICAgdGhpcy5sYWJlbC5ub2RlLmFjdGl2ZSA9IHRoaXMubnVtYmVyVmlzaWJsZTtcbiAgICB9XG5cbiAgICBzdGFydCAoKSB7XG5cbiAgICB9XG5cbiAgICBzZXROdW1iZXIobjpudW1iZXIpXG4gICAge1xuICAgICAgICBpZih0aGlzLm51bWJlclZpc2libGUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMubGFiZWwuc3RyaW5nID0gbiArXCJcIlxuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMubnVtYmVyVmlzaWJsZSkgXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMubGFiZWwubm9kZS5hY3RpdmUgPSAgbiE9MDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNwcml0ZS5lbmFibGVkID0gbiAhPTA7XG4gICAgfVxuXG4gICAgLy8gdXBkYXRlIChkdCkge31cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/ToastManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '129ed5o6uNHDKhz6KoueBpN', 'ToastManager');
// framework/plugin_boosts/ui/ToastManager.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.Toast = void 0;
var ToastComponent_1 = require("./ToastComponent");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
exports.Toast = null;
var ToastManager = /** @class */ (function (_super) {
    __extends(ToastManager, _super);
    function ToastManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToastManager.prototype.start = function () {
        this.toastPool = new cc.NodePool();
        exports.Toast = this;
    };
    ToastManager.prototype.onDestroy = function () {
        this.toastPool.clear();
    };
    ToastManager.prototype.make = function (text, dur) {
        if (dur === void 0) { dur = 1.3; }
        //show toast 
        var node = this.toastPool.get();
        var toastComp = null;
        if (node == null) {
            node = cc.instantiate(this.prefab);
            toastComp = node.getComponent(ToastComponent_1.default);
            if (toastComp == null) {
                console.warn("Toast.make : Toast Prefab must contains ToastComponent");
            }
            // ToastManager.toastPool.put(node);
            // node = ToastManager.toastPool.get();
        }
        else {
            toastComp = node.getComponent(ToastComponent_1.default);
        }
        if (node.parent == null)
            this.node.addChild(node, 99999);
        this.show(toastComp, text, dur);
        return toastComp;
    };
    ToastManager.prototype.show = function (toastComp, text, dur) {
        var _this = this;
        toastComp.show(text);
        this.scheduleOnce(function (_) {
            toastComp.hide(function (_) {
                _this.toastPool.put(toastComp.node);
                console.log("Toast.hide toastpool size:", _this.toastPool.size());
            });
        }, dur);
    };
    __decorate([
        property(cc.Prefab)
    ], ToastManager.prototype, "prefab", void 0);
    ToastManager = __decorate([
        ccclass
    ], ToastManager);
    return ToastManager;
}(cc.Component));
exports.default = ToastManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1aVxcVG9hc3RNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsbURBQThDO0FBRXhDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRS9CLFFBQUEsS0FBSyxHQUFnQixJQUFJLENBQUM7QUFHckM7SUFBMEMsZ0NBQVk7SUFBdEQ7O0lBb0RBLENBQUM7SUEvQ0csNEJBQUssR0FBTDtRQUNJLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkMsYUFBSyxHQUFHLElBQUksQ0FBQztJQUNqQixDQUFDO0lBRUQsZ0NBQVMsR0FBVDtRQUVJLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVELDJCQUFJLEdBQUosVUFBSyxJQUFJLEVBQUMsR0FBUztRQUFULG9CQUFBLEVBQUEsU0FBUztRQUVmLGFBQWE7UUFDYixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ2hDLElBQUksU0FBUyxHQUFHLElBQUksQ0FBQztRQUNyQixJQUFJLElBQUksSUFBSSxJQUFJLEVBQ2hCO1lBQ0ksSUFBSSxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ25DLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLHdCQUFjLENBQUMsQ0FBQztZQUM5QyxJQUFHLFNBQVMsSUFBSSxJQUFJLEVBQ3BCO2dCQUNJLE9BQU8sQ0FBQyxJQUFJLENBQUMsd0RBQXdELENBQUMsQ0FBQTthQUN6RTtZQUNELG9DQUFvQztZQUNwQyx1Q0FBdUM7U0FDMUM7YUFBSTtZQUNELFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLHdCQUFjLENBQUMsQ0FBQztTQUNqRDtRQUNELElBQUcsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJO1lBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBQyxLQUFLLENBQUMsQ0FBQztRQUVuQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBQyxJQUFJLEVBQUMsR0FBRyxDQUFDLENBQUE7UUFDN0IsT0FBTyxTQUFTLENBQUM7SUFDckIsQ0FBQztJQUVPLDJCQUFJLEdBQVosVUFBYSxTQUF3QixFQUFDLElBQUksRUFBQyxHQUFHO1FBQTlDLGlCQVNDO1FBUEcsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtRQUNwQixJQUFJLENBQUMsWUFBWSxDQUFDLFVBQUEsQ0FBQztZQUNmLFNBQVMsQ0FBQyxJQUFJLENBQUMsVUFBQSxDQUFDO2dCQUNaLEtBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQTtnQkFDbEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBQyxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUE7WUFDbkUsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLEVBQUMsR0FBRyxDQUFDLENBQUE7SUFDVixDQUFDO0lBOUNEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7Z0RBQ0o7SUFIQyxZQUFZO1FBRGhDLE9BQU87T0FDYSxZQUFZLENBb0RoQztJQUFELG1CQUFDO0NBcERELEFBb0RDLENBcER5QyxFQUFFLENBQUMsU0FBUyxHQW9EckQ7a0JBcERvQixZQUFZIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRvYXN0Q29tcG9uZW50IGZyb20gXCIuL1RvYXN0Q29tcG9uZW50XCI7XG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuXG5leHBvcnQgdmFyIFRvYXN0OlRvYXN0TWFuYWdlciA9IG51bGw7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUb2FzdE1hbmFnZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuICAgIHRvYXN0UG9vbDpjYy5Ob2RlUG9vbDtcbiAgICBAcHJvcGVydHkoY2MuUHJlZmFiKVxuICAgIHByZWZhYjpjYy5QcmVmYWJcbiAgICBcbiAgICBzdGFydCAoKSB7XG4gICAgICAgIHRoaXMudG9hc3RQb29sID0gbmV3IGNjLk5vZGVQb29sKCk7XG4gICAgICAgIFRvYXN0ID0gdGhpcztcbiAgICB9XG5cbiAgICBvbkRlc3Ryb3koKVxuICAgIHtcbiAgICAgICAgdGhpcy50b2FzdFBvb2wuY2xlYXIoKTtcbiAgICB9XG5cbiAgICBtYWtlKHRleHQsZHVyID0gMS4zKVxuICAgIHtcbiAgICAgICAgLy9zaG93IHRvYXN0IFxuICAgICAgICBsZXQgbm9kZSA9IHRoaXMudG9hc3RQb29sLmdldCgpO1xuICAgICAgICBsZXQgdG9hc3RDb21wID0gbnVsbDtcbiAgICAgICAgaWYgKG5vZGUgPT0gbnVsbClcbiAgICAgICAge1xuICAgICAgICAgICAgbm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMucHJlZmFiKTtcbiAgICAgICAgICAgIHRvYXN0Q29tcCA9IG5vZGUuZ2V0Q29tcG9uZW50KFRvYXN0Q29tcG9uZW50KTtcbiAgICAgICAgICAgIGlmKHRvYXN0Q29tcCA9PSBudWxsKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIlRvYXN0Lm1ha2UgOiBUb2FzdCBQcmVmYWIgbXVzdCBjb250YWlucyBUb2FzdENvbXBvbmVudFwiKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVG9hc3RNYW5hZ2VyLnRvYXN0UG9vbC5wdXQobm9kZSk7XG4gICAgICAgICAgICAvLyBub2RlID0gVG9hc3RNYW5hZ2VyLnRvYXN0UG9vbC5nZXQoKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICB0b2FzdENvbXAgPSBub2RlLmdldENvbXBvbmVudChUb2FzdENvbXBvbmVudCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYobm9kZS5wYXJlbnQgPT0gbnVsbClcbiAgICAgICAgICAgIHRoaXMubm9kZS5hZGRDaGlsZChub2RlLDk5OTk5KTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuc2hvdyh0b2FzdENvbXAsdGV4dCxkdXIpXG4gICAgICAgIHJldHVybiB0b2FzdENvbXA7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzaG93KHRvYXN0Q29tcDpUb2FzdENvbXBvbmVudCx0ZXh0LGR1cilcbiAgICB7XG4gICAgICAgIHRvYXN0Q29tcC5zaG93KHRleHQpXG4gICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKF89PntcbiAgICAgICAgICAgIHRvYXN0Q29tcC5oaWRlKF89PntcbiAgICAgICAgICAgICAgICB0aGlzLnRvYXN0UG9vbC5wdXQodG9hc3RDb21wLm5vZGUpXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJUb2FzdC5oaWRlIHRvYXN0cG9vbCBzaXplOlwiLHRoaXMudG9hc3RQb29sLnNpemUoKSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LGR1cilcbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/UIComponent.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0dc9dQt58ZCx4tQ3mcNvEZr', 'UIComponent');
// framework/plugin_boosts/ui/UIComponent.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIComponent = /** @class */ (function (_super) {
    __extends(UIComponent, _super);
    function UIComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UIComponent.prototype.hide = function () {
        this.node.active = false;
    };
    UIComponent.prototype.show = function () {
        this.node.active = true;
    };
    UIComponent = __decorate([
        ccclass
    ], UIComponent);
    return UIComponent;
}(cc.Component));
exports.default = UIComponent;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1aVxcVUlDb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXlDLCtCQUFZO0lBQXJEOztJQVFBLENBQUM7SUFQRywwQkFBSSxHQUFKO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQzdCLENBQUM7SUFDRCwwQkFBSSxHQUFKO1FBRUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0lBQzVCLENBQUM7SUFQZ0IsV0FBVztRQUQvQixPQUFPO09BQ2EsV0FBVyxDQVEvQjtJQUFELGtCQUFDO0NBUkQsQUFRQyxDQVJ3QyxFQUFFLENBQUMsU0FBUyxHQVFwRDtrQkFSb0IsV0FBVyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlDb21wb25lbnQgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuICAgIGhpZGUoKXtcbiAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xuICAgIH1cbiAgICBzaG93KClcbiAgICB7XG4gICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSB0cnVlO1xuICAgIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/utils/EventManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '334c9avVx5ILbx/6NU/H45V', 'EventManager');
// framework/plugin_boosts/utils/EventManager.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.event = void 0;
/**
* name
*/
var EventManager = /** @class */ (function () {
    function EventManager() {
        this._eventList = {};
    }
    EventManager.prototype.on = function (key, listen, target) {
        if (this._eventList[key] != null) {
            var array = this._eventList[key];
            array.push({ listen: listen, target: target });
        }
        else {
            var array = new Array();
            array.push({ listen: listen, target: target });
            this._eventList[key] = array;
        }
    };
    EventManager.prototype.off = function (key, listener, target) {
        if (listener != null && !(listener instanceof Function)) {
            target = listener;
            listener = null;
        }
        if (this._eventList[key] != null) {
            if (listener == null && target == null) {
                delete this._eventList[key];
            }
            else {
                var array = this._eventList[key];
                for (var i = array.length - 1; i >= 0; i--) {
                    if (listener != null && target != null) {
                        if (array[i].listen == listener && array[i].target == target) {
                            array.splice(i, 1);
                        }
                    }
                    else if (listener != null && array[i].listen == listener) {
                        array.splice(i, 1);
                    }
                    else if (target != null && array[i].target == target) {
                        array.splice(i, 1);
                    }
                }
            }
        }
    };
    EventManager.prototype.emit = function (tag) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        var sendOk = false;
        if (this._eventList[tag] != null) {
            var array = this._eventList[tag];
            console.log("emit message: ", tag, array.length);
            for (var i = 0; i < array.length; i++) {
                var obj = array[i];
                if (obj.target != null) {
                    if (obj.listen.apply(obj.target, params))
                        sendOk = true;
                }
                else {
                    if (obj.listen.apply(this, params))
                        sendOk = true;
                }
            }
        }
        return sendOk;
    };
    return EventManager;
}());
exports.event = new EventManager();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1dGlsc1xcRXZlbnRNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0VBRUU7QUFDRDtJQUlDO1FBQ0MsSUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUVNLHlCQUFFLEdBQVQsVUFBVSxHQUFVLEVBQUUsTUFBZ0IsRUFBRSxNQUFXO1FBQ2xELElBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLEVBQUM7WUFDL0IsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNqQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQztTQUM1QzthQUFJO1lBQ0osSUFBSSxLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQU8sQ0FBQztZQUM3QixLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUMsTUFBTSxFQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQztZQUMzQyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztTQUM3QjtJQUNGLENBQUM7SUFFTSwwQkFBRyxHQUFWLFVBQVcsR0FBVyxFQUFFLFFBQWEsRUFBRSxNQUFXO1FBQ2pELElBQUcsUUFBUSxJQUFJLElBQUksSUFBSSxDQUFDLENBQUMsUUFBUSxZQUFZLFFBQVEsQ0FBQyxFQUFDO1lBQzFDLE1BQU0sR0FBRyxRQUFRLENBQUM7WUFDbEIsUUFBUSxHQUFHLElBQUksQ0FBQztTQUNuQjtRQUNWLElBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLEVBQUM7WUFDL0IsSUFBRyxRQUFRLElBQUksSUFBSSxJQUFJLE1BQU0sSUFBSSxJQUFJLEVBQUM7Z0JBQ3JDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUM1QjtpQkFBSTtnQkFDSixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNqQyxLQUFJLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUM7b0JBQ3pDLElBQUcsUUFBUSxJQUFJLElBQUksSUFBSSxNQUFNLElBQUksSUFBSSxFQUFDO3dCQUNyQyxJQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksUUFBUSxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksTUFBTSxFQUFDOzRCQUMzRCxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQzt5QkFDbkI7cUJBQ0Q7eUJBQUssSUFBRyxRQUFRLElBQUksSUFBSSxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksUUFBUSxFQUFDO3dCQUN4RCxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztxQkFDbkI7eUJBQUssSUFBRyxNQUFNLElBQUksSUFBSSxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksTUFBTSxFQUFDO3dCQUNwRCxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztxQkFDbkI7aUJBQ0Q7YUFDRDtTQUNEO0lBQ0YsQ0FBQztJQUVNLDJCQUFJLEdBQVgsVUFBWSxHQUFXO1FBQUUsZ0JBQWdCO2FBQWhCLFVBQWdCLEVBQWhCLHFCQUFnQixFQUFoQixJQUFnQjtZQUFoQiwrQkFBZ0I7O1FBQ3hDLElBQUksTUFBTSxHQUFXLEtBQUssQ0FBQztRQUMzQixJQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxFQUFDO1lBQy9CLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDakMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ2pELEtBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFDO2dCQUNwQyxJQUFJLEdBQUcsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ25CLElBQUcsR0FBRyxDQUFDLE1BQU0sSUFBSSxJQUFJLEVBQUM7b0JBQ3JCLElBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUM7d0JBQ3RDLE1BQU0sR0FBRyxJQUFJLENBQUE7aUJBQ2Q7cUJBQ0c7b0JBQ0gsSUFBRyxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDO3dCQUNoQyxNQUFNLEdBQUcsSUFBSSxDQUFBO2lCQUNkO2FBQ0Q7U0FDRDtRQUNELE9BQU8sTUFBTSxDQUFBO0lBQ2QsQ0FBQztJQUVGLG1CQUFDO0FBQUQsQ0FoRUEsQUFnRUMsSUFBQTtBQUVVLFFBQUEsS0FBSyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiogbmFtZSBcbiovXG5cdGNsYXNzIEV2ZW50TWFuYWdlciB7XG5cblx0XHRwcml2YXRlIF9ldmVudExpc3Q6IHtba2V5OnN0cmluZ106QXJyYXk8e2xpc3RlbjpGdW5jdGlvbiwgdGFyZ2V0OiBhbnl9Pn07XG5cblx0XHRwdWJsaWMgY29uc3RydWN0b3IoKSB7XG5cdFx0XHR0aGlzLl9ldmVudExpc3QgPSB7fTtcblx0XHR9XG5cblx0XHRwdWJsaWMgb24oa2V5OnN0cmluZywgbGlzdGVuOiBGdW5jdGlvbiwgdGFyZ2V0Pzphbnkpe1xuXHRcdFx0aWYodGhpcy5fZXZlbnRMaXN0W2tleV0gIT0gbnVsbCl7XG5cdFx0XHRcdGxldCBhcnJheSA9IHRoaXMuX2V2ZW50TGlzdFtrZXldO1xuXHRcdFx0XHRhcnJheS5wdXNoKHtsaXN0ZW46IGxpc3RlbiwgdGFyZ2V0OnRhcmdldH0pO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdGxldCBhcnJheSA9IG5ldyBBcnJheTxhbnk+KCk7XG5cdFx0XHRcdGFycmF5LnB1c2goe2xpc3RlbjpsaXN0ZW4sIHRhcmdldDp0YXJnZXR9KTtcblx0XHRcdFx0dGhpcy5fZXZlbnRMaXN0W2tleV0gPSBhcnJheTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRwdWJsaWMgb2ZmKGtleTogc3RyaW5nLCBsaXN0ZW5lcj86YW55LCB0YXJnZXQ/OmFueSl7XG5cdFx0XHRpZihsaXN0ZW5lciAhPSBudWxsICYmICEobGlzdGVuZXIgaW5zdGFuY2VvZiBGdW5jdGlvbikpe1xuICAgICAgICAgICAgICAgIHRhcmdldCA9IGxpc3RlbmVyO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyID0gbnVsbDtcbiAgICAgICAgICAgIH1cblx0XHRcdGlmKHRoaXMuX2V2ZW50TGlzdFtrZXldICE9IG51bGwpe1xuXHRcdFx0XHRpZihsaXN0ZW5lciA9PSBudWxsICYmIHRhcmdldCA9PSBudWxsKXtcblx0XHRcdFx0XHRkZWxldGUgdGhpcy5fZXZlbnRMaXN0W2tleV07XG5cdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdGxldCBhcnJheSA9IHRoaXMuX2V2ZW50TGlzdFtrZXldO1xuXHRcdFx0XHRcdGZvcihsZXQgaSA9IGFycmF5Lmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKXtcblx0XHRcdFx0XHRcdGlmKGxpc3RlbmVyICE9IG51bGwgJiYgdGFyZ2V0ICE9IG51bGwpe1xuXHRcdFx0XHRcdFx0XHRpZihhcnJheVtpXS5saXN0ZW4gPT0gbGlzdGVuZXIgJiYgYXJyYXlbaV0udGFyZ2V0ID09IHRhcmdldCl7XG5cdFx0XHRcdFx0XHRcdFx0YXJyYXkuc3BsaWNlKGksIDEpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9ZWxzZSBpZihsaXN0ZW5lciAhPSBudWxsICYmIGFycmF5W2ldLmxpc3RlbiA9PSBsaXN0ZW5lcil7XG5cdFx0XHRcdFx0XHRcdGFycmF5LnNwbGljZShpLCAxKTtcblx0XHRcdFx0XHRcdH1lbHNlIGlmKHRhcmdldCAhPSBudWxsICYmIGFycmF5W2ldLnRhcmdldCA9PSB0YXJnZXQpe1xuXHRcdFx0XHRcdFx0XHRhcnJheS5zcGxpY2UoaSwgMSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cHVibGljIGVtaXQodGFnOiBzdHJpbmcsIC4uLnBhcmFtczogYW55W10pe1xuXHRcdFx0bGV0IHNlbmRPazpib29sZWFuID0gZmFsc2U7XG5cdFx0XHRpZih0aGlzLl9ldmVudExpc3RbdGFnXSAhPSBudWxsKXtcblx0XHRcdFx0bGV0IGFycmF5ID0gdGhpcy5fZXZlbnRMaXN0W3RhZ107XG5cdFx0XHRcdGNvbnNvbGUubG9nKFwiZW1pdCBtZXNzYWdlOiBcIiAsdGFnLCBhcnJheS5sZW5ndGgpO1xuXHRcdFx0XHRmb3IobGV0IGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspe1xuXHRcdFx0XHRcdGxldCBvYmogPSBhcnJheVtpXTtcblx0XHRcdFx0XHRpZihvYmoudGFyZ2V0ICE9IG51bGwpe1xuXHRcdFx0XHRcdFx0aWYob2JqLmxpc3Rlbi5hcHBseShvYmoudGFyZ2V0LCBwYXJhbXMpKVxuXHRcdFx0XHRcdFx0XHRzZW5kT2sgPSB0cnVlXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGVsc2V7XG5cdFx0XHRcdFx0XHRpZihvYmoubGlzdGVuLmFwcGx5KHRoaXMsIHBhcmFtcykpXG5cdFx0XHRcdFx0XHRcdHNlbmRPayA9IHRydWVcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBzZW5kT2sgXG5cdFx0fVxuXG5cdH1cblxuXHRleHBvcnQgdmFyIGV2ZW50ID0gbmV3IEV2ZW50TWFuYWdlcigpOyJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/UIFunctions.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '10205trRZVOELcrvc3TW2mW', 'UIFunctions');
// framework/plugin_boosts/ui/UIFunctions.ts

Object.defineProperty(exports, "__esModule", { value: true });
var UIFunctions = /** @class */ (function () {
    function UIFunctions() {
    }
    UIFunctions.getChildrenAnimations = function (node) {
        var animations = [];
        var anim = node.getComponent(cc.Animation);
        if (anim)
            animations.push(anim);
        for (var i = 0; i < node.childrenCount; i++) {
            var child = node.children[i];
            var anim = child.getComponent(cc.Animation);
            if (anim)
                animations.push(anim);
        }
        return animations;
    };
    UIFunctions.stopAnimations = function (animations) {
        animations.forEach(function (anim) {
            anim.stop();
        });
    };
    UIFunctions.doShowAnimations = function (animations, finishCallback, target) {
        var maxDuration = 0;
        var maxDurationAnimation;
        animations.forEach(function (anim) {
            var clips = anim.getClips();
            if (clips.length > 0) {
                var clip = clips[0];
                var animState = anim.play(clip.name);
                animState.wrapMode = cc.WrapMode.Normal;
                if (clip.duration > maxDuration) {
                    maxDuration = clip.duration;
                    maxDurationAnimation = anim;
                }
            }
        });
        if (finishCallback) {
            var func_1 = function () {
                // console.log("finish animations")
                if (maxDurationAnimation)
                    maxDurationAnimation.off("finished", func_1);
                finishCallback.call(target);
            };
            if (maxDurationAnimation)
                maxDurationAnimation.on("finished", func_1);
            else
                finishCallback.call(target);
        }
    };
    // static getLongestAnimation(animations)
    // {
    //     animations.forEach((anim:cc.Animation)=>{
    //         let clips = anim.getClips()
    //         for (clips)
    //         //以最长的为准
    //     }
    // }
    //TODO:还未实现
    UIFunctions.isAnimationRunning = function (animations) {
        return false;
    };
    UIFunctions.doHideAnimations = function (animations, finishCallback, target) {
        var hasHideAnimation = false;
        var maxDuration = 0;
        var maxDurationAnimation;
        animations.forEach(function (anim) {
            var clips = anim.getClips();
            if (clips.length == 2) {
                var clip = clips[clips.length - 1];
                // anim.on("finished",onHideAnimationFinished)
                hasHideAnimation = true;
                anim.play(clip.name);
                if (clip.duration > maxDuration) {
                    maxDuration = clip.duration;
                    maxDurationAnimation = anim;
                }
            }
            else if (clips.length == 1) {
                var clip = clips[0];
                // clip.wrapMode = cc.WrapMode.Reverse;
                hasHideAnimation = true;
                var animState = anim.play(clip.name);
                animState.wrapMode = cc.WrapMode.Reverse;
                if (clip.duration > maxDuration) {
                    maxDuration = clip.duration;
                    maxDurationAnimation = anim;
                }
            }
        });
        if (maxDurationAnimation && finishCallback) {
            var func_2 = function () {
                // console.log("finish animations")
                maxDurationAnimation.off("finished", func_2);
                finishCallback.call(target);
            };
            maxDurationAnimation.on("finished", func_2);
        }
        return hasHideAnimation;
    };
    UIFunctions.getToggleIndex = function (toggle) {
        var container = toggle.node.getParent();
        for (var i = 0; i < container.childrenCount; i++) {
            var child = container.children[i];
            if (toggle.node == child) {
                return i;
            }
        }
        return -1;
    };
    UIFunctions.selectToggleIndex = function (toggleContainer, index) {
        if (toggleContainer == null) {
            console.warn("[UIFunction.selectToggleIndex] : invalid toggleContainer :");
            return;
        }
        var toggleNode = toggleContainer.children[index];
        if (toggleNode) {
            var toggle = toggleNode.getComponent(cc.Toggle);
            if (toggle) {
                console.log("[UIFunction.selectToggleIndex] :" + index);
                toggle.check();
            }
        }
        else {
            console.warn("[UIFunction.selectToggleIndex] :cannot find toggle with index:" + index);
        }
    };
    // set btn 
    UIFunctions.setTouchEnabled = function (node, b) {
        // g.foreachNode(node,child=>{
        //     let btn:cc.Button = child.getComponent(cc.Button)
        //     if(btn)
        //     {
        //         console.log("[UIFunction] " + child.name + " touch : " + b)
        //         btn.interactable = b;
        //     }
        // })
    };
    UIFunctions.setButtonEnabled = function (btn, b) {
        btn.node.opacity = b ? 255 : 125;
        btn.interactable = b;
    };
    return UIFunctions;
}());
exports.default = UIFunctions;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/DCPandoraPoint.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7213alSGlhOObvGLLyQvhtZ', 'DCPandoraPoint');
// framework/plugin_boosts/ui/DCPandoraPoint.ts

Object.defineProperty(exports, "__esModule", { value: true });
var DCUI_1 = require("./DCUI");
var PandoraPoint_1 = require("./PandoraPoint");
// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var DCPandoraPoint = /** @class */ (function (_super) {
    __extends(DCPandoraPoint, _super);
    function DCPandoraPoint() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DCPandoraPoint.prototype.onLoad = function () {
        this.point = this.getComponent(PandoraPoint_1.default);
    };
    DCPandoraPoint.prototype.onValueChanged = function (v) {
        this.point.setNumber(v);
    };
    DCPandoraPoint = __decorate([
        ccclass
    ], DCPandoraPoint);
    return DCPandoraPoint;
}(DCUI_1.default));
exports.default = DCPandoraPoint;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1aVxcRENQYW5kb3JhUG9pbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLCtCQUEwQjtBQUMxQiwrQ0FBMEM7QUFFMUMsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFFN0YsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBNEMsa0NBQUk7SUFBaEQ7O0lBZUEsQ0FBQztJQVpHLCtCQUFNLEdBQU47UUFFSSxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsc0JBQVksQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFRCx1Q0FBYyxHQUFkLFVBQWUsQ0FBQztRQUVaLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFYZ0IsY0FBYztRQURsQyxPQUFPO09BQ2EsY0FBYyxDQWVsQztJQUFELHFCQUFDO0NBZkQsQUFlQyxDQWYyQyxjQUFJLEdBZS9DO2tCQWZvQixjQUFjIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERDVUkgZnJvbSBcIi4vRENVSVwiO1xuaW1wb3J0IFBhbmRvcmFQb2ludCBmcm9tIFwiLi9QYW5kb3JhUG9pbnRcIjtcblxuLy8gTGVhcm4gVHlwZVNjcmlwdDpcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcbi8vIExlYXJuIEF0dHJpYnV0ZTpcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEQ1BhbmRvcmFQb2ludCBleHRlbmRzIERDVUkge1xuXG4gICAgcG9pbnQ6UGFuZG9yYVBvaW50O1xuICAgIG9uTG9hZCgpXG4gICAge1xuICAgICAgICB0aGlzLnBvaW50ID0gdGhpcy5nZXRDb21wb25lbnQoUGFuZG9yYVBvaW50KTtcbiAgICB9XG5cbiAgICBvblZhbHVlQ2hhbmdlZCh2KVxuICAgIHtcbiAgICAgICAgdGhpcy5wb2ludC5zZXROdW1iZXIodik7XG4gICAgfVxuICAgXG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/MessageBoxManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bc48cBqkERHuJx+iKzOzwOV', 'MessageBoxManager');
// framework/plugin_boosts/ui/MessageBoxManager.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageBox = void 0;
var ViewManager_1 = require("./ViewManager");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MessageBoxManager = /** @class */ (function (_super) {
    __extends(MessageBoxManager, _super);
    function MessageBoxManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.prefab = null;
        return _this;
    }
    MessageBoxManager_1 = MessageBoxManager;
    MessageBoxManager.prototype.onLoad = function () {
        MessageBoxManager_1.instance = this;
    };
    var MessageBoxManager_1;
    MessageBoxManager.instance = null;
    __decorate([
        property(cc.Prefab)
    ], MessageBoxManager.prototype, "prefab", void 0);
    MessageBoxManager = MessageBoxManager_1 = __decorate([
        ccclass
    ], MessageBoxManager);
    return MessageBoxManager;
}(cc.Component));
exports.default = MessageBoxManager;
var MessageBox = /** @class */ (function () {
    function MessageBox() {
    }
    MessageBox.prototype.start = function () {
    };
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    // static UIPath:string = "plugin_boosts/ui/MessageBox"
    MessageBox.show = function (content, title, buttons, extra) {
        title = (title == null || title == undefined) ? "提示" : title;
        return new Promise(function (resolve, reject) {
            ViewManager_1.default.instance.showFromPrefab(MessageBoxManager.instance.prefab, "MessageBox", {
                title: title,
                content: content,
                buttons: buttons,
                extra: extra,
                callback: function (code) {
                    resolve(code);
                }
            });
        });
    };
    // LIFE-CYCLE CALLBACKS:
    // onLoad () {}
    MessageBox.OK = 1;
    MessageBox.CANCEL = 0;
    MessageBox.OK_CANCEL = 2;
    return MessageBox;
}());
exports.MessageBox = MessageBox;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1aVxcTWVzc2FnZUJveE1hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw2Q0FBd0M7QUFFbEMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFJMUM7SUFBK0MscUNBQVk7SUFBM0Q7UUFBQSxxRUFTQztRQU5HLFlBQU0sR0FBYSxJQUFJLENBQUM7O0lBTTVCLENBQUM7MEJBVG9CLGlCQUFpQjtJQU1sQyxrQ0FBTSxHQUFOO1FBQ0ksbUJBQWlCLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztJQUN0QyxDQUFDOztJQUhNLDBCQUFRLEdBQXFCLElBQUksQ0FBQztJQUZ6QztRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3FEQUNJO0lBSFAsaUJBQWlCO1FBSHJDLE9BQU87T0FHYSxpQkFBaUIsQ0FTckM7SUFBRCx3QkFBQztDQVRELEFBU0MsQ0FUOEMsRUFBRSxDQUFDLFNBQVMsR0FTMUQ7a0JBVG9CLGlCQUFpQjtBQVd0QztJQUFBO0lBZ0NBLENBQUM7SUF2QkcsMEJBQUssR0FBTDtJQUVBLENBQUM7SUFFRCwwR0FBMEc7SUFDMUcsdURBQXVEO0lBQ2hELGVBQUksR0FBWCxVQUFZLE9BQU8sRUFBRSxLQUFNLEVBQUMsT0FBUSxFQUFDLEtBQU07UUFFdkMsS0FBSyxHQUFHLENBQUMsS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLElBQUksU0FBUyxDQUFFLENBQUEsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUEsS0FBSyxDQUFBO1FBQzNELE9BQU8sSUFBSSxPQUFPLENBQVMsVUFBQyxPQUFPLEVBQUMsTUFBTTtZQUN0QyxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBQyxZQUFZLEVBQUM7Z0JBQy9FLEtBQUssT0FBQTtnQkFDTCxPQUFPLFNBQUE7Z0JBQ1AsT0FBTyxTQUFBO2dCQUNQLEtBQUssT0FBQTtnQkFDTCxRQUFRLEVBQUMsVUFBQSxJQUFJO29CQUNULE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQTtnQkFDakIsQ0FBQzthQUNKLENBQUMsQ0FBQTtRQUNOLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQTNCRCx3QkFBd0I7SUFDeEIsZUFBZTtJQUNSLGFBQUUsR0FBVSxDQUFDLENBQUM7SUFDZCxpQkFBTSxHQUFVLENBQUMsQ0FBQztJQUVsQixvQkFBUyxHQUFVLENBQUMsQ0FBQztJQXlCaEMsaUJBQUM7Q0FoQ0QsQUFnQ0MsSUFBQTtBQWhDWSxnQ0FBVSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWaWV3TWFuYWdlciBmcm9tIFwiLi9WaWV3TWFuYWdlclwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcbkBjY2NsYXNzXG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVzc2FnZUJveE1hbmFnZXIgZXh0ZW5kcyBjYy5Db21wb25lbnRcbntcbiAgICBAcHJvcGVydHkoY2MuUHJlZmFiKVxuICAgIHByZWZhYjpjYy5QcmVmYWIgPSBudWxsO1xuICAgIFxuICAgIHN0YXRpYyBpbnN0YW5jZTpNZXNzYWdlQm94TWFuYWdlciA9IG51bGw7XG4gICAgb25Mb2FkICgpIHtcbiAgICAgICAgTWVzc2FnZUJveE1hbmFnZXIuaW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIE1lc3NhZ2VCb3ggIHtcblxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxuICAgIC8vIG9uTG9hZCAoKSB7fVxuICAgIHN0YXRpYyBPSzpudW1iZXIgPSAxO1xuICAgIHN0YXRpYyBDQU5DRUw6bnVtYmVyID0gMDtcblxuICAgIHN0YXRpYyBPS19DQU5DRUw6bnVtYmVyID0gMjtcblxuICAgIHN0YXJ0ICgpIHtcblxuICAgIH1cblxuICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICAvLyBzdGF0aWMgVUlQYXRoOnN0cmluZyA9IFwicGx1Z2luX2Jvb3N0cy91aS9NZXNzYWdlQm94XCJcbiAgICBzdGF0aWMgc2hvdyhjb250ZW50ICx0aXRsZT8sYnV0dG9ucz8sZXh0cmE/KTpQcm9taXNlPG51bWJlcj5cbiAgICB7XG4gICAgICAgIHRpdGxlID0gKHRpdGxlID09IG51bGwgfHwgdGl0bGUgPT0gdW5kZWZpbmVkICk/IFwi5o+Q56S6XCIgOnRpdGxlXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZTxudW1iZXI+KChyZXNvbHZlLHJlamVjdCk9PntcbiAgICAgICAgICAgIFZpZXdNYW5hZ2VyLmluc3RhbmNlLnNob3dGcm9tUHJlZmFiKE1lc3NhZ2VCb3hNYW5hZ2VyLmluc3RhbmNlLnByZWZhYixcIk1lc3NhZ2VCb3hcIix7XG4gICAgICAgICAgICAgICAgdGl0bGUsXG4gICAgICAgICAgICAgICAgY29udGVudCxcbiAgICAgICAgICAgICAgICBidXR0b25zLFxuICAgICAgICAgICAgICAgIGV4dHJhLFxuICAgICAgICAgICAgICAgIGNhbGxiYWNrOmNvZGU9PntcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShjb2RlKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gdXBkYXRlIChkdCkge31cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/DCUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e4171eQC3dMO4x8/Td1XV1Y', 'DCUI');
// framework/plugin_boosts/ui/DCUI.ts

Object.defineProperty(exports, "__esModule", { value: true });
var DataCenter_1 = require("../misc/DataCenter");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var DCUI = /** @class */ (function (_super) {
    __extends(DCUI, _super);
    function DCUI() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.dataBind = "";
        return _this;
    }
    DCUI.prototype.onLoad = function () {
    };
    DCUI.prototype.setDCKey = function (k) {
        this.dataBind = k;
        this.setListener();
    };
    DCUI.prototype.setListener = function () {
        DataCenter_1.default.off(this.dataBind, this.dataChanged, this);
        DataCenter_1.default.on(this.dataBind, this.dataChanged, this);
    };
    DCUI.prototype.onValueChanged = function (v) {
    };
    DCUI.prototype.setDCValue = function (v) {
        DataCenter_1.default.set(this.dataBind, v);
    };
    DCUI.prototype.dataChanged = function (v, old) {
        this.onValueChanged(v);
    };
    DCUI.prototype.onEnable = function () {
        this.setListener();
        this.onValueChanged(DataCenter_1.default.get(this.dataBind));
    };
    DCUI.prototype.onDisable = function () {
        DataCenter_1.default.off(this.dataBind, this.dataChanged, this);
    };
    __decorate([
        property()
    ], DCUI.prototype, "dataBind", void 0);
    DCUI = __decorate([
        ccclass
    ], DCUI);
    return DCUI;
}(cc.Component));
exports.default = DCUI;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1aVxcRENVSS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaURBQTRDO0FBRXRDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQWtDLHdCQUFZO0lBQTlDO1FBQUEscUVBMkNDO1FBeENHLGNBQVEsR0FBVyxFQUFFLENBQUM7O0lBd0MxQixDQUFDO0lBdkNHLHFCQUFNLEdBQU47SUFFQSxDQUFDO0lBRUQsdUJBQVEsR0FBUixVQUFTLENBQUM7UUFFTixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUE7SUFDdEIsQ0FBQztJQUdELDBCQUFXLEdBQVg7UUFFSSxvQkFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFDLElBQUksQ0FBQyxXQUFXLEVBQUMsSUFBSSxDQUFDLENBQUE7UUFDbkQsb0JBQVUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBQyxJQUFJLENBQUMsV0FBVyxFQUFDLElBQUksQ0FBQyxDQUFBO0lBQ3RELENBQUM7SUFFRCw2QkFBYyxHQUFkLFVBQWUsQ0FBQztJQUVoQixDQUFDO0lBRUQseUJBQVUsR0FBVixVQUFXLENBQUM7UUFFUixvQkFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCwwQkFBVyxHQUFYLFVBQVksQ0FBQyxFQUFDLEdBQUc7UUFDYixJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFRCx1QkFBUSxHQUFSO1FBQ0ksSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFBO1FBQ2xCLElBQUksQ0FBQyxjQUFjLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVELHdCQUFTLEdBQVQ7UUFFSSxvQkFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFDLElBQUksQ0FBQyxXQUFXLEVBQUMsSUFBSSxDQUFDLENBQUE7SUFDdkQsQ0FBQztJQXZDRDtRQURDLFFBQVEsRUFBRTswQ0FDVztJQUhMLElBQUk7UUFEeEIsT0FBTztPQUNhLElBQUksQ0EyQ3hCO0lBQUQsV0FBQztDQTNDRCxBQTJDQyxDQTNDaUMsRUFBRSxDQUFDLFNBQVMsR0EyQzdDO2tCQTNDb0IsSUFBSSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEYXRhQ2VudGVyIGZyb20gXCIuLi9taXNjL0RhdGFDZW50ZXJcIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEQ1VJIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblxuICAgIEBwcm9wZXJ0eSgpXG4gICAgZGF0YUJpbmQ6IHN0cmluZyA9IFwiXCI7XG4gICAgb25Mb2FkKClcbiAgICB7XG4gICAgfVxuXG4gICAgc2V0RENLZXkoaylcbiAgICB7XG4gICAgICAgIHRoaXMuZGF0YUJpbmQgPSBrO1xuICAgICAgICB0aGlzLnNldExpc3RlbmVyKClcbiAgICB9XG5cblxuICAgIHNldExpc3RlbmVyKClcbiAgICB7XG4gICAgICAgIERhdGFDZW50ZXIub2ZmKHRoaXMuZGF0YUJpbmQsdGhpcy5kYXRhQ2hhbmdlZCx0aGlzKVxuICAgICAgICBEYXRhQ2VudGVyLm9uKHRoaXMuZGF0YUJpbmQsdGhpcy5kYXRhQ2hhbmdlZCx0aGlzKVxuICAgIH1cblxuICAgIG9uVmFsdWVDaGFuZ2VkKHYpXG4gICAge1xuICAgIH1cblxuICAgIHNldERDVmFsdWUodilcbiAgICB7XG4gICAgICAgIERhdGFDZW50ZXIuc2V0KHRoaXMuZGF0YUJpbmQsIHYpO1xuICAgIH1cblxuICAgIGRhdGFDaGFuZ2VkKHYsb2xkKTogYW55IHtcbiAgICAgICAgdGhpcy5vblZhbHVlQ2hhbmdlZCh2KTtcbiAgICB9XG5cbiAgICBvbkVuYWJsZSAoKSB7XG4gICAgICAgIHRoaXMuc2V0TGlzdGVuZXIoKVxuICAgICAgICB0aGlzLm9uVmFsdWVDaGFuZ2VkKERhdGFDZW50ZXIuZ2V0KHRoaXMuZGF0YUJpbmQpKTtcbiAgICB9XG5cbiAgICBvbkRpc2FibGUoKVxuICAgIHtcbiAgICAgICAgRGF0YUNlbnRlci5vZmYodGhpcy5kYXRhQmluZCx0aGlzLmRhdGFDaGFuZ2VkLHRoaXMpXG4gICAgfVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/gamesys/FSM.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '83f52qrCghNrKS6jOC/j6I0', 'FSM');
// framework/plugin_boosts/gamesys/FSM.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.State = void 0;
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var State = /** @class */ (function () {
    function State(id, name) {
        this.__interval_callbacks = [];
        this.interval_id = 0;
        this.id = id;
        this.name = name;
    }
    State.prototype.onEnter = function (params) { };
    State.prototype.onExit = function () { };
    State.prototype.onUpdate = function (dt) { };
    //messages 
    State.prototype.on = function () { };
    State.prototype.off = function () { };
    State.prototype.clearIntervals = function () {
        this.__interval_callbacks.splice(0, this.__interval_callbacks.length);
    };
    State.prototype.setInterval = function (interval, callback, target) {
        var id = ++this.interval_id;
        var timer = 0;
        this.__interval_callbacks.push({ id: id, callback: callback, target: target, interval: interval, timer: timer });
        return id;
    };
    State.prototype.clearInterval = function (id) {
        this.__interval_callbacks.splice(this.__interval_callbacks.indexOf(id));
    };
    State.prototype.setTimeout = function (delay, callback, target) {
        var id = ++this.interval_id;
        var timer = 0;
        this.__interval_callbacks.push({ id: id, callback: callback, target: target, delay: delay, timer: timer });
        return id;
    };
    State.prototype.clearTimeout = function (id) {
        this.clearInterval(id);
    };
    State.prototype.invokeIntervals = function (dt) {
        for (var i = 0; i < this.__interval_callbacks.length; i++) {
            var element = this.__interval_callbacks[i];
            element.timer = element.timer + dt;
            if (element.interval) {
                if (element.timer >= element.interval) {
                    element.timer = 0;
                    // call
                    element.callback.call(element.target);
                }
            }
            else if (element.delay) {
                if (element.timer >= element.delay) {
                    // call
                    element.callback.call(element.target);
                    this.__interval_callbacks.splice(i);
                    i--;
                }
            }
        }
    };
    return State;
}());
exports.State = State;
var CustomState = /** @class */ (function (_super) {
    __extends(CustomState, _super);
    function CustomState(target, id, name, pattern) {
        var _this = _super.call(this, id, name) || this;
        var enterName = cc.js.formatStr(pattern, "onEnter", _this.name);
        var updateName = cc.js.formatStr(pattern, "onUpdate", _this.name);
        var exitName = cc.js.formatStr(pattern, "onExit", _this.name);
        _this.__target = target;
        _this.__enterFunc = _this.__target[enterName];
        _this.__updateFunc = _this.__target[updateName];
        _this.__exitFunc = _this.__target[exitName];
        return _this;
    }
    CustomState.prototype.onEnter = function (params) {
        this.clearIntervals();
        if (this.__enterFunc) {
            this.__enterFunc.call(this.__target, this, params);
        }
    };
    CustomState.prototype.onExit = function () {
        if (this.__exitFunc) {
            this.__exitFunc.call(this.__target, this);
        }
    };
    CustomState.prototype.onUpdate = function (dt) {
        this.invokeIntervals(dt);
        if (this.__updateFunc) {
            this.__updateFunc.call(this.__target, this, dt);
        }
    };
    return CustomState;
}(State));
var FSM = /** @class */ (function (_super) {
    __extends(FSM, _super);
    function FSM() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.timeElapsed = 0;
        _this._states = {};
        _this._isPaused = false;
        _this.log = false;
        return _this;
    }
    Object.defineProperty(FSM.prototype, "target", {
        get: function () {
            return this._target;
        },
        enumerable: false,
        configurable: true
    });
    FSM.prototype.init = function (target) {
        this._target = target;
        this.timeElapsed = 0;
    };
    FSM.prototype.getState = function (stateId) {
        return this._states[stateId];
    };
    FSM.prototype.getCurrentState = function () {
        return this.c;
    };
    FSM.prototype.getPreviousState = function () {
        return this.p;
    };
    FSM.prototype.addStates = function (states, callbackNamePattern) {
        if (callbackNamePattern === void 0) { callbackNamePattern = "%s_%sState"; }
        var keys = Object.keys(states);
        var enumLen = (keys.length / 2);
        this.namePattern = callbackNamePattern;
        for (var i = 0; i < enumLen; i++) {
            var key = keys[i];
            var value = states[key];
            this.addState(key, value);
        }
    };
    FSM.prototype.addState = function (id, name, enterCallback, exitCallback, updateCallback, target) {
        if (this.log)
            console.log("[FSM]" + this.target.__classname__ + "(" + this.target.name + ")" + " Add State :", id, name);
        var state = new CustomState(this.target, id, name, this.namePattern);
        this._states[id] = state;
        if (enterCallback)
            state.__enterFunc = enterCallback;
        if (exitCallback)
            state.__exitFunc = exitCallback;
        if (updateCallback)
            state.__updateFunc = updateCallback;
        if (target)
            state.__target = target;
    };
    /**
     * first state
     * @param: state index or State
     */
    FSM.prototype.enterState = function (stateId, params) {
        this.timeElapsed = 0;
        var state = this._states[stateId];
        this.c = state;
        state.onEnter(params);
        if (this.log)
            console.log("[FSM]" + this.target.__classname__ + " First State:", state.name);
    };
    FSM.prototype.revertState = function () {
        this.changeState(this.p.id);
    };
    FSM.prototype.pause = function () {
        this._isPaused = true;
    };
    FSM.prototype.resume = function () {
        this._isPaused = false;
    };
    FSM.prototype.resetCurrentState = function () {
        this.timeElapsed = 0;
        console.log(cc.js.formatStr("[FSM] %s reset currentState", this.target.__classname__));
        this.c.onExit();
        this.c.onEnter();
    };
    FSM.prototype.changeState = function (stateId, params) {
        var state = this._states[stateId];
        if (state == null) {
            console.warn("[FSM] invalid state for stateId " + stateId + " of : " + this.target.__classname__);
            return;
        }
        if (this._isPaused) {
            console.warn("[FSM] fsm is paused ! " + this.target.__classname__ + " changeState to <" + state.name + "> failed!");
            return;
        }
        if (stateId == this.c.id)
            return;
        this.timeElapsed = 0;
        this.c.onExit();
        this.p = this.c;
        this.c = state;
        if (this.log)
            console.log(cc.js.formatStr("[FSM] %s (%s): %s -> %s", this.target.__classname__, this.name, this.p.name, state.name));
        this.c.onEnter(params);
    };
    FSM.prototype.isInState = function (stateId) {
        return this.c == this._states[stateId];
    };
    FSM.prototype.update = function (dt) {
        if (this._isPaused)
            return;
        if (FSM.debug)
            dt = 0.016; // use real deta
        this.timeElapsed += dt;
        if (this.c)
            this.c.onUpdate(dt);
    };
    FSM.debug = false;
    return FSM;
}(cc.Component));
exports.default = FSM;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/ui/View.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e1217OaHDFCEbPP4vjLJXLh', 'View');
// framework/plugin_boosts/ui/View.ts

Object.defineProperty(exports, "__esModule", { value: true });
var UIComponent_1 = require("./UIComponent");
var ViewManager_1 = require("./ViewManager");
var UIFunctions_1 = require("./UIFunctions");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var View = /** @class */ (function (_super) {
    __extends(View, _super);
    function View() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isDialog = false;
        _this.hasWidget = false;
        _this.opacity = 160;
        _this.childrenAnimation = false;
        _this.touchBlocker = null;
        _this.touchBlockerComp = null;
        // @property
        // showAnimationName:string = "";
        // @property
        // hideAnimationName:string = "";
        // @property([cc.Component.EventHandler])
        // onShownEvents:cc.Component.EventHandler[] = [];
        // @property([cc.Component.EventHandler])
        // onHiddenEvents:cc.Component.EventHandler[] = [];
        _this.animations = [];
        _this._isHiding = false;
        return _this;
    }
    // isTouchEnabled: boolean = true;
    View.prototype.emit = function (event, msg) {
        event.emit(msg);
        // this.node.emit(msg);  
    };
    View.prototype.call = function (event, exp) {
        // eval(exp);
        //g.execScript(exp);
    };
    View.prototype.setDelegate = function (target) {
        this.target = target;
    };
    View.prototype.onLoad = function () {
        this.touchBlocker = new cc.Node();
        this.touchBlocker.name = "TouchBlocker";
        this.touchBlocker.width = 2000;
        this.touchBlocker.height = 2000;
        this.touchBlockerComp = this.touchBlocker.addComponent(cc.BlockInputEvents);
        this.node.addChild(this.touchBlocker, 1000);
        if (this.childrenAnimation) {
            this.animations = UIFunctions_1.default.getChildrenAnimations(this.node);
        }
        else {
            var anim = this.node.getComponent(cc.Animation);
            if (anim)
                this.animations.push(anim);
        }
        var components = this.getComponents(cc.Component);
        for (var i = 0; i < components.length; i++) {
            var comp = components[i];
            if (comp != this) {
                if (comp.onShown || comp.onHidden) {
                    this.target = comp;
                    break;
                }
            }
        }
    };
    View.prototype.start = function () {
        this.touchEnabled = true;
    };
    View.prototype.init = function (viewname) {
        this.name = viewname;
    };
    View.prototype.hideAnimationCallback = function () {
        this.node.active = this.visible;
        ViewManager_1.default.instance.checkViewStacks();
    };
    /**
     * //如果 实现了view的animation那么需要 animation 去做隐藏
     * 否则会不会有animtion ，系统 将直接 设置 active 为false
     */
    View.prototype.doHideAnimation = function () {
        // if (!this.isDialog)
        // {
        //todo is in hide animtion return ;
        // if(this.isInHideAnimation())return;
        this.node.active = true;
        this._isHiding = true;
        if (!UIFunctions_1.default.doHideAnimations(this.animations, this.hideAnimationCallback, this)) {
            this.node.active = false;
            this._isHiding = false;
        }
        console.log("[View] hide:", this.name);
        this._visibleDirty = false;
    };
    View.prototype.isInHideAnimation = function () {
        return this._isHiding;
    };
    View.prototype.onHidden = function () {
        this._visibleDirty = false;
        if (this.target && this.target.onHidden)
            this.target.onHidden();
        // cc.Component.EventHandler.emitEvents(this.onHiddenEvents,[params]);
    };
    View.prototype.hide = function (index) {
        if (index === void 0) { index = 0; }
        // super.hide()
        //ViewManager remove dd
        if (index == 1) {
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, { title: '返回界面', content: '点击关闭' }, function () { });
        }
        else if (index == 2) {
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, { title: '关卡选择界面', content: '点击关闭' }, function () { });
        }
        this.touchEnabled = false;
        ViewManager_1.default.instance.hide(this.node);
    };
    Object.defineProperty(View.prototype, "visible", {
        get: function () { return this._visibleDirty; },
        enumerable: false,
        configurable: true
    });
    View.prototype.showAnimationNextFrame = function (callback) {
        var _this = this;
        this.scheduleOnce(function (_) {
            UIFunctions_1.default.doShowAnimations(_this.animations, callback);
        }, 0);
    };
    Object.defineProperty(View.prototype, "touchEnabled", {
        get: function () {
            return !this.touchBlocker.active;
        },
        set: function (b) {
            this.touchBlocker.active = !b;
        },
        enumerable: false,
        configurable: true
    });
    // setTouchEnabled(bEnabled){
    //     this.touchBlockerComp.enabled = bEnabled;
    //     // UIFunctions.setTouchEnabled(this.node,bEnabled);
    // }
    View.prototype.show = function () {
        var _this = this;
        var params = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            params[_i] = arguments[_i];
        }
        _super.prototype.show.call(this);
        console.log("[View] show:", this.name, params);
        UIFunctions_1.default.stopAnimations(this.animations);
        // call next frames 
        // this.showAnimationDelay()
        //确保在widget 更新结束后开始动画 ，
        return new Promise(function (resolve, reject) {
            var _a;
            var self = _this;
            var showFinishCallback = function () {
                if (!self.touchEnabled)
                    self.touchEnabled = true;
                resolve();
            };
            if (!_this.hasWidget) {
                UIFunctions_1.default.doShowAnimations(_this.animations, showFinishCallback);
            }
            else {
                _this.showAnimationNextFrame(showFinishCallback);
            }
            _this._visibleDirty = true;
            if (_this.target && _this.target.onShown) {
                (_a = _this.target).onShown.apply(_a, params);
            }
            // cc.Component.EventHandler.emitEvents(this.onShownEvents,[params]);
        });
    };
    __decorate([
        property
    ], View.prototype, "isDialog", void 0);
    __decorate([
        property
    ], View.prototype, "hasWidget", void 0);
    __decorate([
        property
    ], View.prototype, "opacity", void 0);
    __decorate([
        property
    ], View.prototype, "childrenAnimation", void 0);
    View = __decorate([
        ccclass
    ], View);
    return View;
}(UIComponent_1.default));
exports.default = View;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/plugin_boosts/utils/Common.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd6d4aCOiTtJz6R1xuSQrtdC', 'Common');
// framework/plugin_boosts/utils/Common.ts

Object.defineProperty(exports, "__esModule", { value: true });
var SpriteFrameCache_1 = require("../misc/SpriteFrameCache");
var Common = /** @class */ (function () {
    function Common() {
    }
    Common.loadJson = function (path) {
        return new Promise(function (resolve, reject) {
            cc.loader.loadRes(path, cc.JsonAsset, function (errorcode, data) {
                resolve(data.json);
            });
        });
    };
    Common.sleep = function (timeout) {
        return new Promise(function (resolve, reject) {
            setTimeout(function () {
                resolve();
            }, timeout * 1000);
        });
    };
    Common.isGreaterDays = function (before, num) {
        if (num === void 0) { num = 7; }
        var now = new Date();
        var diff = now.getTime() - before;
        if (diff > 86400000 * num) // 24*60*60*1000
         {
            return true;
        }
    };
    Common.setDisplay = function (sp, url) {
        SpriteFrameCache_1.default.instance.getSpriteFrame(url).then(function (sf) { sp.spriteFrame = sf; });
    };
    Common.generate_action = function (params) {
        var scale_action = cc.scaleTo(params.time, params.scale_x, params.scale_y);
        return scale_action;
    };
    //弹性效果 果冻效果 
    Common.jellyJump = function (node) {
        var spawn_action1 = this.generate_action({ time: 0.06, scale_x: 0.7, scale_y: 0.7, scale_z: 1 });
        // let  spawn_action2 = this.generate_action({time : 0.12, scale_x : 1.3, scale_y  :1.3, scale_z :1})
        var spawn_action3 = this.generate_action({ time: 0.07, scale_x: 1, scale_y: 1.4, scale_z: 1 });
        // let  spawn_action4 = this.generate_action({time : 0.07, scale_x : 1.3, scale_y  :1.3, scale_z: 1})
        // let  spawn_action5 = this.generate_action({time : 0.07, scale_x : 1.2, scale_y : 1.2, scale_z : 1})
        var spawn_action5 = cc.scaleTo(0.8, 1.3).easing(cc.easeElasticOut(0.3));
        var seq_actions = cc.sequence(spawn_action1, 
        //  spawn_action2,
        spawn_action3, 
        // spawn_action4,
        spawn_action5);
        node.runAction(seq_actions);
    };
    Common.jellyJump2 = function (node, from, scale) {
        node.scale = from;
        var act = cc.scaleTo(0.8, scale, scale).easing(cc.easeElasticOut(0.3));
        node.runAction(act);
    };
    Common.moveBezier = function (prefab, from, to, callback, dur, delay) {
        if (callback === void 0) { callback = null; }
        if (dur === void 0) { dur = 1; }
        if (delay === void 0) { delay = 0; }
        var sprite = cc.instantiate(prefab);
        sprite.opacity = 255;
        sprite.setPosition(from);
        var bezier = [];
        var x = from.x, y = from.y;
        var ex = to.x, ey = to.y;
        bezier[0] = cc.v2(x, y);
        bezier[1] = cc.v2(x + Math.abs(ex - x + 100) * 0.5, y + Math.abs(ey - y + 100) * 0.5);
        bezier[2] = cc.v2(ex, ey);
        sprite.runAction(cc.sequence(cc.delayTime(delay), cc.bezierTo(dur, bezier), cc.fadeOut(0.3), cc.callFunc(callback)));
        return sprite;
    };
    return Common;
}());
exports.default = Common;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxwbHVnaW5fYm9vc3RzXFx1dGlsc1xcQ29tbW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw2REFBd0Q7QUFFeEQ7SUFBQTtJQWtGQSxDQUFDO0lBaEZVLGVBQVEsR0FBZixVQUFnQixJQUFJO1FBRWhCLE9BQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUMsTUFBTTtZQUM5QixFQUFFLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBQyxVQUFDLFNBQVMsRUFBQyxJQUFJO2dCQUNoRCxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO1lBQ3RCLENBQUMsQ0FBQyxDQUFBO1FBQ04sQ0FBQyxDQUFDLENBQUE7SUFDTixDQUFDO0lBRU0sWUFBSyxHQUFaLFVBQWEsT0FBTztRQUVoQixPQUFPLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFDLE1BQU07WUFDOUIsVUFBVSxDQUFDO2dCQUNQLE9BQU8sRUFBRSxDQUFBO1lBQ2IsQ0FBQyxFQUFFLE9BQU8sR0FBRyxJQUFJLENBQUMsQ0FBQTtRQUN0QixDQUFDLENBQUMsQ0FBQTtJQUVOLENBQUM7SUFFTSxvQkFBYSxHQUFwQixVQUFxQixNQUFNLEVBQUUsR0FBTztRQUFQLG9CQUFBLEVBQUEsT0FBTztRQUVoQyxJQUFJLEdBQUcsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ3JCLElBQUksSUFBSSxHQUFHLEdBQUcsQ0FBQyxPQUFPLEVBQUUsR0FBRyxNQUFNLENBQUE7UUFDakMsSUFBRyxJQUFJLEdBQUcsUUFBUSxHQUFHLEdBQUcsRUFBRSxnQkFBZ0I7U0FDMUM7WUFDSSxPQUFPLElBQUksQ0FBQztTQUNmO0lBQ0wsQ0FBQztJQUVNLGlCQUFVLEdBQWpCLFVBQWtCLEVBQUUsRUFBQyxHQUFHO1FBRXBCLDBCQUFnQixDQUFDLFFBQVEsQ0FBQyxjQUFjLENB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Q0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQTtRQUNsRixNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUE7UUFFekIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLEVBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBQyxFQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUNuSCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBRUwsYUFBQztBQUFELENBbEZBLEFBa0ZDLElBQUEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3ByaXRlRnJhbWVDYWNoZSBmcm9tIFwiLi4vbWlzYy9TcHJpdGVGcmFtZUNhY2hlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbW1vblxue1xuICAgIHN0YXRpYyBsb2FkSnNvbihwYXRoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntcbiAgICAgICAgICAgIGNjLmxvYWRlci5sb2FkUmVzKHBhdGggLGNjLkpzb25Bc3NldCwoZXJyb3Jjb2RlLGRhdGEpPT57XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShkYXRhLmpzb24pXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHN0YXRpYyBzbGVlcCh0aW1lb3V0KVxuICAgIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKVxuICAgICAgICAgICAgfSwgdGltZW91dCAqIDEwMDApXG4gICAgICAgIH0pXG4gICAgICAgIFxuICAgIH1cblxuICAgIHN0YXRpYyBpc0dyZWF0ZXJEYXlzKGJlZm9yZSwgbnVtID0gNylcbiAgICB7XG4gICAgICAgIGxldCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgICAgICB2YXIgZGlmZiA9IG5vdy5nZXRUaW1lKCkgLSBiZWZvcmVcbiAgICAgICAgaWYoZGlmZiA+IDg2NDAwMDAwICogbnVtKSAvLyAyNCo2MCo2MCoxMDAwXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc3RhdGljIHNldERpc3BsYXkoc3AsdXJsKVxuICAgIHtcbiAgICAgICAgU3ByaXRlRnJhbWVDYWNoZS5pbnN0YW5jZS5nZXRTcHJpdGVGcmFtZSh1cmwpLnRoZW4oc2Y9PntzcC5zcHJpdGVGcmFtZSA9IHNmfSlcbiAgICB9XG5cblxuICAgIHN0YXRpYyBnZW5lcmF0ZV9hY3Rpb24ocGFyYW1zKXtcbiAgICAgICAgbGV0IHNjYWxlX2FjdGlvbiA9IGNjLnNjYWxlVG8ocGFyYW1zLnRpbWUsIHBhcmFtcy5zY2FsZV94LCBwYXJhbXMuc2NhbGVfeSlcbiAgICAgICAgcmV0dXJuIHNjYWxlX2FjdGlvblxuICAgIH1cblxuICAgIC8v5by55oCn5pWI5p6cIOaenOWGu+aViOaenCBcbiAgICBzdGF0aWMgIGplbGx5SnVtcChub2RlKVxuICAgIHtcbiAgICAgICAgbGV0ICBzcGF3bl9hY3Rpb24xID0gdGhpcy5nZW5lcmF0ZV9hY3Rpb24oe3RpbWUgOiAwLjA2LCBzY2FsZV94IDogMC43LCBzY2FsZV95IDogMC43LCBzY2FsZV96OiAxfSlcbiAgICAgICAgLy8gbGV0ICBzcGF3bl9hY3Rpb24yID0gdGhpcy5nZW5lcmF0ZV9hY3Rpb24oe3RpbWUgOiAwLjEyLCBzY2FsZV94IDogMS4zLCBzY2FsZV95ICA6MS4zLCBzY2FsZV96IDoxfSlcbiAgICAgICAgbGV0ICBzcGF3bl9hY3Rpb24zID0gdGhpcy5nZW5lcmF0ZV9hY3Rpb24oe3RpbWUgOiAwLjA3LCBzY2FsZV94IDogMSwgc2NhbGVfeSAgOjEuNCwgc2NhbGVfeiA6MX0pXG4gICAgICAgIC8vIGxldCAgc3Bhd25fYWN0aW9uNCA9IHRoaXMuZ2VuZXJhdGVfYWN0aW9uKHt0aW1lIDogMC4wNywgc2NhbGVfeCA6IDEuMywgc2NhbGVfeSAgOjEuMywgc2NhbGVfejogMX0pXG4gICAgICAgIC8vIGxldCAgc3Bhd25fYWN0aW9uNSA9IHRoaXMuZ2VuZXJhdGVfYWN0aW9uKHt0aW1lIDogMC4wNywgc2NhbGVfeCA6IDEuMiwgc2NhbGVfeSA6IDEuMiwgc2NhbGVfeiA6IDF9KVxuICAgICAgICBsZXQgc3Bhd25fYWN0aW9uNSA9IGNjLnNjYWxlVG8oMC44LCAxLjMpLmVhc2luZyhjYy5lYXNlRWxhc3RpY091dCgwLjMpKTtcbiAgICAgICAgbGV0ICBzZXFfYWN0aW9ucyA9IGNjLnNlcXVlbmNlKHNwYXduX2FjdGlvbjEsXG4gICAgICAgICAgICAvLyAgc3Bhd25fYWN0aW9uMixcbiAgICAgICAgICAgICAgICBzcGF3bl9hY3Rpb24zLFxuICAgICAgICAgICAgICAgIC8vIHNwYXduX2FjdGlvbjQsXG4gICAgICAgICAgICAgICAgc3Bhd25fYWN0aW9uNSlcbiAgICAgICAgbm9kZS5ydW5BY3Rpb24oc2VxX2FjdGlvbnMpO1xuICAgIH1cblxuICAgIHN0YXRpYyBqZWxseUp1bXAyKG5vZGUsZnJvbSxzY2FsZSlcbiAgICB7XG4gICAgICAgIG5vZGUuc2NhbGUgPSBmcm9tO1xuICAgICAgICBsZXQgYWN0ID0gY2Muc2NhbGVUbygwLjgsIHNjYWxlLHNjYWxlKS5lYXNpbmcoY2MuZWFzZUVsYXN0aWNPdXQoMC4zKSk7XG4gICAgICAgIG5vZGUucnVuQWN0aW9uKGFjdClcbiAgICB9XG5cbiAgICBzdGF0aWMgbW92ZUJlemllcihwcmVmYWIsZnJvbSx0byxjYWxsYmFjayA9IG51bGwsZHVyID0gMSxkZWxheSA9IDApe1xuICAgICAgICBsZXQgc3ByaXRlID0gY2MuaW5zdGFudGlhdGUocHJlZmFiKVxuICAgICAgICBzcHJpdGUub3BhY2l0eSA9IDI1NTtcbiAgICAgICAgc3ByaXRlLnNldFBvc2l0aW9uKGZyb20pXG5cbiAgICAgICAgbGV0IGJlemllciA9IFtdXG4gICAgICAgIGxldCB4ID0gZnJvbS54LCB5ID0gZnJvbS55XG4gICAgICAgIGxldCBleCA9IHRvLngsIGV5ID0gdG8ueTtcbiAgICAgICAgYmV6aWVyWzBdID0gY2MudjIoeCwgeSlcbiAgICAgICAgYmV6aWVyWzFdID0gY2MudjIoeCArIE1hdGguYWJzKGV4IC0geCsgMTAwKSAqIDAuNSwgeSArIE1hdGguYWJzKGV5IC0geSsxMDApICogMC41KVxuICAgICAgICBiZXppZXJbMl0gPSBjYy52MihleCwgZXkpXG5cbiAgICAgICAgc3ByaXRlLnJ1bkFjdGlvbihjYy5zZXF1ZW5jZShjYy5kZWxheVRpbWUoZGVsYXkpLGNjLmJlemllclRvKGR1ciwgYmV6aWVyKSAsIGNjLmZhZGVPdXQoMC4zKSxjYy5jYWxsRnVuYyhjYWxsYmFjaykpKVxuICAgICAgICByZXR1cm4gc3ByaXRlO1xuICAgIH1cblxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/result/revive.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ec134IHnxVI363+v185uOut', 'revive');
// gameComon/result/revive.js

"use strict";

var backBtnTimeOut;
var continueBtnTimeOut;
var countDownInterval;
cc.Class({
  "extends": cc.Component,
  properties: {
    reviveBtn: cc.Button,
    backBtn: cc.Button,
    clock: cc.Node,
    reviveBtnCallback: null,
    backBtnCallback: null
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.reviveBtn.node.on(cc.Node.EventType.TOUCH_END, this.onReviveBtnClicked, this);
    this.backBtn.node.on(cc.Node.EventType.TOUCH_END, this.onBackBtnClicked, this);
  },
  start: function start() {},

  /**
   * @param opts
   * backCB 放弃按钮回调
   * reviveCB 复活按钮回调
   */
  show: function show(opts) {
    opts = opts || {};

    if (opts.reviveCB) {
      this.reviveBtnCallback = opts.reviveCB;
    }

    if (opts.backCB) {
      this.backBtnCallback = opts.backCB;
    }

    if (opts.config) {
      this.reviveConfig = opts.config;
    }

    this.refreshUI();
  },
  refreshUI: function refreshUI() {
    this._count = 0;
    this.clock.getComponent(cc.ProgressBar).progress = 1;

    if (this.reviveConfig.countdown) {
      this.updateTime(1, this.reviveConfig.countdown, this.reviveConfig.countdown);
    }

    if (this.reviveConfig.btn1) {
      this.reviveBtn.node.getChildByName('Background').getChildByName('New Label').getComponent(cc.Label).string = this.reviveConfig.btn1.name;
      this.reviveBtn.node.getChildByName('Background').getChildByName('icon').active = this.reviveConfig.btn1.icon;
      clearTimeout(continueBtnTimeOut);

      if (this.reviveConfig.btn1.delayTime >= 0) {
        continueBtnTimeOut = setTimeout(function () {
          this.reviveBtn.node.active = true;
        }.bind(this), this.reviveConfig.btn1.delayTime * 1000);
      }
    }

    if (this.reviveConfig.btn2) {
      this.backBtn.node.getChildByName('Background').getChildByName('New Label').getComponent(cc.Label).string = this.reviveConfig.btn2.name;
      this.backBtn.node.getChildByName('Background').getChildByName('icon').active = this.reviveConfig.btn2.icon;
      this.backBtn.node.active = false;
      clearTimeout(backBtnTimeOut);

      if (this.reviveConfig.btn2.delayTime >= 0) {
        backBtnTimeOut = setTimeout(function () {
          this.backBtn.node.active = true;
        }.bind(this), this.reviveConfig.btn2.delayTime * 1000);
      }
    }

    if (appGame.interstitialAd) {
      appGame.interstitialAd.playAd();
    }

    appGame.banner.playBanner(2);
    appGame.appBoxAd.playBox(true);
    appGame.blockAd.playBlockad(true, 4);
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '复活',
      content: '打开复活界面'
    }, function () {});
  },
  onReviveBtnClicked: function onReviveBtnClicked(event) {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '复活',
      content: '复活',
      desc: '点击'
    }, function () {});
    var isPlayVideo = false;
    var isForce = true;

    if (this.reviveConfig) {
      isPlayVideo = this.reviveConfig.btn1.video;
      isForce = this.reviveConfig.btn1.force;
    }

    if (isPlayVideo) {
      appGame.videoBanner.playVideoAd(2, isForce, function (isSuc) {
        console.log("看视频成功");
        this.reviveBtnCallback && this.reviveBtnCallback();
        this.hide();
      }.bind(this));
    } else {
      this.reviveBtnCallback && this.reviveBtnCallback();
      this.hide();
    }
  },
  onBackBtnClicked: function onBackBtnClicked(event) {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '复活',
      content: '返回',
      desc: '点击'
    }, function () {});
    var isPlayVideo = false;
    var isForce = true;

    if (this.reviveConfig) {
      isPlayVideo = this.reviveConfig.btn2.video;
      isForce = this.reviveConfig.btn2.force;
    }

    if (isPlayVideo) {
      //配置需要播放视频
      appGame.videoBanner.playVideoAd(2, isForce, function (isSuc) {
        console.log("看视频成功");
        this.backBtnCallback && this.backBtnCallback();
        this.hide();
      }.bind(this));
    } else {
      //不用播放视频
      this.backBtnCallback && this.backBtnCallback();
      this.hide();
    }
  },
  updateTime: function updateTime(type, count, totalcount) {
    if (type == 1) {
      //开始倒计时
      count = count * 1000;
      totalcount = totalcount * 1000;
      var durationtime = 100;
      this._count = count;

      if (this.clock) {
        this.clock.getComponent(cc.ProgressBar).progress = this._count / totalcount;
      }

      clearInterval(countDownInterval);
      countDownInterval = setInterval(function () {
        if (this._count > durationtime) {
          this._count -= durationtime;
        } else {
          this._count = 0;
          clearInterval(countDownInterval);
          this.backBtnCallback && this.backBtnCallback();
          this.hide();
        }

        if (this.clock) {
          this.clock.getComponent(cc.ProgressBar).progress = this._count / totalcount;
        }
      }.bind(this), durationtime);
    } else {
      //关闭倒计时
      clearInterval(countDownInterval);
    }
  },
  hide: function hide() {
    httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
      title: '复活',
      content: '关闭复活界面'
    }, function () {});
    appGame.banner.playBanner(3);
    appGame.appBoxAd.playBox(false);
    appGame.blockAd.playBlockad(false);
    clearInterval(countDownInterval);
    clearTimeout(backBtnTimeOut);
    clearTimeout(continueBtnTimeOut);
    this.node.removeFromParent();
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/screenRecord/screenrecordHand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4bca2MgtetMQYn5yd8otlgf', 'screenrecordHand');
// gameComon/screenRecord/screenrecordHand.js

"use strict";

// Learn cc.Class:
//  - https://docs.cocos.com/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
var recorder;
var videoPathGame;
var countDownTimeOut;
cc.Class({
  "extends": cc.Component,
  properties: {
    screenSprite: [cc.SpriteFrame]
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    //true可点击   false不可点击
    this.isClick = true; //1 可以点击录屏   2 正在录屏中   3分享

    this.screenStatus = 1;
    this.node.on(cc.Node.EventType.TOUCH_END, this.screenBtnCallBack, this);
    this.initRefreshUI();

    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
      this.node.active = true;
    } else {
      this.node.active = false;
    }
  },
  onDestroy: function onDestroy() {
    clearTimeout(countDownTimeOut);
  },
  initRefreshUI: function initRefreshUI() {
    if (this.screenStatus == 3) {
      this.node.getChildByName('Background').getComponent(cc.Sprite).spriteFrame = this.screenSprite[2];
    } else if (this.screenStatus == 2) {
      this.node.getChildByName('Background').getComponent(cc.Sprite).spriteFrame = this.screenSprite[1];
    } else {
      this.node.getChildByName('Background').getComponent(cc.Sprite).spriteFrame = this.screenSprite[0];
    }
  },
  screenBtnCallBack: function screenBtnCallBack(event) {
    if (!this.isClick) {
      //录屏时间太短   不能点击
      appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_LOADTIP, {
        content: "录屏时间太短！！！"
      });
      return;
    }

    if (this.screenStatus == 1) {
      //点击录屏
      this.screenStatus = 2;
    } else if (this.screenStatus == 2) {
      //点击录屏中
      this.screenStatus = 3;
    } else if (this.screenStatus == 3) {
      //点击分享
      this.screenStatus = 1;
    }

    if (this.screenStatus == 2) {
      this.isClick = false;
    }

    countDownTimeOut = setTimeout(function () {
      this.isClick = true;
      clearTimeout(countDownTimeOut);
    }.bind(this), 5000);
    this.initRefreshUI();

    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
      //头条平台
      if (this.screenStatus == 1) {
        if (videoPathGame == null) {
          appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_LOADTIP, {
            content: "录屏时间太短！！！"
          });
          return;
        }

        if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
          //头条平台
          tt.shareAppMessage({
            channel: 'video',
            title: consts.HTTP_RECORD_PACKAGENAME,
            imageUrl: '',
            query: '',
            extra: {
              videoPath: videoPathGame,
              // 可用录屏得到的视频地址
              videoTopics: ['大家一起来玩' + consts.HTTP_RECORD_PACKAGENAME + '！！！']
            },
            success: function success() {
              console.log('分享视频成功');
            },
            fail: function fail(e) {
              console.log('分享视频失败');
              appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_LOADTIP, {
                content: "分享视频失败"
              });
            }
          });
        }
      } else if (this.screenStatus == 2) {
        if (!recorder) recorder = tt.getGameRecorderManager();
        recorder.start({
          duration: 100000
        });
        recorder.onStart(function (res) {
          console.log('开始录屏');
        });
        recorder.onStop(function (res) {
          console.log(res.videoPath);
          videoPathGame = res.videoPath;
          console.log('录屏结束');
        });
      } else if (this.screenStatus == 3) {
        if (!recorder) recorder = tt.getGameRecorderManager();
        recorder.stop();
        recorder.onStop(function (res) {
          videoPathGame = res.videoPath;
          console.log('手动停止录屏===' + res.videoPath);
        });
      }
    }
  },
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JlZW5SZWNvcmRcXHNjcmVlbnJlY29yZEhhbmQuanMiXSwibmFtZXMiOlsicmVjb3JkZXIiLCJ2aWRlb1BhdGhHYW1lIiwiY291bnREb3duVGltZU91dCIsImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwic2NyZWVuU3ByaXRlIiwiU3ByaXRlRnJhbWUiLCJvbkxvYWQiLCJpc0NsaWNrIiwic2NyZWVuU3RhdHVzIiwibm9kZSIsIm9uIiwiTm9kZSIsIkV2ZW50VHlwZSIsIlRPVUNIX0VORCIsInNjcmVlbkJ0bkNhbGxCYWNrIiwiaW5pdFJlZnJlc2hVSSIsInN5cyIsInBsYXRmb3JtIiwiQllURURBTkNFX0dBTUUiLCJhY3RpdmUiLCJvbkRlc3Ryb3kiLCJjbGVhclRpbWVvdXQiLCJnZXRDaGlsZEJ5TmFtZSIsImdldENvbXBvbmVudCIsIlNwcml0ZSIsInNwcml0ZUZyYW1lIiwiZXZlbnQiLCJhcHBHYW1lIiwiZW1pdHRlciIsImVtaXQiLCJjb25zdHMiLCJMT0NBTF9FVkVOVF9QT1BVUF9MT0FEVElQIiwiY29udGVudCIsInNldFRpbWVvdXQiLCJiaW5kIiwidHQiLCJzaGFyZUFwcE1lc3NhZ2UiLCJjaGFubmVsIiwidGl0bGUiLCJIVFRQX1JFQ09SRF9QQUNLQUdFTkFNRSIsImltYWdlVXJsIiwicXVlcnkiLCJleHRyYSIsInZpZGVvUGF0aCIsInZpZGVvVG9waWNzIiwic3VjY2VzcyIsImNvbnNvbGUiLCJsb2ciLCJmYWlsIiwiZSIsImdldEdhbWVSZWNvcmRlck1hbmFnZXIiLCJzdGFydCIsImR1cmF0aW9uIiwib25TdGFydCIsInJlcyIsIm9uU3RvcCIsInN0b3AiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSUEsUUFBSjtBQUNBLElBQUlDLGFBQUo7QUFDQSxJQUFJQyxnQkFBSjtBQUNBQyxFQUFFLENBQUND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QUFySEssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gY2MuQ2xhc3M6XHJcbi8vICAtIGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2NsYXNzLmh0bWxcclxuLy8gTGVhcm4gQXR0cmlidXRlOlxyXG4vLyAgLSBodHRwczovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBodHRwczovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbnZhciByZWNvcmRlcjtcclxudmFyIHZpZGVvUGF0aEdhbWU7XHJcbnZhciBjb3VudERvd25UaW1lT3V0O1xyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIHNjcmVlblNwcml0ZTpbY2MuU3ByaXRlRnJhbWVdXHJcbiAgICB9LFxyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgLy90cnVl5Y+v54K55Ye7ICAgZmFsc2XkuI3lj6/ngrnlh7tcclxuICAgICAgICB0aGlzLmlzQ2xpY2sgPSB0cnVlO1xyXG4gICAgICAgIC8vMSDlj6/ku6Xngrnlh7vlvZXlsY8gICAyIOato+WcqOW9leWxj+S4rSAgIDPliIbkuqtcclxuICAgICAgICB0aGlzLnNjcmVlblN0YXR1cyA9IDE7XHJcbiAgICAgICAgdGhpcy5ub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCx0aGlzLnNjcmVlbkJ0bkNhbGxCYWNrLHRoaXMpO1xyXG4gICAgICAgIHRoaXMuaW5pdFJlZnJlc2hVSSgpO1xyXG4gICAgICAgIGlmKGNjLnN5cy5wbGF0Zm9ybSA9PSBjYy5zeXMuQllURURBTkNFX0dBTUUpe1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgb25EZXN0cm95KCl7XHJcbiAgICAgICAgY2xlYXJUaW1lb3V0KGNvdW50RG93blRpbWVPdXQpO1xyXG4gICAgfSxcclxuXHJcbiAgICBpbml0UmVmcmVzaFVJKCl7XHJcbiAgICAgICAgaWYodGhpcy5zY3JlZW5TdGF0dXMgPT0zKXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKCdCYWNrZ3JvdW5kJykuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuc3ByaXRlRnJhbWUgPSB0aGlzLnNjcmVlblNwcml0ZVsyXTtcclxuICAgICAgICB9ZWxzZSBpZih0aGlzLnNjcmVlblN0YXR1cyA9PTIpe1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoJ0JhY2tncm91bmQnKS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5zcHJpdGVGcmFtZSA9IHRoaXMuc2NyZWVuU3ByaXRlWzFdO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoJ0JhY2tncm91bmQnKS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5zcHJpdGVGcmFtZSA9IHRoaXMuc2NyZWVuU3ByaXRlWzBdO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgc2NyZWVuQnRuQ2FsbEJhY2soZXZlbnQpe1xyXG4gICAgICAgIGlmKCF0aGlzLmlzQ2xpY2speyAvL+W9leWxj+aXtumXtOWkquefrSAgIOS4jeiDveeCueWHu1xyXG4gICAgICAgICAgICBhcHBHYW1lLmVtaXR0ZXIuZW1pdChjb25zdHMuTE9DQUxfRVZFTlRfUE9QVVBfTE9BRFRJUCwge1xyXG4gICAgICAgICAgICAgICAgY29udGVudDpcIuW9leWxj+aXtumXtOWkquefre+8ge+8ge+8gVwiXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHRoaXMuc2NyZWVuU3RhdHVzID09IDEpey8v54K55Ye75b2V5bGPXHJcbiAgICAgICAgICAgIHRoaXMuc2NyZWVuU3RhdHVzID0gMjtcclxuICAgICAgICB9ZWxzZSBpZih0aGlzLnNjcmVlblN0YXR1cyA9PSAyKXsvL+eCueWHu+W9leWxj+S4rVxyXG4gICAgICAgICAgICB0aGlzLnNjcmVlblN0YXR1cyA9IDM7XHJcbiAgICAgICAgfWVsc2UgaWYodGhpcy5zY3JlZW5TdGF0dXMgPT0gMyl7Ly/ngrnlh7vliIbkuqtcclxuICAgICAgICAgICAgdGhpcy5zY3JlZW5TdGF0dXMgPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0aGlzLnNjcmVlblN0YXR1cz09Mil7XHJcbiAgICAgICAgICAgIHRoaXMuaXNDbGljayA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb3VudERvd25UaW1lT3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdGhpcy5pc0NsaWNrID0gdHJ1ZTtcclxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGNvdW50RG93blRpbWVPdXQpO1xyXG4gICAgICAgIH0uYmluZCh0aGlzKSwgNTAwMCk7XHJcbiAgICAgICAgdGhpcy5pbml0UmVmcmVzaFVJKClcclxuICAgICAgICBpZihjYy5zeXMucGxhdGZvcm0gPT0gY2Muc3lzLkJZVEVEQU5DRV9HQU1FKXsgLy/lpLTmnaHlubPlj7BcclxuICAgICAgICAgICAgaWYodGhpcy5zY3JlZW5TdGF0dXM9PTEpe1xyXG4gICAgICAgICAgICAgICAgaWYodmlkZW9QYXRoR2FtZT09bnVsbCl7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwR2FtZS5lbWl0dGVyLmVtaXQoY29uc3RzLkxPQ0FMX0VWRU5UX1BPUFVQX0xPQURUSVAsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCLlvZXlsY/ml7bpl7TlpKrnn63vvIHvvIHvvIFcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKGNjLnN5cy5wbGF0Zm9ybSA9PSBjYy5zeXMuQllURURBTkNFX0dBTUUpeyAvL+WktOadoeW5s+WPsFxyXG4gICAgICAgICAgICAgICAgICAgIHR0LnNoYXJlQXBwTWVzc2FnZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5uZWw6ICd2aWRlbycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBjb25zdHMuSFRUUF9SRUNPUkRfUEFDS0FHRU5BTUUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlVXJsOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnk6ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBleHRyYToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9QYXRoOiB2aWRlb1BhdGhHYW1lLCAvLyDlj6/nlKjlvZXlsY/lvpfliLDnmoTop4bpopHlnLDlnYBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvVG9waWNzOiBbJ+Wkp+WutuS4gOi1t+adpeeOqScrY29uc3RzLkhUVFBfUkVDT1JEX1BBQ0tBR0VOQU1FKyfvvIHvvIHvvIEnXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+WIhuS6q+inhumikeaIkOWKnycpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmYWlsKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfliIbkuqvop4bpopHlpLHotKUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwcEdhbWUuZW1pdHRlci5lbWl0KGNvbnN0cy5MT0NBTF9FVkVOVF9QT1BVUF9MT0FEVElQLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCLliIbkuqvop4bpopHlpLHotKVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfWVsc2UgaWYodGhpcy5zY3JlZW5TdGF0dXM9PTIpe1xyXG4gICAgICAgICAgICAgICAgaWYoIXJlY29yZGVyKSByZWNvcmRlciA9IHR0LmdldEdhbWVSZWNvcmRlck1hbmFnZXIoKTtcclxuICAgICAgICAgICAgICAgIHJlY29yZGVyLnN0YXJ0KHtcclxuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMDAwLFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgcmVjb3JkZXIub25TdGFydChyZXMgPT57XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+W8gOWni+W9leWxjycpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICAgICByZWNvcmRlci5vblN0b3AocmVzID0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy52aWRlb1BhdGgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZpZGVvUGF0aEdhbWUgPSByZXMudmlkZW9QYXRoO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCflvZXlsY/nu5PmnZ8nKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZih0aGlzLnNjcmVlblN0YXR1cz09Myl7XHJcbiAgICAgICAgICAgICAgICBpZighcmVjb3JkZXIpIHJlY29yZGVyID0gdHQuZ2V0R2FtZVJlY29yZGVyTWFuYWdlcigpO1xyXG4gICAgICAgICAgICAgICAgcmVjb3JkZXIuc3RvcCgpO1xyXG4gICAgICAgICAgICAgICAgcmVjb3JkZXIub25TdG9wKChyZXMpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB2aWRlb1BhdGhHYW1lID0gcmVzLnZpZGVvUGF0aDtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5omL5Yqo5YGc5q2i5b2V5bGPPT09JysgcmVzLnZpZGVvUGF0aClcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcblxyXG4gICAgfSxcclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/platformFun.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '84833vJXhNMwZQ8web99yS6', 'platformFun');
// gameComon/scripts/platformFun.js

"use strict";

module.exports = {
  subscribeService: function subscribeService() {
    if (cc.sys.platform == cc.sys.BAIDU_GAME) {
      swan.subscribeService({
        templateId: '7519c8966fdd442d93cec1e0a30c3521',
        subscribeId: '1234',
        type: 'query',
        success: function success(res) {
          swan.showModal({
            title: 'success',
            content: JSON.stringify(res)
          });
        },
        fail: function fail(err) {
          swan.showModal({
            title: 'fail',
            content: JSON.stringify(err)
          });
        }
      });
    }
  }
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JpcHRzXFxwbGF0Zm9ybUZ1bi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic3Vic2NyaWJlU2VydmljZSIsImNjIiwic3lzIiwicGxhdGZvcm0iLCJCQUlEVV9HQU1FIiwic3dhbiIsInRlbXBsYXRlSWQiLCJzdWJzY3JpYmVJZCIsInR5cGUiLCJzdWNjZXNzIiwicmVzIiwic2hvd01vZGFsIiwidGl0bGUiLCJjb250ZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImZhaWwiLCJlcnIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxnQkFBZ0IsRUFBRSw0QkFBWTtBQUMxQixRQUFHQyxFQUFFLENBQUNDLEdBQUgsQ0FBT0MsUUFBUCxJQUFtQkYsRUFBRSxDQUFDQyxHQUFILENBQU9FLFVBQTdCLEVBQXdDO0FBQ3BDQyxNQUFBQSxJQUFJLENBQUNMLGdCQUFMLENBQXNCO0FBQ2xCTSxRQUFBQSxVQUFVLEVBQUUsa0NBRE07QUFFbEJDLFFBQUFBLFdBQVcsRUFBRSxNQUZLO0FBR2xCQyxRQUFBQSxJQUFJLEVBQUUsT0FIWTtBQUlsQkMsUUFBQUEsT0FKa0IsbUJBSVZDLEdBSlUsRUFJTDtBQUNUTCxVQUFBQSxJQUFJLENBQUNNLFNBQUwsQ0FBZTtBQUNYQyxZQUFBQSxLQUFLLEVBQUUsU0FESTtBQUVYQyxZQUFBQSxPQUFPLEVBQUVDLElBQUksQ0FBQ0MsU0FBTCxDQUFlTCxHQUFmO0FBRkUsV0FBZjtBQUlILFNBVGlCO0FBVWxCTSxRQUFBQSxJQVZrQixnQkFVYkMsR0FWYSxFQVVSO0FBQ05aLFVBQUFBLElBQUksQ0FBQ00sU0FBTCxDQUFlO0FBQ1hDLFlBQUFBLEtBQUssRUFBRSxNQURJO0FBRVhDLFlBQUFBLE9BQU8sRUFBRUMsSUFBSSxDQUFDQyxTQUFMLENBQWVFLEdBQWY7QUFGRSxXQUFmO0FBSUg7QUFmaUIsT0FBdEI7QUFpQkg7QUFDSjtBQXJCWSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBzdWJzY3JpYmVTZXJ2aWNlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYoY2Muc3lzLnBsYXRmb3JtID09IGNjLnN5cy5CQUlEVV9HQU1FKXtcclxuICAgICAgICAgICAgc3dhbi5zdWJzY3JpYmVTZXJ2aWNlKHtcclxuICAgICAgICAgICAgICAgIHRlbXBsYXRlSWQ6ICc3NTE5Yzg5NjZmZGQ0NDJkOTNjZWMxZTBhMzBjMzUyMScsXHJcbiAgICAgICAgICAgICAgICBzdWJzY3JpYmVJZDogJzEyMzQnLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogJ3F1ZXJ5JyxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3MocmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3dhbi5zaG93TW9kYWwoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ3N1Y2Nlc3MnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBKU09OLnN0cmluZ2lmeShyZXMpXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZmFpbChlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICBzd2FuLnNob3dNb2RhbCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnZmFpbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IEpTT04uc3RyaW5naWZ5KGVycilcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/screenRecord/screenShareAuto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3d67dGKle9P9Yia7x4UYtLi', 'screenShareAuto');
// gameComon/screenRecord/screenShareAuto.js

"use strict";

// Learn cc.Class:
//  - https://docs.cocos.com/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
var recorder;
var videoPathGame;
cc.Class({
  "extends": cc.Component,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.node.on(cc.Node.EventType.TOUCH_END, this.shareBtnCallBack, this);

    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
      this.node.active = true;
    } else {
      this.node.active = false;
    }
  },
  onDestroy: function onDestroy() {},
  shareBtnCallBack: function shareBtnCallBack(event) {
    console.log("appGame.isClick", appGame.isClick);

    if (appGame.screenPath == null || appGame.isClick == false) {
      appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_LOADTIP, {
        content: "录屏时间太短！！！"
      });
      return;
    }

    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
      //头条平台
      console.log("头条平台===", appGame.screenPath);
      tt.shareAppMessage({
        channel: 'video',
        title: consts.HTTP_RECORD_PACKAGENAME,
        imageUrl: '',
        query: '',
        extra: {
          videoPath: appGame.screenPath,
          // 可用录屏得到的视频地址
          videoTopics: ['大家一起来玩' + consts.HTTP_RECORD_PACKAGENAME + '！！！']
        },
        success: function success() {
          console.log('分享视频成功');
        },
        fail: function fail(e) {
          appGame.emitter.emit(consts.LOCAL_EVENT_POPUP_LOADTIP, {
            content: "分享视频失败"
          });
        }
      });
    }
  },
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JlZW5SZWNvcmRcXHNjcmVlblNoYXJlQXV0by5qcyJdLCJuYW1lcyI6WyJyZWNvcmRlciIsInZpZGVvUGF0aEdhbWUiLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIm9uTG9hZCIsIm5vZGUiLCJvbiIsIk5vZGUiLCJFdmVudFR5cGUiLCJUT1VDSF9FTkQiLCJzaGFyZUJ0bkNhbGxCYWNrIiwic3lzIiwicGxhdGZvcm0iLCJCWVRFREFOQ0VfR0FNRSIsImFjdGl2ZSIsIm9uRGVzdHJveSIsImV2ZW50IiwiY29uc29sZSIsImxvZyIsImFwcEdhbWUiLCJpc0NsaWNrIiwic2NyZWVuUGF0aCIsImVtaXR0ZXIiLCJlbWl0IiwiY29uc3RzIiwiTE9DQUxfRVZFTlRfUE9QVVBfTE9BRFRJUCIsImNvbnRlbnQiLCJ0dCIsInNoYXJlQXBwTWVzc2FnZSIsImNoYW5uZWwiLCJ0aXRsZSIsIkhUVFBfUkVDT1JEX1BBQ0tBR0VOQU1FIiwiaW1hZ2VVcmwiLCJxdWVyeSIsImV4dHJhIiwidmlkZW9QYXRoIiwidmlkZW9Ub3BpY3MiLCJzdWNjZXNzIiwiZmFpbCIsImUiLCJzdGFydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJQSxRQUFKO0FBQ0EsSUFBSUMsYUFBSjtBQUNBQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUUsRUFIUDtBQU1MO0FBRUFDLEVBQUFBLE1BUkssb0JBUUs7QUFDTixTQUFLQyxJQUFMLENBQVVDLEVBQVYsQ0FBYU4sRUFBRSxDQUFDTyxJQUFILENBQVFDLFNBQVIsQ0FBa0JDLFNBQS9CLEVBQXlDLEtBQUtDLGdCQUE5QyxFQUErRCxJQUEvRDs7QUFDQSxRQUFHVixFQUFFLENBQUNXLEdBQUgsQ0FBT0MsUUFBUCxJQUFtQlosRUFBRSxDQUFDVyxHQUFILENBQU9FLGNBQTdCLEVBQTRDO0FBQ3hDLFdBQUtSLElBQUwsQ0FBVVMsTUFBVixHQUFtQixJQUFuQjtBQUNILEtBRkQsTUFFSztBQUNELFdBQUtULElBQUwsQ0FBVVMsTUFBVixHQUFtQixLQUFuQjtBQUNIO0FBQ0osR0FmSTtBQWlCTEMsRUFBQUEsU0FqQkssdUJBaUJNLENBQ1YsQ0FsQkk7QUFvQkxMLEVBQUFBLGdCQXBCSyw0QkFvQllNLEtBcEJaLEVBb0JrQjtBQUNuQkMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksaUJBQVosRUFBOEJDLE9BQU8sQ0FBQ0MsT0FBdEM7O0FBQ0EsUUFBR0QsT0FBTyxDQUFDRSxVQUFSLElBQW9CLElBQXBCLElBQTJCRixPQUFPLENBQUNDLE9BQVIsSUFBbUIsS0FBakQsRUFBdUQ7QUFFbkRELE1BQUFBLE9BQU8sQ0FBQ0csT0FBUixDQUFnQkMsSUFBaEIsQ0FBcUJDLE1BQU0sQ0FBQ0MseUJBQTVCLEVBQXVEO0FBQ25EQyxRQUFBQSxPQUFPLEVBQUU7QUFEMEMsT0FBdkQ7QUFHQTtBQUNIOztBQUNELFFBQUcxQixFQUFFLENBQUNXLEdBQUgsQ0FBT0MsUUFBUCxJQUFtQlosRUFBRSxDQUFDVyxHQUFILENBQU9FLGNBQTdCLEVBQTRDO0FBQUU7QUFDMUNJLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFNBQVosRUFBc0JDLE9BQU8sQ0FBQ0UsVUFBOUI7QUFDQU0sTUFBQUEsRUFBRSxDQUFDQyxlQUFILENBQW1CO0FBQ2ZDLFFBQUFBLE9BQU8sRUFBRSxPQURNO0FBRWZDLFFBQUFBLEtBQUssRUFBRU4sTUFBTSxDQUFDTyx1QkFGQztBQUdmQyxRQUFBQSxRQUFRLEVBQUUsRUFISztBQUlmQyxRQUFBQSxLQUFLLEVBQUUsRUFKUTtBQUtmQyxRQUFBQSxLQUFLLEVBQUU7QUFDUEMsVUFBQUEsU0FBUyxFQUFFaEIsT0FBTyxDQUFDRSxVQURaO0FBQ3dCO0FBQy9CZSxVQUFBQSxXQUFXLEVBQUUsQ0FBQyxXQUFTWixNQUFNLENBQUNPLHVCQUFoQixHQUF3QyxLQUF6QztBQUZOLFNBTFE7QUFTZk0sUUFBQUEsT0FUZSxxQkFTTDtBQUNOcEIsVUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksUUFBWjtBQUNILFNBWGM7QUFZZm9CLFFBQUFBLElBWmUsZ0JBWVZDLENBWlUsRUFZUDtBQUVKcEIsVUFBQUEsT0FBTyxDQUFDRyxPQUFSLENBQWdCQyxJQUFoQixDQUFxQkMsTUFBTSxDQUFDQyx5QkFBNUIsRUFBdUQ7QUFDbkRDLFlBQUFBLE9BQU8sRUFBRTtBQUQwQyxXQUF2RDtBQUdIO0FBakJjLE9BQW5CO0FBbUJIO0FBQ0osR0FuREk7QUFxRExjLEVBQUFBLEtBckRLLG1CQXFESSxDQUVSLENBdkRJLENBd0RMOztBQXhESyxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBjYy5DbGFzczpcclxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvY2xhc3MuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxudmFyIHJlY29yZGVyO1xyXG52YXIgdmlkZW9QYXRoR2FtZTtcclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgIH0sXHJcblxyXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICB0aGlzLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELHRoaXMuc2hhcmVCdG5DYWxsQmFjayx0aGlzKTtcclxuICAgICAgICBpZihjYy5zeXMucGxhdGZvcm0gPT0gY2Muc3lzLkJZVEVEQU5DRV9HQU1FKXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIG9uRGVzdHJveSgpe1xyXG4gICAgfSxcclxuXHJcbiAgICBzaGFyZUJ0bkNhbGxCYWNrKGV2ZW50KXtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImFwcEdhbWUuaXNDbGlja1wiLGFwcEdhbWUuaXNDbGljaylcclxuICAgICAgICBpZihhcHBHYW1lLnNjcmVlblBhdGg9PW51bGx8fCBhcHBHYW1lLmlzQ2xpY2sgPT0gZmFsc2Upe1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgYXBwR2FtZS5lbWl0dGVyLmVtaXQoY29uc3RzLkxPQ0FMX0VWRU5UX1BPUFVQX0xPQURUSVAsIHtcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwi5b2V5bGP5pe26Ze05aSq55+t77yB77yB77yBXCJcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoY2Muc3lzLnBsYXRmb3JtID09IGNjLnN5cy5CWVRFREFOQ0VfR0FNRSl7IC8v5aS05p2h5bmz5Y+wXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5aS05p2h5bmz5Y+wPT09XCIsYXBwR2FtZS5zY3JlZW5QYXRoKVxyXG4gICAgICAgICAgICB0dC5zaGFyZUFwcE1lc3NhZ2Uoe1xyXG4gICAgICAgICAgICAgICAgY2hhbm5lbDogJ3ZpZGVvJyxcclxuICAgICAgICAgICAgICAgIHRpdGxlOiBjb25zdHMuSFRUUF9SRUNPUkRfUEFDS0FHRU5BTUUsXHJcbiAgICAgICAgICAgICAgICBpbWFnZVVybDogJycsXHJcbiAgICAgICAgICAgICAgICBxdWVyeTogJycsXHJcbiAgICAgICAgICAgICAgICBleHRyYToge1xyXG4gICAgICAgICAgICAgICAgdmlkZW9QYXRoOiBhcHBHYW1lLnNjcmVlblBhdGgsIC8vIOWPr+eUqOW9leWxj+W+l+WIsOeahOinhumikeWcsOWdgFxyXG4gICAgICAgICAgICAgICAgdmlkZW9Ub3BpY3M6IFsn5aSn5a625LiA6LW35p2l546pJytjb25zdHMuSFRUUF9SRUNPUkRfUEFDS0FHRU5BTUUrJ++8ge+8ge+8gSddXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzcygpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5YiG5Lqr6KeG6aKR5oiQ5YqfJyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZmFpbChlKSB7XHJcbiAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGFwcEdhbWUuZW1pdHRlci5lbWl0KGNvbnN0cy5MT0NBTF9FVkVOVF9QT1BVUF9MT0FEVElQLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwi5YiG5Lqr6KeG6aKR5aSx6LSlXCJcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcblxyXG4gICAgfSxcclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/item.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '37e7b3Qh2JMQ5/8DSX2ow5C', 'item');
// gameComon/scripts/item.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    //cc.log("item onLoad")
    this.node.active = false;
  },
  start: function start() {},
  init: function init(id) {
    cc.log("item init");

    if (appGame.gameServerRoom.commonConfig && appGame.gameServerRoom.commonConfig.item) {
      underscore.each(appGame.gameServerRoom.commonConfig.item, function (key, value) {
        if (key.id == id) {
          util.loadBundleSprite(key.bundle, key.sprite, this.node.getComponent(cc.Sprite), function () {
            this.node.active = true;
          }.bind(this));
        }
      }.bind(this));
    }
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JpcHRzXFxpdGVtLmpzIl0sIm5hbWVzIjpbImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwib25Mb2FkIiwibm9kZSIsImFjdGl2ZSIsInN0YXJ0IiwiaW5pdCIsImlkIiwibG9nIiwiYXBwR2FtZSIsImdhbWVTZXJ2ZXJSb29tIiwiY29tbW9uQ29uZmlnIiwiaXRlbSIsInVuZGVyc2NvcmUiLCJlYWNoIiwia2V5IiwidmFsdWUiLCJ1dGlsIiwibG9hZEJ1bmRsZVNwcml0ZSIsImJ1bmRsZSIsInNwcml0ZSIsImdldENvbXBvbmVudCIsIlNwcml0ZSIsImJpbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRSxFQUhQO0FBT0w7QUFFQUMsRUFBQUEsTUFUSyxvQkFTSztBQUNOO0FBQ0EsU0FBS0MsSUFBTCxDQUFVQyxNQUFWLEdBQW1CLEtBQW5CO0FBQ0gsR0FaSTtBQWNMQyxFQUFBQSxLQWRLLG1CQWNJLENBRVIsQ0FoQkk7QUFpQkxDLEVBQUFBLElBakJLLGdCQWlCQUMsRUFqQkEsRUFpQkc7QUFDSlQsSUFBQUEsRUFBRSxDQUFDVSxHQUFILENBQU8sV0FBUDs7QUFDQSxRQUFHQyxPQUFPLENBQUNDLGNBQVIsQ0FBdUJDLFlBQXZCLElBQXVDRixPQUFPLENBQUNDLGNBQVIsQ0FBdUJDLFlBQXZCLENBQW9DQyxJQUE5RSxFQUFtRjtBQUMvRUMsTUFBQUEsVUFBVSxDQUFDQyxJQUFYLENBQWdCTCxPQUFPLENBQUNDLGNBQVIsQ0FBdUJDLFlBQXZCLENBQW9DQyxJQUFwRCxFQUF5RCxVQUFTRyxHQUFULEVBQWFDLEtBQWIsRUFBbUI7QUFDeEUsWUFBR0QsR0FBRyxDQUFDUixFQUFKLElBQVVBLEVBQWIsRUFBZ0I7QUFDWlUsVUFBQUEsSUFBSSxDQUFDQyxnQkFBTCxDQUFzQkgsR0FBRyxDQUFDSSxNQUExQixFQUFpQ0osR0FBRyxDQUFDSyxNQUFyQyxFQUE0QyxLQUFLakIsSUFBTCxDQUFVa0IsWUFBVixDQUF1QnZCLEVBQUUsQ0FBQ3dCLE1BQTFCLENBQTVDLEVBQThFLFlBQVU7QUFDcEYsaUJBQUtuQixJQUFMLENBQVVDLE1BQVYsR0FBbUIsSUFBbkI7QUFDSCxXQUY2RSxDQUU1RW1CLElBRjRFLENBRXZFLElBRnVFLENBQTlFO0FBR0g7QUFDSixPQU53RCxDQU12REEsSUFOdUQsQ0FNbEQsSUFOa0QsQ0FBekQ7QUFPSDtBQUNKLEdBNUJJLENBOEJMOztBQTlCSyxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG5cclxuICAgIH0sXHJcblxyXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICAvL2NjLmxvZyhcIml0ZW0gb25Mb2FkXCIpXHJcbiAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgfSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcbiAgICAgICAgXHJcbiAgICB9LFxyXG4gICAgaW5pdChpZCl7XHJcbiAgICAgICAgY2MubG9nKFwiaXRlbSBpbml0XCIpXHJcbiAgICAgICAgaWYoYXBwR2FtZS5nYW1lU2VydmVyUm9vbS5jb21tb25Db25maWcgJiYgYXBwR2FtZS5nYW1lU2VydmVyUm9vbS5jb21tb25Db25maWcuaXRlbSl7XHJcbiAgICAgICAgICAgIHVuZGVyc2NvcmUuZWFjaChhcHBHYW1lLmdhbWVTZXJ2ZXJSb29tLmNvbW1vbkNvbmZpZy5pdGVtLGZ1bmN0aW9uKGtleSx2YWx1ZSl7XHJcbiAgICAgICAgICAgICAgICBpZihrZXkuaWQgPT0gaWQpe1xyXG4gICAgICAgICAgICAgICAgICAgIHV0aWwubG9hZEJ1bmRsZVNwcml0ZShrZXkuYnVuZGxlLGtleS5zcHJpdGUsdGhpcy5ub2RlLmdldENvbXBvbmVudChjYy5TcHJpdGUpLGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0uYmluZCh0aGlzKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0uYmluZCh0aGlzKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/loadTip.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'eec36KS2hZPVbBk7XsJ2C2d', 'loadTip');
// gameComon/scripts/loadTip.js

"use strict";

// Learn cc.Class:
//  - https://docs.cocos.com/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
cc.Class({
  "extends": cc.Component,
  properties: {
    // foo: {
    //     // ATTRIBUTES:
    //     default: null,        // The default value will be used only when the component attaching
    //                           // to a node for the first time
    //     type: cc.SpriteFrame, // optional, default is typeof default
    //     serializable: true,   // optional, default is true
    // },
    // bar: {
    //     get () {
    //         return this._bar;
    //     },
    //     set (value) {
    //         this._bar = value;
    //     }
    // },
    contentLabel: cc.Label
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.contentLabel.string = '';
  },
  show: function show(opts) {
    opts = opts || {};

    if (opts.content) {
      this.node.active = true;
      this.contentLabel.string = opts.content;

      this.contentLabel._forceUpdateRenderData(true);

      var spaceWidth = this.contentLabel.node.getContentSize().width;
      var labelWidth = cc.view.getVisibleSize().width - 200;

      if (spaceWidth < labelWidth) {
        this.contentLabel.overflow = cc.Label.Overflow.NONE;
        this.contentLabel.node.width = spaceWidth;
        this.contentLabel.node.height = this.contentLabel.node.getContentSize().height;
        this.node.width = spaceWidth + 30;
        this.node.height = 80;
      } else {
        this.contentLabel.overflow = cc.Label.Overflow.CLAMP;
        this.contentLabel.enableWrapText = true;
        this.contentLabel.node.width = labelWidth;
        this.contentLabel.node.height = this.contentLabel.node.getContentSize().height + Math.floor(spaceWidth / labelWidth) * 40;
        this.node.width = labelWidth + 30;
        this.node.height = 80 + Math.floor(spaceWidth / labelWidth) * 50;
      }
    }

    this.node.opacity = 0;
    this.node.stopAllActions();
    this.node.runAction(cc.sequence(cc.fadeIn(0.5), cc.delayTime(1), cc.callFunc(function () {
      this.node.active = false;
    }.bind(this))));
  },
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JpcHRzXFxsb2FkVGlwLmpzIl0sIm5hbWVzIjpbImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwiY29udGVudExhYmVsIiwiTGFiZWwiLCJvbkxvYWQiLCJzdHJpbmciLCJzaG93Iiwib3B0cyIsImNvbnRlbnQiLCJub2RlIiwiYWN0aXZlIiwiX2ZvcmNlVXBkYXRlUmVuZGVyRGF0YSIsInNwYWNlV2lkdGgiLCJnZXRDb250ZW50U2l6ZSIsIndpZHRoIiwibGFiZWxXaWR0aCIsInZpZXciLCJnZXRWaXNpYmxlU2l6ZSIsIm92ZXJmbG93IiwiT3ZlcmZsb3ciLCJOT05FIiwiaGVpZ2h0IiwiQ0xBTVAiLCJlbmFibGVXcmFwVGV4dCIsIk1hdGgiLCJmbG9vciIsIm9wYWNpdHkiLCJzdG9wQWxsQWN0aW9ucyIsInJ1bkFjdGlvbiIsInNlcXVlbmNlIiwiZmFkZUluIiwiZGVsYXlUaW1lIiwiY2FsbEZ1bmMiLCJiaW5kIiwic3RhcnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUFBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQyxJQUFBQSxZQUFZLEVBQUNKLEVBQUUsQ0FBQ0s7QUFoQlIsR0FIUDtBQXNCTDtBQUVBQyxFQUFBQSxNQXhCSyxvQkF3Qks7QUFDTixTQUFLRixZQUFMLENBQWtCRyxNQUFsQixHQUEyQixFQUEzQjtBQUNILEdBMUJJO0FBNEJMQyxFQUFBQSxJQTVCSyxnQkE0QkFDLElBNUJBLEVBNEJLO0FBQ05BLElBQUFBLElBQUksR0FBR0EsSUFBSSxJQUFJLEVBQWY7O0FBQ0EsUUFBSUEsSUFBSSxDQUFDQyxPQUFULEVBQWtCO0FBQ2QsV0FBS0MsSUFBTCxDQUFVQyxNQUFWLEdBQW1CLElBQW5CO0FBQ0EsV0FBS1IsWUFBTCxDQUFrQkcsTUFBbEIsR0FBMkJFLElBQUksQ0FBQ0MsT0FBaEM7O0FBQ0EsV0FBS04sWUFBTCxDQUFrQlMsc0JBQWxCLENBQXlDLElBQXpDOztBQUNBLFVBQUlDLFVBQVUsR0FBRyxLQUFLVixZQUFMLENBQWtCTyxJQUFsQixDQUF1QkksY0FBdkIsR0FBd0NDLEtBQXpEO0FBQ0EsVUFBSUMsVUFBVSxHQUFHakIsRUFBRSxDQUFDa0IsSUFBSCxDQUFRQyxjQUFSLEdBQXlCSCxLQUF6QixHQUErQixHQUFoRDs7QUFDQSxVQUFHRixVQUFVLEdBQUNHLFVBQWQsRUFBeUI7QUFDckIsYUFBS2IsWUFBTCxDQUFrQmdCLFFBQWxCLEdBQTZCcEIsRUFBRSxDQUFDSyxLQUFILENBQVNnQixRQUFULENBQWtCQyxJQUEvQztBQUNBLGFBQUtsQixZQUFMLENBQWtCTyxJQUFsQixDQUF1QkssS0FBdkIsR0FBK0JGLFVBQS9CO0FBQ0EsYUFBS1YsWUFBTCxDQUFrQk8sSUFBbEIsQ0FBdUJZLE1BQXZCLEdBQWdDLEtBQUtuQixZQUFMLENBQWtCTyxJQUFsQixDQUF1QkksY0FBdkIsR0FBd0NRLE1BQXhFO0FBQ0EsYUFBS1osSUFBTCxDQUFVSyxLQUFWLEdBQWtCRixVQUFVLEdBQUMsRUFBN0I7QUFDQSxhQUFLSCxJQUFMLENBQVVZLE1BQVYsR0FBbUIsRUFBbkI7QUFDSCxPQU5ELE1BTUs7QUFDRCxhQUFLbkIsWUFBTCxDQUFrQmdCLFFBQWxCLEdBQTZCcEIsRUFBRSxDQUFDSyxLQUFILENBQVNnQixRQUFULENBQWtCRyxLQUEvQztBQUNBLGFBQUtwQixZQUFMLENBQWtCcUIsY0FBbEIsR0FBbUMsSUFBbkM7QUFDQSxhQUFLckIsWUFBTCxDQUFrQk8sSUFBbEIsQ0FBdUJLLEtBQXZCLEdBQStCQyxVQUEvQjtBQUNBLGFBQUtiLFlBQUwsQ0FBa0JPLElBQWxCLENBQXVCWSxNQUF2QixHQUFnQyxLQUFLbkIsWUFBTCxDQUFrQk8sSUFBbEIsQ0FBdUJJLGNBQXZCLEdBQXdDUSxNQUF4QyxHQUErQ0csSUFBSSxDQUFDQyxLQUFMLENBQVdiLFVBQVUsR0FBQ0csVUFBdEIsSUFBa0MsRUFBakg7QUFDQSxhQUFLTixJQUFMLENBQVVLLEtBQVYsR0FBa0JDLFVBQVUsR0FBQyxFQUE3QjtBQUNBLGFBQUtOLElBQUwsQ0FBVVksTUFBVixHQUFtQixLQUFLRyxJQUFJLENBQUNDLEtBQUwsQ0FBV2IsVUFBVSxHQUFDRyxVQUF0QixJQUFrQyxFQUExRDtBQUNIO0FBQ0o7O0FBQ0QsU0FBS04sSUFBTCxDQUFVaUIsT0FBVixHQUFvQixDQUFwQjtBQUNBLFNBQUtqQixJQUFMLENBQVVrQixjQUFWO0FBQ0EsU0FBS2xCLElBQUwsQ0FBVW1CLFNBQVYsQ0FBb0I5QixFQUFFLENBQUMrQixRQUFILENBQVkvQixFQUFFLENBQUNnQyxNQUFILENBQVUsR0FBVixDQUFaLEVBQTJCaEMsRUFBRSxDQUFDaUMsU0FBSCxDQUFhLENBQWIsQ0FBM0IsRUFBMkNqQyxFQUFFLENBQUNrQyxRQUFILENBQVksWUFBVTtBQUNqRixXQUFLdkIsSUFBTCxDQUFVQyxNQUFWLEdBQW1CLEtBQW5CO0FBQ0gsS0FGMEUsQ0FFekV1QixJQUZ5RSxDQUVwRSxJQUZvRSxDQUFaLENBQTNDLENBQXBCO0FBR0gsR0F4REk7QUEwRExDLEVBQUFBLEtBMURLLG1CQTBESSxDQUVSLENBNURJLENBOERMOztBQTlESyxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBjYy5DbGFzczpcclxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvY2xhc3MuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgLy8gZm9vOiB7XHJcbiAgICAgICAgLy8gICAgIC8vIEFUVFJJQlVURVM6XHJcbiAgICAgICAgLy8gICAgIGRlZmF1bHQ6IG51bGwsICAgICAgICAvLyBUaGUgZGVmYXVsdCB2YWx1ZSB3aWxsIGJlIHVzZWQgb25seSB3aGVuIHRoZSBjb21wb25lbnQgYXR0YWNoaW5nXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB0byBhIG5vZGUgZm9yIHRoZSBmaXJzdCB0aW1lXHJcbiAgICAgICAgLy8gICAgIHR5cGU6IGNjLlNwcml0ZUZyYW1lLCAvLyBvcHRpb25hbCwgZGVmYXVsdCBpcyB0eXBlb2YgZGVmYXVsdFxyXG4gICAgICAgIC8vICAgICBzZXJpYWxpemFibGU6IHRydWUsICAgLy8gb3B0aW9uYWwsIGRlZmF1bHQgaXMgdHJ1ZVxyXG4gICAgICAgIC8vIH0sXHJcbiAgICAgICAgLy8gYmFyOiB7XHJcbiAgICAgICAgLy8gICAgIGdldCAoKSB7XHJcbiAgICAgICAgLy8gICAgICAgICByZXR1cm4gdGhpcy5fYmFyO1xyXG4gICAgICAgIC8vICAgICB9LFxyXG4gICAgICAgIC8vICAgICBzZXQgKHZhbHVlKSB7XHJcbiAgICAgICAgLy8gICAgICAgICB0aGlzLl9iYXIgPSB2YWx1ZTtcclxuICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgIC8vIH0sXHJcbiAgICAgICAgY29udGVudExhYmVsOmNjLkxhYmVsLFxyXG4gICAgfSxcclxuXHJcbiAgICAvLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcclxuXHJcbiAgICBvbkxvYWQgKCkge1xyXG4gICAgICAgIHRoaXMuY29udGVudExhYmVsLnN0cmluZyA9ICcnO1xyXG4gICAgfSxcclxuXHJcbiAgICBzaG93KG9wdHMpe1xyXG4gICAgICAgIG9wdHMgPSBvcHRzIHx8IHt9O1xyXG4gICAgICAgIGlmIChvcHRzLmNvbnRlbnQpIHtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGVudExhYmVsLnN0cmluZyA9IG9wdHMuY29udGVudDtcclxuICAgICAgICAgICAgdGhpcy5jb250ZW50TGFiZWwuX2ZvcmNlVXBkYXRlUmVuZGVyRGF0YSh0cnVlKTtcclxuICAgICAgICAgICAgbGV0IHNwYWNlV2lkdGggPSB0aGlzLmNvbnRlbnRMYWJlbC5ub2RlLmdldENvbnRlbnRTaXplKCkud2lkdGg7XHJcbiAgICAgICAgICAgIGxldCBsYWJlbFdpZHRoID0gY2Mudmlldy5nZXRWaXNpYmxlU2l6ZSgpLndpZHRoLTIwMFxyXG4gICAgICAgICAgICBpZihzcGFjZVdpZHRoPGxhYmVsV2lkdGgpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZW50TGFiZWwub3ZlcmZsb3cgPSBjYy5MYWJlbC5PdmVyZmxvdy5OT05FO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZW50TGFiZWwubm9kZS53aWR0aCA9IHNwYWNlV2lkdGg7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnRMYWJlbC5ub2RlLmhlaWdodCA9IHRoaXMuY29udGVudExhYmVsLm5vZGUuZ2V0Q29udGVudFNpemUoKS5oZWlnaHQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5vZGUud2lkdGggPSBzcGFjZVdpZHRoKzMwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ub2RlLmhlaWdodCA9IDgwO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGVudExhYmVsLm92ZXJmbG93ID0gY2MuTGFiZWwuT3ZlcmZsb3cuQ0xBTVA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnRMYWJlbC5lbmFibGVXcmFwVGV4dCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnRMYWJlbC5ub2RlLndpZHRoID0gbGFiZWxXaWR0aDtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGVudExhYmVsLm5vZGUuaGVpZ2h0ID0gdGhpcy5jb250ZW50TGFiZWwubm9kZS5nZXRDb250ZW50U2l6ZSgpLmhlaWdodCtNYXRoLmZsb29yKHNwYWNlV2lkdGgvbGFiZWxXaWR0aCkqNDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5vZGUud2lkdGggPSBsYWJlbFdpZHRoKzMwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ub2RlLmhlaWdodCA9IDgwICsgTWF0aC5mbG9vcihzcGFjZVdpZHRoL2xhYmVsV2lkdGgpKjUwO1xyXG4gICAgICAgICAgICB9ICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubm9kZS5vcGFjaXR5ID0gMDtcclxuICAgICAgICB0aGlzLm5vZGUuc3RvcEFsbEFjdGlvbnMoKTtcclxuICAgICAgICB0aGlzLm5vZGUucnVuQWN0aW9uKGNjLnNlcXVlbmNlKGNjLmZhZGVJbigwLjUpLGNjLmRlbGF5VGltZSgxKSxjYy5jYWxsRnVuYyhmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgfS5iaW5kKHRoaXMpKSkpO1xyXG4gICAgfSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcblxyXG4gICAgfSxcclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/horn.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '40fbfZFpRVEpo0R8nzzeIHb', 'horn');
// gameComon/scripts/horn.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    // foo: {
    //     // ATTRIBUTES:
    //     default: null,        // The default value will be used only when the component attaching
    //                           // to a node for the first time
    //     type: cc.SpriteFrame, // optional, default is typeof default
    //     serializable: true,   // optional, default is true
    // },
    // bar: {
    //     get () {
    //         return this._bar;
    //     },
    //     set (value) {
    //         this._bar = value;
    //     }
    // },
    sprite: [cc.SpriteFrame],
    bg: cc.Sprite
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.node.on(cc.Node.EventType.TOUCH_END, this.onClickTouchEnd, this);
    appGame.audioMgr.getMusicStatus(function (onOff) {
      if (onOff) {
        this.bg.spriteFrame = this.sprite[0];
      } else {
        this.bg.spriteFrame = this.sprite[1];
      }
    }.bind(this));
  },
  start: function start() {},
  onClickTouchEnd: function onClickTouchEnd(event) {
    appGame.audioMgr.getMusicStatus(function (onOff) {
      appGame.audioMgr.setMusicOnOff(!onOff);

      if (!onOff) {
        this.bg.spriteFrame = this.sprite[0];
      } else {
        this.bg.spriteFrame = this.sprite[1];
      }
    }.bind(this));
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JpcHRzXFxob3JuLmpzIl0sIm5hbWVzIjpbImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwic3ByaXRlIiwiU3ByaXRlRnJhbWUiLCJiZyIsIlNwcml0ZSIsIm9uTG9hZCIsIm5vZGUiLCJvbiIsIk5vZGUiLCJFdmVudFR5cGUiLCJUT1VDSF9FTkQiLCJvbkNsaWNrVG91Y2hFbmQiLCJhcHBHYW1lIiwiYXVkaW9NZ3IiLCJnZXRNdXNpY1N0YXR1cyIsIm9uT2ZmIiwic3ByaXRlRnJhbWUiLCJiaW5kIiwic3RhcnQiLCJldmVudCIsInNldE11c2ljT25PZmYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQyxJQUFBQSxNQUFNLEVBQUMsQ0FBQ0osRUFBRSxDQUFDSyxXQUFKLENBaEJDO0FBaUJSQyxJQUFBQSxFQUFFLEVBQUNOLEVBQUUsQ0FBQ087QUFqQkUsR0FIUDtBQXVCTDtBQUVBQyxFQUFBQSxNQXpCSyxvQkF5Qks7QUFDTixTQUFLQyxJQUFMLENBQVVDLEVBQVYsQ0FBYVYsRUFBRSxDQUFDVyxJQUFILENBQVFDLFNBQVIsQ0FBa0JDLFNBQS9CLEVBQTBDLEtBQUtDLGVBQS9DLEVBQWdFLElBQWhFO0FBQ0FDLElBQUFBLE9BQU8sQ0FBQ0MsUUFBUixDQUFpQkMsY0FBakIsQ0FBZ0MsVUFBU0MsS0FBVCxFQUFlO0FBQzNDLFVBQUdBLEtBQUgsRUFBUztBQUNMLGFBQUtaLEVBQUwsQ0FBUWEsV0FBUixHQUFzQixLQUFLZixNQUFMLENBQVksQ0FBWixDQUF0QjtBQUNILE9BRkQsTUFFSztBQUNELGFBQUtFLEVBQUwsQ0FBUWEsV0FBUixHQUFzQixLQUFLZixNQUFMLENBQVksQ0FBWixDQUF0QjtBQUNIO0FBQ0osS0FOK0IsQ0FNOUJnQixJQU44QixDQU16QixJQU55QixDQUFoQztBQU9ILEdBbENJO0FBb0NMQyxFQUFBQSxLQXBDSyxtQkFvQ0ksQ0FFUixDQXRDSTtBQXdDTFAsRUFBQUEsZUF4Q0ssMkJBd0NXUSxLQXhDWCxFQXdDaUI7QUFDbEJQLElBQUFBLE9BQU8sQ0FBQ0MsUUFBUixDQUFpQkMsY0FBakIsQ0FBZ0MsVUFBU0MsS0FBVCxFQUFlO0FBQzNDSCxNQUFBQSxPQUFPLENBQUNDLFFBQVIsQ0FBaUJPLGFBQWpCLENBQStCLENBQUNMLEtBQWhDOztBQUNBLFVBQUcsQ0FBQ0EsS0FBSixFQUFVO0FBQ04sYUFBS1osRUFBTCxDQUFRYSxXQUFSLEdBQXNCLEtBQUtmLE1BQUwsQ0FBWSxDQUFaLENBQXRCO0FBQ0gsT0FGRCxNQUVLO0FBQ0QsYUFBS0UsRUFBTCxDQUFRYSxXQUFSLEdBQXNCLEtBQUtmLE1BQUwsQ0FBWSxDQUFaLENBQXRCO0FBQ0g7QUFDSixLQVArQixDQU85QmdCLElBUDhCLENBT3pCLElBUHlCLENBQWhDO0FBUUgsR0FqREksQ0FtREw7O0FBbkRLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgLy8gZm9vOiB7XHJcbiAgICAgICAgLy8gICAgIC8vIEFUVFJJQlVURVM6XHJcbiAgICAgICAgLy8gICAgIGRlZmF1bHQ6IG51bGwsICAgICAgICAvLyBUaGUgZGVmYXVsdCB2YWx1ZSB3aWxsIGJlIHVzZWQgb25seSB3aGVuIHRoZSBjb21wb25lbnQgYXR0YWNoaW5nXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB0byBhIG5vZGUgZm9yIHRoZSBmaXJzdCB0aW1lXHJcbiAgICAgICAgLy8gICAgIHR5cGU6IGNjLlNwcml0ZUZyYW1lLCAvLyBvcHRpb25hbCwgZGVmYXVsdCBpcyB0eXBlb2YgZGVmYXVsdFxyXG4gICAgICAgIC8vICAgICBzZXJpYWxpemFibGU6IHRydWUsICAgLy8gb3B0aW9uYWwsIGRlZmF1bHQgaXMgdHJ1ZVxyXG4gICAgICAgIC8vIH0sXHJcbiAgICAgICAgLy8gYmFyOiB7XHJcbiAgICAgICAgLy8gICAgIGdldCAoKSB7XHJcbiAgICAgICAgLy8gICAgICAgICByZXR1cm4gdGhpcy5fYmFyO1xyXG4gICAgICAgIC8vICAgICB9LFxyXG4gICAgICAgIC8vICAgICBzZXQgKHZhbHVlKSB7XHJcbiAgICAgICAgLy8gICAgICAgICB0aGlzLl9iYXIgPSB2YWx1ZTtcclxuICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgIC8vIH0sXHJcbiAgICAgICAgc3ByaXRlOltjYy5TcHJpdGVGcmFtZV0sXHJcbiAgICAgICAgYmc6Y2MuU3ByaXRlXHJcbiAgICB9LFxyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgdGhpcy5ub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCwgdGhpcy5vbkNsaWNrVG91Y2hFbmQsIHRoaXMpO1xyXG4gICAgICAgIGFwcEdhbWUuYXVkaW9NZ3IuZ2V0TXVzaWNTdGF0dXMoZnVuY3Rpb24ob25PZmYpe1xyXG4gICAgICAgICAgICBpZihvbk9mZil7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJnLnNwcml0ZUZyYW1lID0gdGhpcy5zcHJpdGVbMF07XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgdGhpcy5iZy5zcHJpdGVGcmFtZSA9IHRoaXMuc3ByaXRlWzFdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG5cclxuICAgIH0sXHJcblxyXG4gICAgb25DbGlja1RvdWNoRW5kKGV2ZW50KXtcclxuICAgICAgICBhcHBHYW1lLmF1ZGlvTWdyLmdldE11c2ljU3RhdHVzKGZ1bmN0aW9uKG9uT2ZmKXtcclxuICAgICAgICAgICAgYXBwR2FtZS5hdWRpb01nci5zZXRNdXNpY09uT2ZmKCFvbk9mZik7XHJcbiAgICAgICAgICAgIGlmKCFvbk9mZil7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJnLnNwcml0ZUZyYW1lID0gdGhpcy5zcHJpdGVbMF07XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgdGhpcy5iZy5zcHJpdGVGcmFtZSA9IHRoaXMuc3ByaXRlWzFdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/room.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '690ef7tcntLt4eCVVAMIQ0O', 'room');
// gameComon/scripts/room.js

"use strict";

/*中台配置文件获取*/
var Emitter = require('emitter');

var consts = require('./model/consts');

var Room = cc.Class({
  "extends": Emitter,
  initWithData: function initWithData(data) {
    this.adConfig = {};
    this.commonConfig = {};
    this.configSuccess1 = false;
    this.isHadWord = false;
    async.waterfall([function (cb) {
      var url = consts.HTTP_GET_PAAS_DATA_SERVER + "?gameId=" + consts.GAME_ID + "&plat=all" + "&version=all" + "&brand=" + '' + "&from=ad"; //url = 'https://cs.snmi.cn/game/GetGameValue?gameId=50&plat=baidu&version=1.0.0&brand=&from=ad'

      console.log("ad url===" + url);
      util.getUrlSerConfig(url, 'comJson', 'comAdConfig', function (data) {
        this.adConfig = data;
        console.log("ad ==" + JSON.stringify(this.adConfig));
        appGame.emitter.emit(consts.HTTP_EVENT_MIDDLE_DESK_CONFIG, {});
        cb(null);
      }.bind(this));
    }.bind(this), function (cb) {
      var url = consts.HTTP_GET_PAAS_DATA_SERVER + "?gameId=" + consts.GAME_ID + "&plat=all" + "&version=all" + "&brand=" + '' + "&from=MiddleDesk"; //url = 'https://cs.snmi.cn/game/GetGameValue?gameId=50&plat=baidu&version=1.0.0&brand=&from=MiddleDesk'
      //console.log("middledesk url==="+url)

      util.getUrlSerConfig(url, 'comJson', 'comConfig', function (data) {
        this.commonConfig = data; // console.log("MiddleDesk =="+JSON.stringify(this.commonConfig))

        var wordShow = 0;

        if (cc.sys.platform == cc.sys.BAIDU_GAME) {
          wordShow = this.commonConfig.word.baidu;
          this.getPlatformConfig('baidu');
        } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'WX') {
          wordShow = this.commonConfig.word.WX;
          this.getPlatformConfig('WX');
        } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'QQ') {
          wordShow = this.commonConfig.word.QQ;
          this.getPlatformConfig('QQ');
        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
          wordShow = this.commonConfig.word.toutiao;
          this.getPlatformConfig('toutiao');
        } else {
          this.getPlatformConfig('html5');
        }

        if (wordShow) {
          this.isHadWord = true;
          util.spreadWordFun();
        }

        this.configSuccess1 = true;

        if (this.configSuccess2 && this.configSuccess1) {
          appGame.gameServerRoom.emit(consts.CLIENT_GAME_START, {});
        }
      }.bind(this));
    }.bind(this)], function (err) {
      console.log("读取配置出错了!!");
    });
  },
  getPlatformConfig: function getPlatformConfig(plat) {
    this.commonConfig.sign = this.commonConfig.sign[plat];
    this.commonConfig.revive = this.commonConfig.revive[plat];
    this.commonConfig.result = this.commonConfig.result[plat];
    this.commonConfig.lucky = this.commonConfig.lucky[plat];
  }
});
module.exports = Room;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/changeGame.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'afdd0LsL2lP35RKLODURjeW', 'changeGame');
// gameComon/scripts/changeGame.js

"use strict";

// Learn cc.Class:
//  - https://docs.cocos.com/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
cc.Class({
  "extends": cc.Component,
  properties: {// foo: {
    //     // ATTRIBUTES:
    //     default: null,        // The default value will be used only when the component attaching
    //                           // to a node for the first time
    //     type: cc.SpriteFrame, // optional, default is typeof default
    //     serializable: true,   // optional, default is true
    // },
    // bar: {
    //     get () {
    //         return this._bar;
    //     },
    //     set (value) {
    //         this._bar = value;
    //     }
    // },
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.node.on(cc.Node.EventType.TOUCH_END, this.onChangeGameBtnCallBack, this);
  },
  start: function start() {},
  onChangeGameBtnCallBack: function onChangeGameBtnCallBack(event) {
    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
      var systemInfo = tt.getSystemInfoSync(); // iOS 不支持，建议先检测再使用

      if (systemInfo.platform !== "ios") {
        // 打开互跳弹窗
        tt.showMoreGamesModal({
          appLaunchOptions: [{
            appId: "tt7fbb0906e080eb91",
            extraData: {}
          }, {
            appId: "tt71aa0717ee919412",
            extraData: {}
          }, {
            appId: "tt83a9f5141c9278e6",
            extraData: {}
          }, {
            appId: "tt1b516dec846adc47",
            extraData: {}
          }, {
            appId: "ttcf78b9c550430232",
            extraData: {}
          }, {
            appId: "tt62341489fd0f437a",
            extraData: {}
          }],
          success: function success(res) {
            console.log("success", res.errMsg);
          },
          fail: function fail(res) {
            console.log("fail", res.errMsg);
          }
        });
      }
    }
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JpcHRzXFxjaGFuZ2VHYW1lLmpzIl0sIm5hbWVzIjpbImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwib25Mb2FkIiwibm9kZSIsIm9uIiwiTm9kZSIsIkV2ZW50VHlwZSIsIlRPVUNIX0VORCIsIm9uQ2hhbmdlR2FtZUJ0bkNhbGxCYWNrIiwic3RhcnQiLCJldmVudCIsInN5cyIsInBsYXRmb3JtIiwiQllURURBTkNFX0dBTUUiLCJzeXN0ZW1JbmZvIiwidHQiLCJnZXRTeXN0ZW1JbmZvU3luYyIsInNob3dNb3JlR2FtZXNNb2RhbCIsImFwcExhdW5jaE9wdGlvbnMiLCJhcHBJZCIsImV4dHJhRGF0YSIsInN1Y2Nlc3MiLCJyZXMiLCJjb25zb2xlIiwibG9nIiwiZXJyTXNnIiwiZmFpbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQUEsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFLENBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZlEsR0FIUDtBQXFCTDtBQUVBQyxFQUFBQSxNQXZCSyxvQkF1Qks7QUFDTixTQUFLQyxJQUFMLENBQVVDLEVBQVYsQ0FBYU4sRUFBRSxDQUFDTyxJQUFILENBQVFDLFNBQVIsQ0FBa0JDLFNBQS9CLEVBQTBDLEtBQUtDLHVCQUEvQyxFQUF3RSxJQUF4RTtBQUNILEdBekJJO0FBMkJMQyxFQUFBQSxLQTNCSyxtQkEyQkksQ0FFUixDQTdCSTtBQStCTEQsRUFBQUEsdUJBL0JLLG1DQStCbUJFLEtBL0JuQixFQStCeUI7QUFDMUIsUUFBR1osRUFBRSxDQUFDYSxHQUFILENBQU9DLFFBQVAsSUFBbUJkLEVBQUUsQ0FBQ2EsR0FBSCxDQUFPRSxjQUE3QixFQUE0QztBQUN4QyxVQUFNQyxVQUFVLEdBQUdDLEVBQUUsQ0FBQ0MsaUJBQUgsRUFBbkIsQ0FEd0MsQ0FFeEM7O0FBQ0EsVUFBSUYsVUFBVSxDQUFDRixRQUFYLEtBQXdCLEtBQTVCLEVBQW1DO0FBQy9CO0FBQ0FHLFFBQUFBLEVBQUUsQ0FBQ0Usa0JBQUgsQ0FBc0I7QUFDbEJDLFVBQUFBLGdCQUFnQixFQUFFLENBQ2xCO0FBQ0lDLFlBQUFBLEtBQUssRUFBRSxvQkFEWDtBQUVJQyxZQUFBQSxTQUFTLEVBQUU7QUFGZixXQURrQixFQUtsQjtBQUNJRCxZQUFBQSxLQUFLLEVBQUUsb0JBRFg7QUFFSUMsWUFBQUEsU0FBUyxFQUFFO0FBRmYsV0FMa0IsRUFTbEI7QUFDSUQsWUFBQUEsS0FBSyxFQUFFLG9CQURYO0FBRUlDLFlBQUFBLFNBQVMsRUFBRTtBQUZmLFdBVGtCLEVBYWxCO0FBQ0lELFlBQUFBLEtBQUssRUFBRSxvQkFEWDtBQUVJQyxZQUFBQSxTQUFTLEVBQUU7QUFGZixXQWJrQixFQWlCbEI7QUFDSUQsWUFBQUEsS0FBSyxFQUFFLG9CQURYO0FBRUlDLFlBQUFBLFNBQVMsRUFBRTtBQUZmLFdBakJrQixFQXFCbEI7QUFDSUQsWUFBQUEsS0FBSyxFQUFFLG9CQURYO0FBRUlDLFlBQUFBLFNBQVMsRUFBRTtBQUZmLFdBckJrQixDQURBO0FBMkJsQkMsVUFBQUEsT0EzQmtCLG1CQTJCVkMsR0EzQlUsRUEyQkw7QUFDYkMsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksU0FBWixFQUF1QkYsR0FBRyxDQUFDRyxNQUEzQjtBQUNDLFdBN0JpQjtBQThCbEJDLFVBQUFBLElBOUJrQixnQkE4QmJKLEdBOUJhLEVBOEJSO0FBQ1ZDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE1BQVosRUFBb0JGLEdBQUcsQ0FBQ0csTUFBeEI7QUFDQztBQWhDaUIsU0FBdEI7QUFrQ0g7QUFDSjtBQUNKLEdBekVJLENBMkVMOztBQTNFSyxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBjYy5DbGFzczpcclxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvY2xhc3MuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgLy8gZm9vOiB7XHJcbiAgICAgICAgLy8gICAgIC8vIEFUVFJJQlVURVM6XHJcbiAgICAgICAgLy8gICAgIGRlZmF1bHQ6IG51bGwsICAgICAgICAvLyBUaGUgZGVmYXVsdCB2YWx1ZSB3aWxsIGJlIHVzZWQgb25seSB3aGVuIHRoZSBjb21wb25lbnQgYXR0YWNoaW5nXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB0byBhIG5vZGUgZm9yIHRoZSBmaXJzdCB0aW1lXHJcbiAgICAgICAgLy8gICAgIHR5cGU6IGNjLlNwcml0ZUZyYW1lLCAvLyBvcHRpb25hbCwgZGVmYXVsdCBpcyB0eXBlb2YgZGVmYXVsdFxyXG4gICAgICAgIC8vICAgICBzZXJpYWxpemFibGU6IHRydWUsICAgLy8gb3B0aW9uYWwsIGRlZmF1bHQgaXMgdHJ1ZVxyXG4gICAgICAgIC8vIH0sXHJcbiAgICAgICAgLy8gYmFyOiB7XHJcbiAgICAgICAgLy8gICAgIGdldCAoKSB7XHJcbiAgICAgICAgLy8gICAgICAgICByZXR1cm4gdGhpcy5fYmFyO1xyXG4gICAgICAgIC8vICAgICB9LFxyXG4gICAgICAgIC8vICAgICBzZXQgKHZhbHVlKSB7XHJcbiAgICAgICAgLy8gICAgICAgICB0aGlzLl9iYXIgPSB2YWx1ZTtcclxuICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgIC8vIH0sXHJcbiAgICB9LFxyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgdGhpcy5ub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCwgdGhpcy5vbkNoYW5nZUdhbWVCdG5DYWxsQmFjaywgdGhpcyk7XHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuXHJcbiAgICB9LFxyXG5cclxuICAgIG9uQ2hhbmdlR2FtZUJ0bkNhbGxCYWNrKGV2ZW50KXtcclxuICAgICAgICBpZihjYy5zeXMucGxhdGZvcm0gPT0gY2Muc3lzLkJZVEVEQU5DRV9HQU1FKXtcclxuICAgICAgICAgICAgY29uc3Qgc3lzdGVtSW5mbyA9IHR0LmdldFN5c3RlbUluZm9TeW5jKCk7XHJcbiAgICAgICAgICAgIC8vIGlPUyDkuI3mlK/mjIHvvIzlu7rorq7lhYjmo4DmtYvlho3kvb/nlKhcclxuICAgICAgICAgICAgaWYgKHN5c3RlbUluZm8ucGxhdGZvcm0gIT09IFwiaW9zXCIpIHtcclxuICAgICAgICAgICAgICAgIC8vIOaJk+W8gOS6kui3s+W8ueeql1xyXG4gICAgICAgICAgICAgICAgdHQuc2hvd01vcmVHYW1lc01vZGFsKHtcclxuICAgICAgICAgICAgICAgICAgICBhcHBMYXVuY2hPcHRpb25zOiBbXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhcHBJZDogXCJ0dDdmYmIwOTA2ZTA4MGViOTFcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXh0cmFEYXRhOiB7fSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwSWQ6IFwidHQ3MWFhMDcxN2VlOTE5NDEyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4dHJhRGF0YToge30sXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcElkOiBcInR0ODNhOWY1MTQxYzkyNzhlNlwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBleHRyYURhdGE6IHt9LFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhcHBJZDogXCJ0dDFiNTE2ZGVjODQ2YWRjNDdcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXh0cmFEYXRhOiB7fSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwSWQ6IFwidHRjZjc4YjljNTUwNDMwMjMyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4dHJhRGF0YToge30sXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcElkOiBcInR0NjIzNDE0ODlmZDBmNDM3YVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBleHRyYURhdGE6IHt9LFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic3VjY2Vzc1wiLCByZXMuZXJyTXNnKTtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGZhaWwocmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJmYWlsXCIsIHJlcy5lcnJNc2cpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgLy8gdXBkYXRlIChkdCkge30sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/roomGame.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'beb9925+ZFD6pMLNAwAhYoo', 'roomGame');
// gameComon/scripts/roomGame.js

"use strict";

/*游戏配置文件获取*/
var Room = require('room');

var consts = require('./model/consts');

var RoomGame = cc.Class({
  "extends": Room,
  statics: {
    create: function create(data) {
      var roomObj = new RoomGame();
      roomObj.initWithData(data);
      return roomObj;
    }
  },
  initWithData: function initWithData(data) {
    this._super(data.room); //录屏路径


    this.videoPath = ''; //获取录屏的系统时间

    this.screenTime = 0;
    this.gameConfigData = {};
    this.wordRid = '';
    this.configSuccess2 = false;
    var url = consts.HTTP_GET_PAAS_DATA_SERVER + "?gameId=" + consts.GAME_ID + "&plat=" + appGame.platform + "&version=" + appGame.packageVersion + "&brand=" + '' + "&from=game"; //url = 'https://cs.snmi.cn/game/GetGameValue?gameId=50&plat=baidu&version=1.0.0&brand=&from=game'

    console.log("ad url===" + url);
    util.getUrlSerConfig(url, 'json', 'game', function (data) {
      this.gameConfigData = data;
      console.log("game ==" + JSON.stringify(this.gameConfigData));
      this.configSuccess2 = true;

      if (this.configSuccess2 && this.configSuccess1) {
        appGame.gameServerRoom.emit(consts.CLIENT_GAME_START, {});
      }
    }.bind(this));
  }
});
module.exports = RoomGame;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JpcHRzXFxyb29tR2FtZS5qcyJdLCJuYW1lcyI6WyJSb29tIiwicmVxdWlyZSIsImNvbnN0cyIsIlJvb21HYW1lIiwiY2MiLCJDbGFzcyIsInN0YXRpY3MiLCJjcmVhdGUiLCJkYXRhIiwicm9vbU9iaiIsImluaXRXaXRoRGF0YSIsIl9zdXBlciIsInJvb20iLCJ2aWRlb1BhdGgiLCJzY3JlZW5UaW1lIiwiZ2FtZUNvbmZpZ0RhdGEiLCJ3b3JkUmlkIiwiY29uZmlnU3VjY2VzczIiLCJ1cmwiLCJIVFRQX0dFVF9QQUFTX0RBVEFfU0VSVkVSIiwiR0FNRV9JRCIsImFwcEdhbWUiLCJwbGF0Zm9ybSIsInBhY2thZ2VWZXJzaW9uIiwiY29uc29sZSIsImxvZyIsInV0aWwiLCJnZXRVcmxTZXJDb25maWciLCJKU09OIiwic3RyaW5naWZ5IiwiY29uZmlnU3VjY2VzczEiLCJnYW1lU2VydmVyUm9vbSIsImVtaXQiLCJDTElFTlRfR0FNRV9TVEFSVCIsImJpbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0EsSUFBSUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxnQkFBRCxDQUF0Qjs7QUFDQSxJQUFJRSxRQUFRLEdBQUdDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ3BCLGFBQVNMLElBRFc7QUFHcEJNLEVBQUFBLE9BQU8sRUFBRTtBQUNMQyxJQUFBQSxNQUFNLEVBQUUsZ0JBQVVDLElBQVYsRUFBZ0I7QUFDcEIsVUFBSUMsT0FBTyxHQUFHLElBQUlOLFFBQUosRUFBZDtBQUNBTSxNQUFBQSxPQUFPLENBQUNDLFlBQVIsQ0FBcUJGLElBQXJCO0FBQ0EsYUFBT0MsT0FBUDtBQUNIO0FBTEksR0FIVztBQVVwQkMsRUFBQUEsWUFBWSxFQUFFLHNCQUFVRixJQUFWLEVBQWdCO0FBQzFCLFNBQUtHLE1BQUwsQ0FBWUgsSUFBSSxDQUFDSSxJQUFqQixFQUQwQixDQUUxQjs7O0FBQ0EsU0FBS0MsU0FBTCxHQUFpQixFQUFqQixDQUgwQixDQUkxQjs7QUFDQSxTQUFLQyxVQUFMLEdBQWtCLENBQWxCO0FBQ0EsU0FBS0MsY0FBTCxHQUFzQixFQUF0QjtBQUNBLFNBQUtDLE9BQUwsR0FBZSxFQUFmO0FBQ0EsU0FBS0MsY0FBTCxHQUFzQixLQUF0QjtBQUNBLFFBQUlDLEdBQUcsR0FBR2hCLE1BQU0sQ0FBQ2lCLHlCQUFQLEdBQWlDLFVBQWpDLEdBQTRDakIsTUFBTSxDQUFDa0IsT0FBbkQsR0FBMkQsUUFBM0QsR0FBb0VDLE9BQU8sQ0FBQ0MsUUFBNUUsR0FDTixXQURNLEdBQ01ELE9BQU8sQ0FBQ0UsY0FEZCxHQUM2QixTQUQ3QixHQUN1QyxFQUR2QyxHQUMwQyxZQURwRCxDQVQwQixDQVcxQjs7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksY0FBWVAsR0FBeEI7QUFDQVEsSUFBQUEsSUFBSSxDQUFDQyxlQUFMLENBQXFCVCxHQUFyQixFQUF5QixNQUF6QixFQUFnQyxNQUFoQyxFQUF1QyxVQUFTVixJQUFULEVBQWM7QUFDakQsV0FBS08sY0FBTCxHQUFzQlAsSUFBdEI7QUFDQWdCLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVVHLElBQUksQ0FBQ0MsU0FBTCxDQUFlLEtBQUtkLGNBQXBCLENBQXRCO0FBQ0EsV0FBS0UsY0FBTCxHQUFzQixJQUF0Qjs7QUFDQSxVQUFHLEtBQUtBLGNBQUwsSUFBdUIsS0FBS2EsY0FBL0IsRUFBOEM7QUFDMUNULFFBQUFBLE9BQU8sQ0FBQ1UsY0FBUixDQUF1QkMsSUFBdkIsQ0FBNEI5QixNQUFNLENBQUMrQixpQkFBbkMsRUFBcUQsRUFBckQ7QUFDSDtBQUNKLEtBUHNDLENBT3JDQyxJQVBxQyxDQU9oQyxJQVBnQyxDQUF2QztBQVFIO0FBL0JtQixDQUFULENBQWY7QUFrQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmpDLFFBQWpCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvKua4uOaIj+mFjee9ruaWh+S7tuiOt+WPliovXHJcbnZhciBSb29tID0gcmVxdWlyZSgncm9vbScpO1xyXG5jb25zdCBjb25zdHMgPSByZXF1aXJlKCcuL21vZGVsL2NvbnN0cycpO1xyXG52YXIgUm9vbUdhbWUgPSBjYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBSb29tLFxyXG5cclxuICAgIHN0YXRpY3M6IHtcclxuICAgICAgICBjcmVhdGU6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGxldCByb29tT2JqID0gbmV3IFJvb21HYW1lKCk7XHJcbiAgICAgICAgICAgIHJvb21PYmouaW5pdFdpdGhEYXRhKGRhdGEpO1xyXG4gICAgICAgICAgICByZXR1cm4gcm9vbU9iajtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgaW5pdFdpdGhEYXRhOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgIHRoaXMuX3N1cGVyKGRhdGEucm9vbSk7XHJcbiAgICAgICAgLy/lvZXlsY/ot6/lvoRcclxuICAgICAgICB0aGlzLnZpZGVvUGF0aCA9ICcnO1xyXG4gICAgICAgIC8v6I635Y+W5b2V5bGP55qE57O757uf5pe26Ze0XHJcbiAgICAgICAgdGhpcy5zY3JlZW5UaW1lID0gMDtcclxuICAgICAgICB0aGlzLmdhbWVDb25maWdEYXRhID0ge307XHJcbiAgICAgICAgdGhpcy53b3JkUmlkID0gJyc7XHJcbiAgICAgICAgdGhpcy5jb25maWdTdWNjZXNzMiA9IGZhbHNlO1xyXG4gICAgICAgIGxldCB1cmwgPSBjb25zdHMuSFRUUF9HRVRfUEFBU19EQVRBX1NFUlZFUitcIj9nYW1lSWQ9XCIrY29uc3RzLkdBTUVfSUQrXCImcGxhdD1cIithcHBHYW1lLnBsYXRmb3JtXHJcbiAgICAgICAgICAgK1wiJnZlcnNpb249XCIrYXBwR2FtZS5wYWNrYWdlVmVyc2lvbitcIiZicmFuZD1cIisnJytcIiZmcm9tPWdhbWVcIjtcclxuICAgICAgICAvL3VybCA9ICdodHRwczovL2NzLnNubWkuY24vZ2FtZS9HZXRHYW1lVmFsdWU/Z2FtZUlkPTUwJnBsYXQ9YmFpZHUmdmVyc2lvbj0xLjAuMCZicmFuZD0mZnJvbT1nYW1lJ1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiYWQgdXJsPT09XCIrdXJsKVxyXG4gICAgICAgIHV0aWwuZ2V0VXJsU2VyQ29uZmlnKHVybCwnanNvbicsJ2dhbWUnLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICB0aGlzLmdhbWVDb25maWdEYXRhID0gZGF0YTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJnYW1lID09XCIrSlNPTi5zdHJpbmdpZnkodGhpcy5nYW1lQ29uZmlnRGF0YSkpXHJcbiAgICAgICAgICAgIHRoaXMuY29uZmlnU3VjY2VzczIgPSB0cnVlO1xyXG4gICAgICAgICAgICBpZih0aGlzLmNvbmZpZ1N1Y2Nlc3MyICYmIHRoaXMuY29uZmlnU3VjY2VzczEpe1xyXG4gICAgICAgICAgICAgICAgYXBwR2FtZS5nYW1lU2VydmVyUm9vbS5lbWl0KGNvbnN0cy5DTElFTlRfR0FNRV9TVEFSVCx7fSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LmJpbmQodGhpcykpO1xyXG4gICAgfSxcclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFJvb21HYW1lO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/ad/interstitialAd.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '65bb3OPXhxMDIngU6dETA4S', 'interstitialAd');
// gameComon/scripts/ad/interstitialAd.js

"use strict";

var InterstitialAd = cc.Class({
  properties: {},
  ctor: function ctor() {
    this.instance = null;
  },
  statics: {
    create: function create(data) {
      if (!this.instance) {
        this.instance = new InterstitialAd();
        this.instance.initWithData(data);
        return this.instance;
      }
    }
  },
  initWithData: function initWithData(data) {
    this.adId = '';

    if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'QQ') {
      //qq
      this.adId = 'e93d7d4378e53c49b258b80960fb84c1';

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.interstitialId && appGame.gameServerRoom.adConfig.interstitialId.QQ) {
        this.adId = appGame.gameServerRoom.adConfig.interstitialId.QQ.adUnitId;
      }

      this.globalData = {
        interstitialAd: qq.createInterstitialAd({
          adUnitId: this.adId
        })
      };
      console.log("插屏广告==" + this.adId);
      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '插屏广告',
        content: '创建成功',
        desc: this.adId
      }, function () {});
    } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'WX') {
      //微信
      this.adId = 'c5b484afd6953432';

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.interstitialId && appGame.gameServerRoom.adConfig.interstitialId.WX) {
        this.adId = appGame.gameServerRoom.adConfig.interstitialId.WX.adUnitId;
      }

      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '插屏广告',
        content: '创建成功',
        desc: this.adId
      }, function () {});
    } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
      //字节
      this.adId = '15c24vd9ppqti8jgb3';

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.interstitialId && appGame.gameServerRoom.adConfig.interstitialId.toutiao) {
        this.adId = appGame.gameServerRoom.adConfig.interstitialId.toutiao.adUnitId;
      }

      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '插屏广告',
        content: '创建成功',
        desc: this.adId
      }, function () {});
    }
  },
  playAd: function playAd() {
    var _this = this;

    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME && appGame.gameServerRoom.gameConfigData && appGame.gameServerRoom.gameConfigData.isbanner) {
      console.log("banner return");
      return;
    }

    console.log("播放插屏广告==");

    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
      //头条平台
      if (this.globalData && this.globalData.interstitialAd) {
        this.globalData.interstitialAd.destroy();
        this.globalData.interstitialAd = null;
      }

      this.globalData = {
        interstitialAd: tt.createInterstitialAd({
          adUnitId: this.adId
        })
      };
      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '插屏广告',
        content: '创建成功',
        desc: this.adId
      }, function () {});
      this.globalData.interstitialAd.load().then(function () {
        console.log("插屏显示成功");
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '插屏广告',
          content: '显示成功',
          desc: _this.adId
        }, function () {});
        return _this.globalData.interstitialAd.show();
      })["catch"](function (err) {
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '插屏广告',
          content: '显示失败',
          desc: _this.adId
        }, function () {});
        console.log("插屏组件出现问题", err);
      });
      this.globalData.interstitialAd.onError(function (listener) {
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '插屏广告',
          content: _this.adId,
          desc: listener.errCode + listener.errMsg
        }, function () {});
      });
    } else if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'WX') {
      //微信平台
      if (this.globalData && this.globalData.interstitialAd) {
        this.globalData.interstitialAd.offError();
        this.globalData.interstitialAd.destroy();
        this.globalData.interstitialAd = null;
        console.log("销毁");
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '插屏广告',
          content: '销毁广告',
          desc: this.adId
        }, function () {});
      }

      this.globalData = {
        /* 建议放在onReady里执行，提前加载广告 */
        InterstitialAd: wx.createInterstitialAd({
          adUnitId: this.adId
        })
      };
      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '插屏广告',
        content: '创建成功',
        desc: this.adId
      }, function () {});
      this.globalData.InterstitialAd.load()["catch"](function (err) {
        console.error('load', err);
      });
      this.globalData.InterstitialAd.onLoad(function () {
        console.log('onLoad event emit');

        _this.globalData.InterstitialAd.show()["catch"](function (err) {
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '插屏广告',
            content: '显示成功',
            desc: _this.adId
          }, function () {});
          console.error('show', err);
        });
      });
      this.globalData.InterstitialAd.onClose(function () {
        console.log('close event emit');
      });
      this.globalData.InterstitialAd.onError(function (listener) {
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '插屏广告',
          content: _this.adId,
          desc: listener.errCode + listener.errMsg
        }, function () {});
      });
      /* 建议放在需要展示插屏广告的时机执行 */
    } else {
      if (this.globalData && this.globalData.interstitialAd) {
        var interstitialAd = this.globalData.interstitialAd;
        interstitialAd.load().then(function () {
          console.log("插屏显示成功");
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '插屏广告',
            content: '显示成功',
            desc: _this.adId
          }, function () {});
          return interstitialAd.show();
        })["catch"](function (err) {
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '插屏广告',
            content: '显示失败',
            desc: _this.adId
          }, function () {});
          console.log("插屏组件出现问题", err);
        });
      }
    }
  }
});
module.exports = InterstitialAd;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/updateTime.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4cc67JlC1xALoZNsT7RR3yO', 'updateTime');
// gameComon/scripts/updateTime.js

"use strict";

var countDownInterval;
cc.Class({
  "extends": cc.Component,
  properties: {
    clockNode: cc.Node
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    //注册监听事件
    appGame.gameServerRoom.on("updateCompetitionTime", this.updateTime, this);
    this.clockNode.getComponent(cc.ProgressBar).progress = 1;
    this._count = 0;
  },
  onDestroy: function onDestroy() {
    //删除监听事件
    appGame.gameServerRoom.off("updateCompetitionTime", this.updateTime, this);
    clearInterval(countDownInterval);
  },
  start: function start() {},
  updateTime: function updateTime(type, count, totalcount) {
    if (type == 1) {
      //开始倒计时
      count = count * 1000;
      totalcount = totalcount * 1000;
      var durationtime = 100;
      this._count = count;

      if (this.clockNode) {
        this.clockNode.getComponent(cc.ProgressBar).progress = this._count / totalcount;
      }

      clearInterval(countDownInterval);
      countDownInterval = setInterval(function () {
        if (this._count > durationtime) {
          this._count -= durationtime;
        } else {
          this._count = 0;
          appGame.gameServerRoom.emit("competitionGameOver", 2);
          clearInterval(countDownInterval);
        }

        if (this.clockNode) {
          this.clockNode.getComponent(cc.ProgressBar).progress = this._count / totalcount;
        }
      }.bind(this), durationtime);
    } else {
      //关闭倒计时
      clearInterval(countDownInterval);
    }
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JpcHRzXFx1cGRhdGVUaW1lLmpzIl0sIm5hbWVzIjpbImNvdW50RG93bkludGVydmFsIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJjbG9ja05vZGUiLCJOb2RlIiwib25Mb2FkIiwiYXBwR2FtZSIsImdhbWVTZXJ2ZXJSb29tIiwib24iLCJ1cGRhdGVUaW1lIiwiZ2V0Q29tcG9uZW50IiwiUHJvZ3Jlc3NCYXIiLCJwcm9ncmVzcyIsIl9jb3VudCIsIm9uRGVzdHJveSIsIm9mZiIsImNsZWFySW50ZXJ2YWwiLCJzdGFydCIsInR5cGUiLCJjb3VudCIsInRvdGFsY291bnQiLCJkdXJhdGlvbnRpbWUiLCJzZXRJbnRlcnZhbCIsImVtaXQiLCJiaW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLGlCQUFKO0FBQ0FDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxTQUFTLEVBQUNKLEVBQUUsQ0FBQ0s7QUFETCxHQUhQO0FBT0w7QUFFQUMsRUFBQUEsTUFUSyxvQkFTSztBQUNOO0FBQ0FDLElBQUFBLE9BQU8sQ0FBQ0MsY0FBUixDQUF1QkMsRUFBdkIsQ0FBMEIsdUJBQTFCLEVBQW1ELEtBQUtDLFVBQXhELEVBQW1FLElBQW5FO0FBQ0EsU0FBS04sU0FBTCxDQUFlTyxZQUFmLENBQTRCWCxFQUFFLENBQUNZLFdBQS9CLEVBQTRDQyxRQUE1QyxHQUF1RCxDQUF2RDtBQUNBLFNBQUtDLE1BQUwsR0FBYyxDQUFkO0FBQ0gsR0FkSTtBQWdCTEMsRUFBQUEsU0FoQkssdUJBZ0JRO0FBQ1Y7QUFDQVIsSUFBQUEsT0FBTyxDQUFDQyxjQUFSLENBQXVCUSxHQUF2QixDQUEyQix1QkFBM0IsRUFBb0QsS0FBS04sVUFBekQsRUFBb0UsSUFBcEU7QUFDQU8sSUFBQUEsYUFBYSxDQUFDbEIsaUJBQUQsQ0FBYjtBQUNGLEdBcEJJO0FBc0JMbUIsRUFBQUEsS0F0QkssbUJBc0JJLENBRVIsQ0F4Qkk7QUEwQkxSLEVBQUFBLFVBMUJLLHNCQTBCTVMsSUExQk4sRUEwQldDLEtBMUJYLEVBMEJpQkMsVUExQmpCLEVBMEI0QjtBQUM3QixRQUFHRixJQUFJLElBQUUsQ0FBVCxFQUFXO0FBQUM7QUFDUkMsTUFBQUEsS0FBSyxHQUFHQSxLQUFLLEdBQUMsSUFBZDtBQUNBQyxNQUFBQSxVQUFVLEdBQUdBLFVBQVUsR0FBQyxJQUF4QjtBQUNBLFVBQUlDLFlBQVksR0FBRyxHQUFuQjtBQUNBLFdBQUtSLE1BQUwsR0FBY00sS0FBZDs7QUFDQSxVQUFHLEtBQUtoQixTQUFSLEVBQWtCO0FBQ2QsYUFBS0EsU0FBTCxDQUFlTyxZQUFmLENBQTRCWCxFQUFFLENBQUNZLFdBQS9CLEVBQTRDQyxRQUE1QyxHQUF1RCxLQUFLQyxNQUFMLEdBQVlPLFVBQW5FO0FBQ0g7O0FBQ0RKLE1BQUFBLGFBQWEsQ0FBQ2xCLGlCQUFELENBQWI7QUFDQUEsTUFBQUEsaUJBQWlCLEdBQUd3QixXQUFXLENBQUMsWUFBVztBQUN2QyxZQUFHLEtBQUtULE1BQUwsR0FBWVEsWUFBZixFQUE0QjtBQUN4QixlQUFLUixNQUFMLElBQWFRLFlBQWI7QUFDSCxTQUZELE1BRUs7QUFDRCxlQUFLUixNQUFMLEdBQWMsQ0FBZDtBQUNBUCxVQUFBQSxPQUFPLENBQUNDLGNBQVIsQ0FBdUJnQixJQUF2QixDQUE0QixxQkFBNUIsRUFBbUQsQ0FBbkQ7QUFDQVAsVUFBQUEsYUFBYSxDQUFDbEIsaUJBQUQsQ0FBYjtBQUNIOztBQUNELFlBQUcsS0FBS0ssU0FBUixFQUFrQjtBQUNkLGVBQUtBLFNBQUwsQ0FBZU8sWUFBZixDQUE0QlgsRUFBRSxDQUFDWSxXQUEvQixFQUE0Q0MsUUFBNUMsR0FBdUQsS0FBS0MsTUFBTCxHQUFZTyxVQUFuRTtBQUNIO0FBQ0osT0FYK0IsQ0FXOUJJLElBWDhCLENBV3pCLElBWHlCLENBQUQsRUFXakJILFlBWGlCLENBQS9CO0FBWUgsS0FyQkQsTUFxQks7QUFBQztBQUNGTCxNQUFBQSxhQUFhLENBQUNsQixpQkFBRCxDQUFiO0FBQ0g7QUFDSixHQW5ESSxDQXFETDs7QUFyREssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvdW50RG93bkludGVydmFsO1xyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIGNsb2NrTm9kZTpjYy5Ob2RlXHJcbiAgICB9LFxyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgLy/ms6jlhoznm5HlkKzkuovku7ZcclxuICAgICAgICBhcHBHYW1lLmdhbWVTZXJ2ZXJSb29tLm9uKFwidXBkYXRlQ29tcGV0aXRpb25UaW1lXCIsIHRoaXMudXBkYXRlVGltZSx0aGlzKTtcclxuICAgICAgICB0aGlzLmNsb2NrTm9kZS5nZXRDb21wb25lbnQoY2MuUHJvZ3Jlc3NCYXIpLnByb2dyZXNzID0gMTtcclxuICAgICAgICB0aGlzLl9jb3VudCA9IDA7XHJcbiAgICB9LFxyXG5cclxuICAgIG9uRGVzdHJveSAoKSB7XHJcbiAgICAgICAvL+WIoOmZpOebkeWQrOS6i+S7tlxyXG4gICAgICAgYXBwR2FtZS5nYW1lU2VydmVyUm9vbS5vZmYoXCJ1cGRhdGVDb21wZXRpdGlvblRpbWVcIiwgdGhpcy51cGRhdGVUaW1lLHRoaXMpO1xyXG4gICAgICAgY2xlYXJJbnRlcnZhbChjb3VudERvd25JbnRlcnZhbCk7XHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuXHJcbiAgICB9LFxyXG5cclxuICAgIHVwZGF0ZVRpbWUodHlwZSxjb3VudCx0b3RhbGNvdW50KXtcclxuICAgICAgICBpZih0eXBlPT0xKXsvL+W8gOWni+WAkuiuoeaXtlxyXG4gICAgICAgICAgICBjb3VudCA9IGNvdW50KjEwMDA7XHJcbiAgICAgICAgICAgIHRvdGFsY291bnQgPSB0b3RhbGNvdW50KjEwMDA7XHJcbiAgICAgICAgICAgIGxldCBkdXJhdGlvbnRpbWUgPSAxMDA7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvdW50ID0gY291bnQ7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuY2xvY2tOb2RlKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvY2tOb2RlLmdldENvbXBvbmVudChjYy5Qcm9ncmVzc0JhcikucHJvZ3Jlc3MgPSB0aGlzLl9jb3VudC90b3RhbGNvdW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoY291bnREb3duSW50ZXJ2YWwpO1xyXG4gICAgICAgICAgICBjb3VudERvd25JbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5fY291bnQ+ZHVyYXRpb250aW1lKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb3VudC09ZHVyYXRpb250aW1lO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY291bnQgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcEdhbWUuZ2FtZVNlcnZlclJvb20uZW1pdChcImNvbXBldGl0aW9uR2FtZU92ZXJcIiwgMik7XHJcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChjb3VudERvd25JbnRlcnZhbCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLmNsb2NrTm9kZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbG9ja05vZGUuZ2V0Q29tcG9uZW50KGNjLlByb2dyZXNzQmFyKS5wcm9ncmVzcyA9IHRoaXMuX2NvdW50L3RvdGFsY291bnQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0uYmluZCh0aGlzKSwgZHVyYXRpb250aW1lKTtcclxuICAgICAgICB9ZWxzZXsvL+WFs+mXreWAkuiuoeaXtlxyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKGNvdW50RG93bkludGVydmFsKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gdXBkYXRlIChkdCkge30sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/ad/qqAppBox.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7f232spqwBHIq9QaGgCxceY', 'qqAppBox');
// gameComon/scripts/ad/qqAppBox.js

"use strict";

var QQAppBOX = cc.Class({
  "extends": cc.Component,
  properties: {},
  ctor: function ctor() {
    this.instance = null;
  },
  statics: {
    create: function create(data) {
      if (!this.instance) {
        this.instance = new QQAppBOX();
        this.instance.initWithData(data);
        return this.instance;
      }
    }
  },
  initWithData: function initWithData(data) {
    this.boxId = '';

    if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'QQ') {
      //QQ  
      var res = qq.getSystemInfoSync();
      this.width = res.windowWidth;
      this.height = res.windowHeight; // var Version2 = util.compareVersion(res.SDKVersion,"1.7.1");
      // if(Version2 > 0){

      this.boxId = "686b9ffc40992b21d352e841f3bb2085";

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.boxId && appGame.gameServerRoom.adConfig.boxId.QQ) {
        this.boxId = appGame.gameServerRoom.adConfig.boxId.QQ.adUnitId;
      }

      this.globalData = {
        appbox: qq.createAppBox({
          adUnitId: this.boxId
        })
      };
      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '广告盒子',
        content: '创建成功',
        desc: this.boxId
      }, function () {}); // }else{
      //     httpUtils.httpPost(consts.HTTP_RECORD_SERVER,{title:'广告盒子',content:'基础库版本太低不创建广告盒子',desc:''},function(){})
      // }    
    }
  },
  playBox: function playBox(show) {
    var _this = this;

    if (this.globalData && this.globalData.appbox) {
      if (show) {
        this.globalData.appbox.load().then(function () {
          _this.globalData.appbox.show();

          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '广告盒子',
            content: '展示成功',
            desc: _this.boxId
          }, function () {});
        });
      } else {
        this.globalData.appbox.destroy();
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '广告盒子',
          content: '隐藏',
          desc: this.boxId
        }, function () {});
      }
    }
  }
});
module.exports = QQAppBOX;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JpcHRzXFxhZFxccXFBcHBCb3guanMiXSwibmFtZXMiOlsiUVFBcHBCT1giLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsImN0b3IiLCJpbnN0YW5jZSIsInN0YXRpY3MiLCJjcmVhdGUiLCJkYXRhIiwiaW5pdFdpdGhEYXRhIiwiYm94SWQiLCJzeXMiLCJwbGF0Zm9ybSIsIldFQ0hBVF9HQU1FIiwiYXBwR2FtZSIsInJlcyIsInFxIiwiZ2V0U3lzdGVtSW5mb1N5bmMiLCJ3aWR0aCIsIndpbmRvd1dpZHRoIiwiaGVpZ2h0Iiwid2luZG93SGVpZ2h0IiwiZ2FtZVNlcnZlclJvb20iLCJhZENvbmZpZyIsIlFRIiwiYWRVbml0SWQiLCJnbG9iYWxEYXRhIiwiYXBwYm94IiwiY3JlYXRlQXBwQm94IiwiaHR0cFV0aWxzIiwiaHR0cFBvc3QiLCJjb25zdHMiLCJIVFRQX1JFQ09SRF9TRVJWRVIiLCJ0aXRsZSIsImNvbnRlbnQiLCJkZXNjIiwicGxheUJveCIsInNob3ciLCJsb2FkIiwidGhlbiIsImRlc3Ryb3kiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFFBQVEsR0FBR0MsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDcEIsYUFBU0QsRUFBRSxDQUFDRSxTQURRO0FBR3BCQyxFQUFBQSxVQUFVLEVBQUUsRUFIUTtBQUtwQkMsRUFBQUEsSUFMb0Isa0JBS2Q7QUFDRixTQUFLQyxRQUFMLEdBQWdCLElBQWhCO0FBQ0gsR0FQbUI7QUFRcEJDLEVBQUFBLE9BQU8sRUFBRTtBQUNMQyxJQUFBQSxNQUFNLEVBQUUsZ0JBQVVDLElBQVYsRUFBZ0I7QUFDcEIsVUFBRyxDQUFDLEtBQUtILFFBQVQsRUFBa0I7QUFDZCxhQUFLQSxRQUFMLEdBQWdCLElBQUlOLFFBQUosRUFBaEI7QUFDQSxhQUFLTSxRQUFMLENBQWNJLFlBQWQsQ0FBMkJELElBQTNC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XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgfSxcclxuICAgIGN0b3IoKXtcclxuICAgICAgICB0aGlzLmluc3RhbmNlID0gbnVsbDtcclxuICAgIH0sXHJcbiAgICBzdGF0aWNzOiB7XHJcbiAgICAgICAgY3JlYXRlOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICBpZighdGhpcy5pbnN0YW5jZSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmluc3RhbmNlID0gbmV3IFFRQXBwQk9YKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmluc3RhbmNlLmluaXRXaXRoRGF0YShkYXRhKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmluc3RhbmNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGluaXRXaXRoRGF0YTogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICB0aGlzLmJveElkID0gJyc7XHJcbiAgICAgICAgaWYoY2Muc3lzLnBsYXRmb3JtID09IGNjLnN5cy5XRUNIQVRfR0FNRSAmJmFwcEdhbWUucGxhdGZvcm0gPT0gJ1FRJyl7IC8vUVEgIFxyXG4gICAgICAgICAgICBjb25zdCByZXMgPSBxcS5nZXRTeXN0ZW1JbmZvU3luYygpO1xyXG4gICAgICAgICAgICB0aGlzLndpZHRoID0gcmVzLndpbmRvd1dpZHRoO1xyXG4gICAgICAgICAgICB0aGlzLmhlaWdodCA9IHJlcy53aW5kb3dIZWlnaHQ7XHJcbiAgICAgICAgICAgIC8vIHZhciBWZXJzaW9uMiA9IHV0aWwuY29tcGFyZVZlcnNpb24ocmVzLlNES1ZlcnNpb24sXCIxLjcuMVwiKTtcclxuICAgICAgICAgICAgLy8gaWYoVmVyc2lvbjIgPiAwKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuYm94SWQgPSBcIjY4NmI5ZmZjNDA5OTJiMjFkMzUyZTg0MWYzYmIyMDg1XCI7XHJcbiAgICAgICAgICAgICAgICBpZihhcHBHYW1lLmdhbWVTZXJ2ZXJSb29tLmFkQ29uZmlnICYmIGFwcEdhbWUuZ2FtZVNlcnZlclJvb20uYWRDb25maWcuYm94SWQgJiYgYXBwR2FtZS5nYW1lU2VydmVyUm9vbS5hZENvbmZpZy5ib3hJZC5RUSl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ib3hJZCA9IGFwcEdhbWUuZ2FtZVNlcnZlclJvb20uYWRDb25maWcuYm94SWQuUVEuYWRVbml0SWQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwYm94OnFxLmNyZWF0ZUFwcEJveCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkVW5pdElkOiB0aGlzLmJveElkXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGh0dHBVdGlscy5odHRwUG9zdChjb25zdHMuSFRUUF9SRUNPUkRfU0VSVkVSLHt0aXRsZTon5bm/5ZGK55uS5a2QJyxjb250ZW50OifliJvlu7rmiJDlip8nLGRlc2M6dGhpcy5ib3hJZH0sZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAvLyB9ZWxzZXtcclxuICAgICAgICAgICAgLy8gICAgIGh0dHBVdGlscy5odHRwUG9zdChjb25zdHMuSFRUUF9SRUNPUkRfU0VSVkVSLHt0aXRsZTon5bm/5ZGK55uS5a2QJyxjb250ZW50Oifln7rnoYDlupPniYjmnKzlpKrkvY7kuI3liJvlu7rlub/lkYrnm5LlrZAnLGRlc2M6Jyd9LGZ1bmN0aW9uKCl7fSlcclxuICAgICAgICAgICAgLy8gfSAgICBcclxuICAgICAgICB9ICAgICAgIFxyXG4gICAgfSxcclxuICAgIHBsYXlCb3g6ZnVuY3Rpb24oc2hvdyl7XHJcbiAgICAgICAgaWYodGhpcy5nbG9iYWxEYXRhICYmIHRoaXMuZ2xvYmFsRGF0YS5hcHBib3gpe1xyXG4gICAgICAgICAgICBpZihzaG93KXtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5hcHBib3gubG9hZCgpLnRoZW4oKCk9PntcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEuYXBwYm94LnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICBodHRwVXRpbHMuaHR0cFBvc3QoY29uc3RzLkhUVFBfUkVDT1JEX1NFUlZFUix7dGl0bGU6J+W5v+WRiuebkuWtkCcsY29udGVudDon5bGV56S65oiQ5YqfJyxkZXNjOnRoaXMuYm94SWR9LGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEuYXBwYm94LmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgICAgIGh0dHBVdGlscy5odHRwUG9zdChjb25zdHMuSFRUUF9SRUNPUkRfU0VSVkVSLHt0aXRsZTon5bm/5ZGK55uS5a2QJyxjb250ZW50OifpmpDol48nLGRlc2M6dGhpcy5ib3hJZH0sZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KTtcclxubW9kdWxlLmV4cG9ydHMgPSBRUUFwcEJPWDsiXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/ad/wxgridAd.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '27d3buB6l5GlarYvR/+7For', 'wxgridAd');
// gameComon/scripts/ad/wxgridAd.js

"use strict";

var GridAd = cc.Class({
  properties: {},
  ctor: function ctor() {
    this.instance = null;
  },
  statics: {
    create: function create(data) {
      if (!this.instance) {
        this.instance = new GridAd();
        this.instance.initWithData(data);
        return this.instance;
      }
    }
  },
  initWithData: function initWithData(data) {
    this.targetBannerAdWidth = 200;

    if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'WX') {
      var _wx$getSystemInfoSync = wx.getSystemInfoSync(),
          windowWidth = _wx$getSystemInfoSync.windowWidth,
          windowHeight = _wx$getSystemInfoSync.windowHeight;

      this.width = windowWidth;
      this.height = windowHeight;
      this.adId = 'adunit-144bcfc4f8f3cefe';

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.gridId && appGame.gameServerRoom.adConfig.gridId.WX) {
        this.adId = appGame.gameServerRoom.adConfig.gridId.WX.adUnitId;
      }

      console.log("grid 第一次创建");
      this.globalData = {
        gridAd: wx.createGridAd({
          adUnitId: this.adId,
          adIntervals: 30,
          adTheme: 'white',
          gridCount: 5,
          style: {
            // left: 0,
            // top: 0,
            // width: 330,
            width: this.targetBannerAdWidth,
            top: 0,
            // 根据系统约定尺寸计算出广告高度
            left: (this.width - this.targetBannerAdWidth) / 2,
            opacity: 0.8
          }
        })
      };
      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '格子广告',
        content: '创建成功',
        desc: this.adId
      }, function () {});
      this.refreshSize();
    }
  },
  playGridAd: function playGridAd(isShow) {
    var _this = this;

    if (this.globalData && this.globalData.gridAd) {
      if (isShow) {
        console.log("播放盒子广告");
        this.globalData.gridAd.show().then(function () {
          console.log("盒子广告展示成功");
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '格子广告',
            content: '展示成功',
            desc: _this.adId
          }, function () {});
        });
      } else {
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '格子广告',
          content: '隐藏',
          desc: this.adId
        }, function () {});
        this.globalData.gridAd.hide();
      }
    }
  },
  refreshSize: function refreshSize() {
    var _this2 = this;

    // 尺寸调整时会触发回调，通过回调拿到的广告真实宽高再进行定位适配处理
    // 注意：如果在回调里再次调整尺寸，要确保不要触发死循环！！！
    if (this.globalData && this.globalData.gridAd) {
      if (cc.sys.platform == cc.sys.WECHAT_GAME) {
        //头条平台
        this.globalData.gridAd.onResize(function (size) {
          console.log("grid shezhi大小" + _this2.height + "   " + _this2.width);
          _this2.globalData.gridAd.style.top = 0;
          _this2.globalData.gridAd.style.left = (_this2.width - size.width) / 2;
        });
      }

      this.globalData.gridAd.onError(function (listener) {
        console.log("盒子广告出错");
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '格子广告',
          content: _this2.adId,
          desc: listener.errCode + listener.errMsg
        }, function () {});
      });
    }
  }
});
module.exports = GridAd;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/dialogBox.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b7b24I8RWhMxIogfhVLnP+c', 'dialogBox');
// gameComon/scripts/dialogBox.js

"use strict";

/**
 * 弹出对话框。为了避免逻辑相互影响，对话框消失即remove，不持续存在于scene。
 */
var DialogBox = cc.Class({
  "extends": cc.Component,
  properties: {
    titleLabel: cc.Label,
    contentLabel: cc.Label,
    confirmButton: cc.Button,
    cancelButton: cc.Button,
    okButton: cc.Button,
    confirmLabel: cc.Label,
    cancelLabel: cc.Label,
    okLabel: cc.Label,
    confirmCallback: null,
    cancelCallback: null
  },
  onLoad: function onLoad() {
    this.confirmButton.node.active = false;
    this.okButton.node.active = false;
    this.cancelButton.node.active = false;
    this.confirmButton.node.on(cc.Node.EventType.TOUCH_END, this.onConfirmBtnClicked, this);
    this.cancelButton.node.on(cc.Node.EventType.TOUCH_END, this.onCancelBtnClicked, this);
    this.okButton.node.on(cc.Node.EventType.TOUCH_END, this.onOkBtnClicked, this);
  },
  onConfirmBtnClicked: function onConfirmBtnClicked() {
    this.confirmCallback && this.confirmCallback();
    this.hide();
  },
  onCancelBtnClicked: function onCancelBtnClicked() {
    this.cancelCallback && this.cancelCallback();
    this.hide();
  },
  onOkBtnClicked: function onOkBtnClicked() {
    this.onConfirmBtnClicked();
    this.hide();
  },

  /**
   * @param opts
   * title(可选):标题
   * content:内容
   * confirmCB(可选):确定回调，和cancelCB必并存
   * cancelCB(可选):取消回调，和confirmCB必并存
   * okCB(可选):确定回调，和confirmCB及cancelCB不并存。根据是否传入okCB隐藏或显示三个按钮
   */
  show: function show(opts) {
    opts = opts || {}; //if (opts.title) {
    //    this.titleLabel.string = opts.title;
    //}

    if (opts.content) {
      this.contentLabel.string = opts.content;
    }

    this.confirmLabel.string = opts.confirmLabel || '';
    this.cancelLabel.string = opts.cancelLabel || '';
    this.okLabel.string = opts.okLabel || '';
    this.confirmCallback = opts.confirmCB || opts.okCB;
    this.cancelCallback = opts.cancelCB;
    this.okButton.node.active = !!opts.okCB;
    this.confirmButton.node.active = !opts.okCB;
    this.cancelButton.node.active = !opts.okCB;
  },
  hide: function hide() {
    this.node.removeFromParent();
  }
});
module.exports = DialogBox;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JpcHRzXFxkaWFsb2dCb3guanMiXSwibmFtZXMiOlsiRGlhbG9nQm94IiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJ0aXRsZUxhYmVsIiwiTGFiZWwiLCJjb250ZW50TGFiZWwiLCJjb25maXJtQnV0dG9uIiwiQnV0dG9uIiwiY2FuY2VsQnV0dG9uIiwib2tCdXR0b24iLCJjb25maXJtTGFiZWwiLCJjYW5jZWxMYWJlbCIsIm9rTGFiZWwiLCJjb25maXJtQ2FsbGJhY2siLCJjYW5jZWxDYWxsYmFjayIsIm9uTG9hZCIsIm5vZGUiLCJhY3RpdmUiLCJvbiIsIk5vZGUiLCJFdmVudFR5cGUiLCJUT1VDSF9FTkQiLCJvbkNvbmZpcm1CdG5DbGlja2VkIiwib25DYW5jZWxCdG5DbGlja2VkIiwib25Pa0J0bkNsaWNrZWQiLCJoaWRlIiwic2hvdyIsIm9wdHMiLCJjb250ZW50Iiwic3RyaW5nIiwiY29uZmlybUNCIiwib2tDQiIsImNhbmNlbENCIiwicmVtb3ZlRnJvbVBhcmVudCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsSUFBSUEsU0FBUyxHQUFHQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNyQixhQUFTRCxFQUFFLENBQUNFLFNBRFM7QUFHckJDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxVQUFVLEVBQUVKLEVBQUUsQ0FBQ0ssS0FEUDtBQUVSQyxJQUFBQSxZQUFZLEVBQUVOLEVBQUUsQ0FBQ0ssS0FGVDtBQUdSRSxJQUFBQSxhQUFhLEVBQUVQLEVBQUUsQ0FBQ1EsTUFIVjtBQUlSQyxJQUFBQSxZQUFZLEVBQUVULEVBQUUsQ0FBQ1EsTUFKVDtBQUtSRSxJQUFBQSxRQUFRLEVBQUVWLEVBQUUsQ0FBQ1EsTUFMTDtBQU1SRyxJQUFBQSxZQUFZLEVBQUNYLEVBQUUsQ0FBQ0ssS0FOUjtBQU9STyxJQUFB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ckVvQixDQUFULENBQWhCO0FBd0VBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJyQyxTQUFqQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiDlvLnlh7rlr7nor53moYbjgILkuLrkuobpgb/lhY3pgLvovpHnm7jkupLlvbHlk43vvIzlr7nor53moYbmtojlpLHljbNyZW1vdmXvvIzkuI3mjIHnu63lrZjlnKjkuo5zY2VuZeOAglxuICovXG52YXIgRGlhbG9nQm94ID0gY2MuQ2xhc3Moe1xuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcblxuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgdGl0bGVMYWJlbDogY2MuTGFiZWwsXG4gICAgICAgIGNvbnRlbnRMYWJlbDogY2MuTGFiZWwsXG4gICAgICAgIGNvbmZpcm1CdXR0b246IGNjLkJ1dHRvbixcbiAgICAgICAgY2FuY2VsQnV0dG9uOiBjYy5CdXR0b24sXG4gICAgICAgIG9rQnV0dG9uOiBjYy5CdXR0b24sXG4gICAgICAgIGNvbmZpcm1MYWJlbDpjYy5MYWJlbCxcbiAgICAgICAgY2FuY2VsTGFiZWw6Y2MuTGFiZWwsXG4gICAgICAgIG9rTGFiZWw6Y2MuTGFiZWwsXG4gICAgICAgIGNvbmZpcm1DYWxsYmFjazogbnVsbCxcbiAgICAgICAgY2FuY2VsQ2FsbGJhY2s6IG51bGxcbiAgICB9LFxuXG4gICAgb25Mb2FkKCl7XG4gICAgICAgIHRoaXMuY29uZmlybUJ1dHRvbi5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLm9rQnV0dG9uLm5vZGUuYWN0aXZlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY2FuY2VsQnV0dG9uLm5vZGUuYWN0aXZlID0gZmFsc2U7XG5cbiAgICAgICAgdGhpcy5jb25maXJtQnV0dG9uLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELHRoaXMub25Db25maXJtQnRuQ2xpY2tlZCx0aGlzKTtcbiAgICAgICAgdGhpcy5jYW5jZWxCdXR0b24ubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsdGhpcy5vbkNhbmNlbEJ0bkNsaWNrZWQsdGhpcyk7XG4gICAgICAgIHRoaXMub2tCdXR0b24ubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsdGhpcy5vbk9rQnRuQ2xpY2tlZCx0aGlzKTtcbiAgICB9LFxuXG4gICAgb25Db25maXJtQnRuQ2xpY2tlZDogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmNvbmZpcm1DYWxsYmFjayAmJiB0aGlzLmNvbmZpcm1DYWxsYmFjaygpO1xuICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICB9LFxuXG4gICAgb25DYW5jZWxCdG5DbGlja2VkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuY2FuY2VsQ2FsbGJhY2sgJiYgdGhpcy5jYW5jZWxDYWxsYmFjaygpO1xuICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICB9LFxuXG4gICAgb25Pa0J0bkNsaWNrZWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5vbkNvbmZpcm1CdG5DbGlja2VkKCk7XG4gICAgICAgIHRoaXMuaGlkZSgpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gb3B0c1xuICAgICAqIHRpdGxlKOWPr+mAiSk65qCH6aKYXG4gICAgICogY29udGVudDrlhoXlrrlcbiAgICAgKiBjb25maXJtQ0Io5Y+v6YCJKTrnoa7lrprlm57osIPvvIzlkoxjYW5jZWxDQuW/heW5tuWtmFxuICAgICAqIGNhbmNlbENCKOWPr+mAiSk65Y+W5raI5Zue6LCD77yM5ZKMY29uZmlybUNC5b+F5bm25a2YXG4gICAgICogb2tDQijlj6/pgIkpOuehruWumuWbnuiwg++8jOWSjGNvbmZpcm1DQuWPimNhbmNlbENC5LiN5bm25a2Y44CC5qC55o2u5piv5ZCm5Lyg5YWlb2tDQumakOiXj+aIluaYvuekuuS4ieS4quaMiemSrlxuICAgICAqL1xuICAgIHNob3c6IGZ1bmN0aW9uIChvcHRzKSB7XG4gICAgICAgIG9wdHMgPSBvcHRzIHx8IHt9O1xuICAgICAgICAvL2lmIChvcHRzLnRpdGxlKSB7XG4gICAgICAgIC8vICAgIHRoaXMudGl0bGVMYWJlbC5zdHJpbmcgPSBvcHRzLnRpdGxlO1xuICAgICAgICAvL31cbiAgICAgICAgaWYgKG9wdHMuY29udGVudCkge1xuICAgICAgICAgICAgdGhpcy5jb250ZW50TGFiZWwuc3RyaW5nID0gb3B0cy5jb250ZW50O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29uZmlybUxhYmVsLnN0cmluZyA9IG9wdHMuY29uZmlybUxhYmVsfHwnJztcbiAgICAgICAgdGhpcy5jYW5jZWxMYWJlbC5zdHJpbmcgPSBvcHRzLmNhbmNlbExhYmVsfHwnJztcbiAgICAgICAgdGhpcy5va0xhYmVsLnN0cmluZyA9IG9wdHMub2tMYWJlbHx8Jyc7XG4gICAgICAgIHRoaXMuY29uZmlybUNhbGxiYWNrID0gb3B0cy5jb25maXJtQ0IgfHwgb3B0cy5va0NCO1xuICAgICAgICB0aGlzLmNhbmNlbENhbGxiYWNrID0gb3B0cy5jYW5jZWxDQjtcbiAgICAgICAgdGhpcy5va0J1dHRvbi5ub2RlLmFjdGl2ZSA9ICEhb3B0cy5va0NCO1xuICAgICAgICB0aGlzLmNvbmZpcm1CdXR0b24ubm9kZS5hY3RpdmUgPSAhb3B0cy5va0NCO1xuICAgICAgICB0aGlzLmNhbmNlbEJ1dHRvbi5ub2RlLmFjdGl2ZSA9ICFvcHRzLm9rQ0I7XG4gICAgfSxcblxuICAgIGhpZGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5ub2RlLnJlbW92ZUZyb21QYXJlbnQoKTtcbiAgICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEaWFsb2dCb3g7Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/model/async.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}(function (process,global){
"use strict";
cc._RF.push(module, '35852wUtjRNI6/OdR5fjH33', 'async');
// gameComon/scripts/model/async.js

"use strict";

/*!
 * async
 * https://github.com/caolan/async
 *
 * Copyright 2010-2014 Caolan McMahon
 * Released under the MIT license
 */
(function () {
  var async = {};

  function noop() {} // global on the server, window in the browser


  var root, previous_async;

  if (typeof window == 'object' && this === window) {
    root = window;
  } else if (typeof global == 'object' && this === global) {
    root = global;
  } else {
    root = this;
  }

  if (root != null) {
    previous_async = root.async;
  }

  async.noConflict = function () {
    root.async = previous_async;
    return async;
  };

  function only_once(fn) {
    var called = false;
    return function () {
      if (called) throw new Error("Callback was already called.");
      called = true;
      fn.apply(this, arguments);
    };
  }

  function _once(fn) {
    var called = false;
    return function () {
      if (called) return;
      called = true;
      fn.apply(this, arguments);
    };
  } //// cross-browser compatiblity functions ////


  var _toString = Object.prototype.toString;

  var _isArray = Array.isArray || function (obj) {
    return _toString.call(obj) === '[object Array]';
  };

  function _isArrayLike(arr) {
    return _isArray(arr) || // has a positive integer length property
    typeof arr.length === "number" && arr.length >= 0 && arr.length % 1 === 0;
  }

  function _each(coll, iterator) {
    return _isArrayLike(coll) ? _arrayEach(coll, iterator) : _forEachOf(coll, iterator);
  }

  function _arrayEach(arr, iterator) {
    var index = -1,
        length = arr.length;

    while (++index < length) {
      iterator(arr[index], index, arr);
    }
  }

  function _map(arr, iterator) {
    var index = -1,
        length = arr.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iterator(arr[index], index, arr);
    }

    return result;
  }

  function _range(count) {
    return _map(Array(count), function (v, i) {
      return i;
    });
  }

  function _reduce(arr, iterator, memo) {
    _arrayEach(arr, function (x, i, a) {
      memo = iterator(memo, x, i, a);
    });

    return memo;
  }

  function _forEachOf(object, iterator) {
    _arrayEach(_keys(object), function (key) {
      iterator(object[key], key);
    });
  }

  var _keys = Object.keys || function (obj) {
    var keys = [];

    for (var k in obj) {
      if (obj.hasOwnProperty(k)) {
        keys.push(k);
      }
    }

    return keys;
  };

  function _keyIterator(coll) {
    var i = -1;
    var len;
    var keys;

    if (_isArrayLike(coll)) {
      len = coll.length;
      return function next() {
        i++;
        return i < len ? i : null;
      };
    } else {
      keys = _keys(coll);
      len = keys.length;
      return function next() {
        i++;
        return i < len ? keys[i] : null;
      };
    }
  }

  function _baseSlice(arr, start) {
    start = start || 0;
    var index = -1;
    var length = arr.length;

    if (start) {
      length -= start;
      length = length < 0 ? 0 : length;
    }

    var result = Array(length);

    while (++index < length) {
      result[index] = arr[index + start];
    }

    return result;
  }

  function _withoutIndex(iterator) {
    return function (value, index, callback) {
      return iterator(value, callback);
    };
  } //// exported async module functions ////
  //// nextTick implementation with browser-compatible fallback ////
  // capture the global reference to guard against fakeTimer mocks


  var _setImmediate;

  if (typeof setImmediate === 'function') {
    _setImmediate = setImmediate;
  }

  if (typeof process === 'undefined' || !process.nextTick) {
    if (_setImmediate) {
      async.nextTick = function (fn) {
        // not a direct alias for IE10 compatibility
        _setImmediate(fn);
      };

      async.setImmediate = async.nextTick;
    } else {
      async.nextTick = function (fn) {
        setTimeout(fn, 0);
      };

      async.setImmediate = async.nextTick;
    }
  } else {
    async.nextTick = process.nextTick;

    if (_setImmediate) {
      async.setImmediate = function (fn) {
        // not a direct alias for IE10 compatibility
        _setImmediate(fn);
      };
    } else {
      async.setImmediate = async.nextTick;
    }
  }

  async.forEach = async.each = function (arr, iterator, callback) {
    return async.eachOf(arr, _withoutIndex(iterator), callback);
  };

  async.forEachSeries = async.eachSeries = function (arr, iterator, callback) {
    return async.eachOfSeries(arr, _withoutIndex(iterator), callback);
  };

  async.forEachLimit = async.eachLimit = function (arr, limit, iterator, callback) {
    return _eachOfLimit(limit)(arr, _withoutIndex(iterator), callback);
  };

  async.forEachOf = async.eachOf = function (object, iterator, callback) {
    callback = _once(callback || noop);
    object = object || [];
    var size = _isArrayLike(object) ? object.length : _keys(object).length;
    var completed = 0;

    if (!size) {
      return callback(null);
    }

    _each(object, function (value, key) {
      iterator(object[key], key, only_once(done));
    });

    function done(err) {
      if (err) {
        callback(err);
      } else {
        completed += 1;

        if (completed >= size) {
          callback(null);
        }
      }
    }
  };

  async.forEachOfSeries = async.eachOfSeries = function (obj, iterator, callback) {
    callback = _once(callback || noop);
    obj = obj || [];

    var nextKey = _keyIterator(obj);

    var key = nextKey();

    function iterate() {
      var sync = true;

      if (key === null) {
        return callback(null);
      }

      iterator(obj[key], key, only_once(function (err) {
        if (err) {
          callback(err);
        } else {
          key = nextKey();

          if (key === null) {
            return callback(null);
          } else {
            if (sync) {
              async.nextTick(iterate);
            } else {
              iterate();
            }
          }
        }
      }));
      sync = false;
    }

    iterate();
  };

  async.forEachOfLimit = async.eachOfLimit = function (obj, limit, iterator, callback) {
    _eachOfLimit(limit)(obj, iterator, callback);
  };

  function _eachOfLimit(limit) {
    return function (obj, iterator, callback) {
      callback = _once(callback || noop);
      obj = obj || [];

      var nextKey = _keyIterator(obj);

      if (limit <= 0) {
        return callback(null);
      }

      var done = false;
      var running = 0;
      var errored = false;

      (function replenish() {
        if (done && running <= 0) {
          return callback(null);
        }

        while (running < limit && !errored) {
          var key = nextKey();

          if (key === null) {
            done = true;

            if (running <= 0) {
              callback(null);
            }

            return;
          }

          running += 1;
          iterator(obj[key], key, only_once(function (err) {
            running -= 1;

            if (err) {
              callback(err);
              errored = true;
            } else {
              replenish();
            }
          }));
        }
      })();
    };
  }

  function doParallel(fn) {
    return function (obj, iterator, callback) {
      return fn(async.eachOf, obj, iterator, callback);
    };
  }

  function doParallelLimit(limit, fn) {
    return function (obj, iterator, callback) {
      return fn(_eachOfLimit(limit), obj, iterator, callback);
    };
  }

  function doSeries(fn) {
    return function (obj, iterator, callback) {
      return fn(async.eachOfSeries, obj, iterator, callback);
    };
  }

  function _asyncMap(eachfn, arr, iterator, callback) {
    callback = _once(callback || noop);
    var results = [];
    eachfn(arr, function (value, index, callback) {
      iterator(value, function (err, v) {
        results[index] = v;
        callback(err);
      });
    }, function (err) {
      callback(err, results);
    });
  }

  async.map = doParallel(_asyncMap);
  async.mapSeries = doSeries(_asyncMap);

  async.mapLimit = function (arr, limit, iterator, callback) {
    return _mapLimit(limit)(arr, iterator, callback);
  };

  function _mapLimit(limit) {
    return doParallelLimit(limit, _asyncMap);
  } // reduce only has a series version, as doing reduce in parallel won't
  // work in many situations.


  async.inject = async.foldl = async.reduce = function (arr, memo, iterator, callback) {
    async.eachOfSeries(arr, function (x, i, callback) {
      iterator(memo, x, function (err, v) {
        memo = v;
        callback(err);
      });
    }, function (err) {
      callback(err || null, memo);
    });
  };

  async.foldr = async.reduceRight = function (arr, memo, iterator, callback) {
    var reversed = _map(arr, function (x) {
      return x;
    }).reverse();

    async.reduce(reversed, memo, iterator, callback);
  };

  function _filter(eachfn, arr, iterator, callback) {
    var results = [];
    arr = _map(arr, function (x, i) {
      return {
        index: i,
        value: x
      };
    });
    eachfn(arr, function (x, index, callback) {
      iterator(x.value, function (v) {
        if (v) {
          results.push(x);
        }

        callback();
      });
    }, function () {
      callback(_map(results.sort(function (a, b) {
        return a.index - b.index;
      }), function (x) {
        return x.value;
      }));
    });
  }

  async.select = async.filter = doParallel(_filter);
  async.selectSeries = async.filterSeries = doSeries(_filter);

  function _reject(eachfn, arr, iterator, callback) {
    var results = [];
    arr = _map(arr, function (x, i) {
      return {
        index: i,
        value: x
      };
    });
    eachfn(arr, function (x, index, callback) {
      iterator(x.value, function (v) {
        if (!v) {
          results.push(x);
        }

        callback();
      });
    }, function () {
      callback(_map(results.sort(function (a, b) {
        return a.index - b.index;
      }), function (x) {
        return x.value;
      }));
    });
  }

  async.reject = doParallel(_reject);
  async.rejectSeries = doSeries(_reject);

  function _detect(eachfn, arr, iterator, main_callback) {
    eachfn(arr, function (x, index, callback) {
      iterator(x, function (result) {
        if (result) {
          main_callback(x);
          main_callback = noop;
        } else {
          callback();
        }
      });
    }, function () {
      main_callback();
    });
  }

  async.detect = doParallel(_detect);
  async.detectSeries = doSeries(_detect);

  async.any = async.some = function (arr, iterator, main_callback) {
    async.eachOf(arr, function (x, _, callback) {
      iterator(x, function (v) {
        if (v) {
          main_callback(true);
          main_callback = noop;
        }

        callback();
      });
    }, function () {
      main_callback(false);
    });
  };

  async.all = async.every = function (arr, iterator, main_callback) {
    async.eachOf(arr, function (x, _, callback) {
      iterator(x, function (v) {
        if (!v) {
          main_callback(false);
          main_callback = noop;
        }

        callback();
      });
    }, function () {
      main_callback(true);
    });
  };

  async.sortBy = function (arr, iterator, callback) {
    async.map(arr, function (x, callback) {
      iterator(x, function (err, criteria) {
        if (err) {
          callback(err);
        } else {
          callback(null, {
            value: x,
            criteria: criteria
          });
        }
      });
    }, function (err, results) {
      if (err) {
        return callback(err);
      } else {
        callback(null, _map(results.sort(comparator), function (x) {
          return x.value;
        }));
      }
    });

    function comparator(left, right) {
      var a = left.criteria,
          b = right.criteria;
      return a < b ? -1 : a > b ? 1 : 0;
    }
  };

  async.auto = function (tasks, callback) {
    callback = _once(callback || noop);

    var keys = _keys(tasks);

    var remainingTasks = keys.length;

    if (!remainingTasks) {
      return callback(null);
    }

    var results = {};
    var listeners = [];

    function addListener(fn) {
      listeners.unshift(fn);
    }

    function removeListener(fn) {
      for (var i = 0; i < listeners.length; i += 1) {
        if (listeners[i] === fn) {
          listeners.splice(i, 1);
          return;
        }
      }
    }

    function taskComplete() {
      remainingTasks--;

      _arrayEach(listeners.slice(0), function (fn) {
        fn();
      });
    }

    addListener(function () {
      if (!remainingTasks) {
        callback(null, results);
      }
    });

    _arrayEach(keys, function (k) {
      var task = _isArray(tasks[k]) ? tasks[k] : [tasks[k]];

      function taskCallback(err) {
        var args = _baseSlice(arguments, 1);

        if (args.length <= 1) {
          args = args[0];
        }

        if (err) {
          var safeResults = {};

          _arrayEach(_keys(results), function (rkey) {
            safeResults[rkey] = results[rkey];
          });

          safeResults[k] = args;
          callback(err, safeResults);
        } else {
          results[k] = args;
          async.setImmediate(taskComplete);
        }
      }

      var requires = task.slice(0, Math.abs(task.length - 1)) || []; // prevent dead-locks

      var len = requires.length;
      var dep;

      while (len--) {
        if (!(dep = tasks[requires[len]])) {
          throw new Error('Has inexistant dependency');
        }

        if (_isArray(dep) && !!~dep.indexOf(k)) {
          throw new Error('Has cyclic dependencies');
        }
      }

      function ready() {
        return _reduce(requires, function (a, x) {
          return a && results.hasOwnProperty(x);
        }, true) && !results.hasOwnProperty(k);
      }

      if (ready()) {
        task[task.length - 1](taskCallback, results);
      } else {
        addListener(listener);
      }

      function listener() {
        if (ready()) {
          removeListener(listener);
          task[task.length - 1](taskCallback, results);
        }
      }
    });
  };

  async.retry = function (times, task, callback) {
    var DEFAULT_TIMES = 5;
    var attempts = []; // Use defaults if times not passed

    if (typeof times === 'function') {
      callback = task;
      task = times;
      times = DEFAULT_TIMES;
    } // Make sure times is a number


    times = parseInt(times, 10) || DEFAULT_TIMES;

    function wrappedTask(wrappedCallback, wrappedResults) {
      function retryAttempt(task, finalAttempt) {
        return function (seriesCallback) {
          task(function (err, result) {
            seriesCallback(!err || finalAttempt, {
              err: err,
              result: result
            });
          }, wrappedResults);
        };
      }

      while (times) {
        attempts.push(retryAttempt(task, !(times -= 1)));
      }

      async.series(attempts, function (done, data) {
        data = data[data.length - 1];
        (wrappedCallback || callback)(data.err, data.result);
      });
    } // If a callback is passed, run this as a controll flow


    return callback ? wrappedTask() : wrappedTask;
  };

  async.waterfall = function (tasks, callback) {
    callback = _once(callback || noop);

    if (!_isArray(tasks)) {
      var err = new Error('First argument to waterfall must be an array of functions');
      return callback(err);
    }

    if (!tasks.length) {
      return callback();
    }

    function wrapIterator(iterator) {
      return function (err) {
        if (err) {
          callback.apply(null, arguments);
        } else {
          var args = _baseSlice(arguments, 1);

          var next = iterator.next();

          if (next) {
            args.push(wrapIterator(next));
          } else {
            args.push(callback);
          }

          ensureAsync(iterator).apply(null, args);
        }
      };
    }

    wrapIterator(async.iterator(tasks))();
  };

  function _parallel(eachfn, tasks, callback) {
    callback = callback || noop;
    var results = _isArrayLike(tasks) ? [] : {};
    eachfn(tasks, function (task, key, callback) {
      task(function (err) {
        var args = _baseSlice(arguments, 1);

        if (args.length <= 1) {
          args = args[0];
        }

        results[key] = args;
        callback(err);
      });
    }, function (err) {
      callback(err, results);
    });
  }

  async.parallel = function (tasks, callback) {
    _parallel(async.eachOf, tasks, callback);
  };

  async.parallelLimit = function (tasks, limit, callback) {
    _parallel(_eachOfLimit(limit), tasks, callback);
  };

  async.series = function (tasks, callback) {
    callback = callback || noop;
    var results = _isArrayLike(tasks) ? [] : {};
    async.eachOfSeries(tasks, function (task, key, callback) {
      task(function (err) {
        var args = _baseSlice(arguments, 1);

        if (args.length <= 1) {
          args = args[0];
        }

        results[key] = args;
        callback(err);
      });
    }, function (err) {
      callback(err, results);
    });
  };

  async.iterator = function (tasks) {
    function makeCallback(index) {
      function fn() {
        if (tasks.length) {
          tasks[index].apply(null, arguments);
        }

        return fn.next();
      }

      fn.next = function () {
        return index < tasks.length - 1 ? makeCallback(index + 1) : null;
      };

      return fn;
    }

    return makeCallback(0);
  };

  async.apply = function (fn) {
    var args = _baseSlice(arguments, 1);

    return function () {
      return fn.apply(null, args.concat(_baseSlice(arguments)));
    };
  };

  function _concat(eachfn, arr, fn, callback) {
    var result = [];
    eachfn(arr, function (x, index, cb) {
      fn(x, function (err, y) {
        result = result.concat(y || []);
        cb(err);
      });
    }, function (err) {
      callback(err, result);
    });
  }

  async.concat = doParallel(_concat);
  async.concatSeries = doSeries(_concat);

  async.whilst = function (test, iterator, callback) {
    if (test()) {
      iterator(function (err) {
        if (err) {
          return callback(err);
        }

        async.whilst(test, iterator, callback);
      });
    } else {
      callback(null);
    }
  };

  async.doWhilst = function (iterator, test, callback) {
    iterator(function (err) {
      if (err) {
        return callback(err);
      }

      var args = _baseSlice(arguments, 1);

      if (test.apply(null, args)) {
        async.doWhilst(iterator, test, callback);
      } else {
        callback(null);
      }
    });
  };

  async.until = function (test, iterator, callback) {
    if (!test()) {
      iterator(function (err) {
        if (err) {
          return callback(err);
        }

        async.until(test, iterator, callback);
      });
    } else {
      callback(null);
    }
  };

  async.doUntil = function (iterator, test, callback) {
    iterator(function (err) {
      if (err) {
        return callback(err);
      }

      var args = _baseSlice(arguments, 1);

      if (!test.apply(null, args)) {
        async.doUntil(iterator, test, callback);
      } else {
        callback(null);
      }
    });
  };

  function _queue(worker, concurrency, payload) {
    if (concurrency == null) {
      concurrency = 1;
    } else if (concurrency === 0) {
      throw new Error('Concurrency must not be zero');
    }

    function _insert(q, data, pos, callback) {
      if (callback != null && typeof callback !== "function") {
        throw new Error("task callback must be a function");
      }

      q.started = true;

      if (!_isArray(data)) {
        data = [data];
      }

      if (data.length === 0 && q.idle()) {
        // call drain immediately if there are no tasks
        return async.setImmediate(function () {
          q.drain();
        });
      }

      _arrayEach(data, function (task) {
        var item = {
          data: task,
          callback: callback || noop
        };

        if (pos) {
          q.tasks.unshift(item);
        } else {
          q.tasks.push(item);
        }

        if (q.tasks.length === q.concurrency) {
          q.saturated();
        }
      });

      async.setImmediate(q.process);
    }

    function _next(q, tasks) {
      return function () {
        workers -= 1;
        var args = arguments;

        _arrayEach(tasks, function (task) {
          task.callback.apply(task, args);
        });

        if (q.tasks.length + workers === 0) {
          q.drain();
        }

        q.process();
      };
    }

    var workers = 0;
    var q = {
      tasks: [],
      concurrency: concurrency,
      saturated: noop,
      empty: noop,
      drain: noop,
      started: false,
      paused: false,
      push: function push(data, callback) {
        _insert(q, data, false, callback);
      },
      kill: function kill() {
        q.drain = noop;
        q.tasks = [];
      },
      unshift: function unshift(data, callback) {
        _insert(q, data, true, callback);
      },
      process: function process() {
        if (!q.paused && workers < q.concurrency && q.tasks.length) {
          while (workers < q.concurrency && q.tasks.length) {
            var tasks = payload ? q.tasks.splice(0, payload) : q.tasks.splice(0, q.tasks.length);

            var data = _map(tasks, function (task) {
              return task.data;
            });

            if (q.tasks.length === 0) {
              q.empty();
            }

            workers += 1;
            var cb = only_once(_next(q, tasks));
            worker(data, cb);
          }
        }
      },
      length: function length() {
        return q.tasks.length;
      },
      running: function running() {
        return workers;
      },
      idle: function idle() {
        return q.tasks.length + workers === 0;
      },
      pause: function pause() {
        q.paused = true;
      },
      resume: function resume() {
        if (q.paused === false) {
          return;
        }

        q.paused = false;
        var resumeCount = Math.min(q.concurrency, q.tasks.length); // Need to call q.process once per concurrent
        // worker to preserve full concurrency after pause

        for (var w = 1; w <= resumeCount; w++) {
          async.setImmediate(q.process);
        }
      }
    };
    return q;
  }

  async.queue = function (worker, concurrency) {
    var q = _queue(function (items, cb) {
      worker(items[0], cb);
    }, concurrency, 1);

    return q;
  };

  async.priorityQueue = function (worker, concurrency) {
    function _compareTasks(a, b) {
      return a.priority - b.priority;
    }

    function _binarySearch(sequence, item, compare) {
      var beg = -1,
          end = sequence.length - 1;

      while (beg < end) {
        var mid = beg + (end - beg + 1 >>> 1);

        if (compare(item, sequence[mid]) >= 0) {
          beg = mid;
        } else {
          end = mid - 1;
        }
      }

      return beg;
    }

    function _insert(q, data, priority, callback) {
      if (callback != null && typeof callback !== "function") {
        throw new Error("task callback must be a function");
      }

      q.started = true;

      if (!_isArray(data)) {
        data = [data];
      }

      if (data.length === 0) {
        // call drain immediately if there are no tasks
        return async.setImmediate(function () {
          q.drain();
        });
      }

      _arrayEach(data, function (task) {
        var item = {
          data: task,
          priority: priority,
          callback: typeof callback === 'function' ? callback : noop
        };
        q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);

        if (q.tasks.length === q.concurrency) {
          q.saturated();
        }

        async.setImmediate(q.process);
      });
    } // Start with a normal queue


    var q = async.queue(worker, concurrency); // Override push to accept second parameter representing priority

    q.push = function (data, priority, callback) {
      _insert(q, data, priority, callback);
    }; // Remove unshift function


    delete q.unshift;
    return q;
  };

  async.cargo = function (worker, payload) {
    return _queue(worker, 1, payload);
  };

  function _console_fn(name) {
    return function (fn) {
      var args = _baseSlice(arguments, 1);

      fn.apply(null, args.concat([function (err) {
        var args = _baseSlice(arguments, 1);

        if (typeof console !== 'undefined') {
          if (err) {
            if (console.error) {
              console.error(err);
            }
          } else if (console[name]) {
            _arrayEach(args, function (x) {
              console[name](x);
            });
          }
        }
      }]));
    };
  }

  async.log = _console_fn('log');
  async.dir = _console_fn('dir');
  /*async.info = _console_fn('info');
  async.warn = _console_fn('warn');
  async.error = _console_fn('error');*/

  async.memoize = function (fn, hasher) {
    var memo = {};
    var queues = {};

    hasher = hasher || function (x) {
      return x;
    };

    function memoized() {
      var args = _baseSlice(arguments);

      var callback = args.pop();
      var key = hasher.apply(null, args);

      if (key in memo) {
        async.nextTick(function () {
          callback.apply(null, memo[key]);
        });
      } else if (key in queues) {
        queues[key].push(callback);
      } else {
        queues[key] = [callback];
        fn.apply(null, args.concat([function () {
          memo[key] = _baseSlice(arguments);
          var q = queues[key];
          delete queues[key];

          for (var i = 0, l = q.length; i < l; i++) {
            q[i].apply(null, arguments);
          }
        }]));
      }
    }

    memoized.memo = memo;
    memoized.unmemoized = fn;
    return memoized;
  };

  async.unmemoize = function (fn) {
    return function () {
      return (fn.unmemoized || fn).apply(null, arguments);
    };
  };

  function _times(mapper) {
    return function (count, iterator, callback) {
      mapper(_range(count), iterator, callback);
    };
  }

  async.times = _times(async.map);
  async.timesSeries = _times(async.mapSeries);

  async.timesLimit = function (count, limit, iterator, callback) {
    return async.mapLimit(_range(count), limit, iterator, callback);
  };

  async.seq = function ()
  /* functions... */
  {
    var fns = arguments;
    return function () {
      var that = this;

      var args = _baseSlice(arguments);

      var callback = args.slice(-1)[0];

      if (typeof callback == 'function') {
        args.pop();
      } else {
        callback = noop;
      }

      async.reduce(fns, args, function (newargs, fn, cb) {
        fn.apply(that, newargs.concat([function () {
          var err = arguments[0];

          var nextargs = _baseSlice(arguments, 1);

          cb(err, nextargs);
        }]));
      }, function (err, results) {
        callback.apply(that, [err].concat(results));
      });
    };
  };

  async.compose = function ()
  /* functions... */
  {
    return async.seq.apply(null, Array.prototype.reverse.call(arguments));
  };

  function _applyEach(eachfn, fns
  /*args...*/
  ) {
    function go() {
      var that = this;

      var args = _baseSlice(arguments);

      var callback = args.pop();
      return eachfn(fns, function (fn, _, cb) {
        fn.apply(that, args.concat([cb]));
      }, callback);
    }

    if (arguments.length > 2) {
      var args = _baseSlice(arguments, 2);

      return go.apply(this, args);
    } else {
      return go;
    }
  }

  async.applyEach = function ()
  /*fns, args...*/
  {
    var args = _baseSlice(arguments);

    return _applyEach.apply(null, [async.eachOf].concat(args));
  };

  async.applyEachSeries = function ()
  /*fns, args...*/
  {
    var args = _baseSlice(arguments);

    return _applyEach.apply(null, [async.eachOfSeries].concat(args));
  };

  async.forever = function (fn, callback) {
    var done = only_once(callback || noop);
    var task = ensureAsync(fn);

    function next(err) {
      if (err) {
        return done(err);
      }

      task(next);
    }

    next();
  };

  function ensureAsync(fn) {
    return function ()
    /*...args, callback*/
    {
      var args = _baseSlice(arguments);

      var callback = args.pop();
      args.push(function () {
        var innerArgs = arguments;

        if (sync) {
          async.setImmediate(function () {
            callback.apply(null, innerArgs);
          });
        } else {
          callback.apply(null, innerArgs);
        }
      });
      var sync = true;
      fn.apply(this, args);
      sync = false;
    };
  }

  async.ensureAsync = ensureAsync; // Node.js

  if (typeof module !== 'undefined' && module.exports) {
    module.exports = async;
  } // AMD / RequireJS
  else if (typeof define !== 'undefined' && define.amd) {
      define([], function () {
        return async;
      });
    } // included directly via <script> tag
    else {
        root.async = async;
      }
})();

cc._RF.pop();

}).call(this,require("C:/CocosDashboard_1.0.12/resources/.editors/Creator/2.4.4/resources/app.asar/node_modules/process/browser.js"),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/model/consts.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f36fcCR/lBD/qmR2CZ3f4L4', 'consts');
// gameComon/scripts/model/consts.js

"use strict";

var consts = {
  CLIENT_GAME_START: "client.onGameStart",
  LOCAL_EVENT_POPUP_LOADTIP: "localEventPopupLoadTip",
  //提示框,
  LOCAL_EVENT_POPUP_DIALOG: "localEventPopupDialog",
  //对话框,
  LOCAL_EVENT_POPUP_GAME_COMMON: "localEventPopupGameCommon",
  //公用prefab
  LOCAL_GAME_RESULT_NATIVE_AD: "client.onResultNativeAD",
  //原生广告
  CLIENT_GAME_VIDEO_SHOW: "client.onGameShowVideo",
  CLIENT_GAME_RESULT_VIDEO_SHOW: "client.onGameResultShowVideo",
  CLIENT_GAME_PLAY_VIDEO: "client.onGamePlayVideo",
  HTTP_RECORD_SERVER: "https://l.h5120.com/te/tk/gameapplist",
  HTTP_EVENT_MIDDLE_DESK_CONFIG: "client.onGameMiddleDeskConfig",
  //获取配置

  /*需要修改的配置*/
  HTTP_RECORD_PACKAGE: 'com.snmi.crazyremove',
  //包名
  HTTP_RECORD_PACKAGENAME: '疯狂消消消',
  //游戏名
  GAME_ID: 15,
  HTTP_GET_PAAS_DATA_SERVER: 'https://cs.snmi.cn/game/GetGameValue',
  //获取中台服务器配置
  HTTP_GET_GAME_DATA_SERVER: 'https://cs.snmi.cn/switch/GetGameValue',
  //获取游戏服务器配置

  /*不需要修改的配置*/
  HTTP_SPREAD_WORD: "https://s.snmi.cn/game/kl",
  HTTP_SPREAD_REPORT: "https://t.h5data.com/d/gkl?",
  HTTP_SPREAD_CLOSE: "https://t.h5data.com/d/gclose?rid=" // https://l.h5120.com  //打点
  // https://cs.snmi.cn   //互跳
  // https://t.h5data.com  //互跳
  // https://s.snmi.cn   //配置
  // https://st.h5120.com  //下载

};
module.exports = consts;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JpcHRzXFxtb2RlbFxcY29uc3RzLmpzIl0sIm5hbWVzIjpbImNvbnN0cyIsIkNMSUVOVF9HQU1FX1NUQVJUIiwiTE9DQUxfRVZFTlRfUE9QVVBfTE9BRFRJUCIsIkxPQ0FMX0VWRU5UX1BPUFVQX0RJQUxPRyIsIkxPQ0FMX0VWRU5UX1BPUFVQX0dBTUVfQ09NTU9OIiwiTE9DQUxfR0FNRV9SRVNVTFRfTkFUSVZFX0FEIiwiQ0xJRU5UX0dBTUVfVklERU9fU0hPVyIsIkNMSUVOVF9HQU1FX1JFU1VMVF9WSURFT19TSE9XIiwiQ0xJRU5UX0dBTUVfUExBWV9WSURFTyIsIkhUVFBfUkVDT1JEX1NFUlZFUiIsIkhUVFBfRVZFTlRfTUlERExFX0RFU0tfQ09ORklHIiwiSFRUUF9SRUNPUkRfUEFDS0FHRSIsIkhUVFBfUkVDT1JEX1BBQ0tBR0VOQU1FIiwiR0FNRV9JRCIsIkhUVFBfR0VUX1BBQVNfREFUQV9TRVJWRVIiLCJIVFRQX0dFVF9HQU1FX0RBVEFfU0VSVkVSIiwiSFRUUF9TUFJFQURfV09SRCIsIkhUVFBfU1BSRUFEX1JFUE9SVCIsIkhUVFBfU1BSRUFEX0NMT1NFIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxNQUFNLEdBQUc7QUFDVEMsRUFBQUEsaUJBQWlCLEVBQUMsb0JBRFQ7QUFFVEMsRUFBQUEseUJBQXlCLEVBQUMsd0JBRmpCO0FBRTJDO0FBQ3BEQyxFQUFBQSx3QkFBd0IsRUFBRSx1QkFIakI7QUFHMEM7QUFDbkRDLEVBQUFBLDZCQUE2QixFQUFFLDJCQUp0QjtBQUltRDtBQUM1REMsRUFBQUEsMkJBQTJCLEVBQUUseUJBTHBCO0FBSytDO0FBQ3hEQyxFQUFBQSxzQkFBc0IsRUFBQyx3QkFOZDtBQU9UQyxFQUFBQSw2QkFBNkIsRUFBQyw4QkFQckI7QUFRVEMsRUFBQUEsc0JBQXNCLEVBQUMsd0JBUmQ7QUFTVEMsRUFBQUEsa0JBQWtCLEVBQUMsdUNBVFY7QUFVVEMsRUFBQUEsNkJBQTZCLEVBQUMsK0JBVnJCO0FBVXNEOztBQUUvRDtBQUNBQyxFQUFBQSxtQkFBbUIsRUFBQyxzQkFiWDtBQWFtQztBQUM1Q0MsRUFBQUEsdUJBQXVCLEVBQUMsT0FkZjtBQWN3QjtBQUNqQ0MsRUFBQUEsT0FBTyxFQUFDLEVBZkM7QUFnQlRDLEVBQUFBLHlCQUF5QixFQUFDLHNDQWhCakI7QUFnQndEO0FBQ2pFQyxFQUFBQSx5QkFBeUIsRUFBQyx3Q0FqQmpCO0FBaUIwRDs7QUFDbkU7QUFDQUMsRUFBQUEsZ0JBQWdCLEVBQUMsMkJBbkJSO0FBb0JUQyxFQUFBQSxrQkFBa0IsRUFBQyw2QkFwQlY7QUFxQlRDLEVBQUFBLGlCQUFpQixFQUFDLG9DQXJCVCxDQXVCVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQTNCUyxDQUFiO0FBOEJBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixNQUFqQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbnN0cyA9IHtcbiAgICBDTElFTlRfR0FNRV9TVEFSVDpcImNsaWVudC5vbkdhbWVTdGFydFwiLFxuICAgIExPQ0FMX0VWRU5UX1BPUFVQX0xPQURUSVA6XCJsb2NhbEV2ZW50UG9wdXBMb2FkVGlwXCIsIC8v5o+Q56S65qGGLFxuICAgIExPQ0FMX0VWRU5UX1BPUFVQX0RJQUxPRzogXCJsb2NhbEV2ZW50UG9wdXBEaWFsb2dcIiwgLy/lr7nor53moYYsXG4gICAgTE9DQUxfRVZFTlRfUE9QVVBfR0FNRV9DT01NT046IFwibG9jYWxFdmVudFBvcHVwR2FtZUNvbW1vblwiLCAvL+WFrOeUqHByZWZhYlxuICAgIExPQ0FMX0dBTUVfUkVTVUxUX05BVElWRV9BRDogXCJjbGllbnQub25SZXN1bHROYXRpdmVBRFwiLCAvL+WOn+eUn+W5v+WRilxuICAgIENMSUVOVF9HQU1FX1ZJREVPX1NIT1c6XCJjbGllbnQub25HYW1lU2hvd1ZpZGVvXCIsXG4gICAgQ0xJRU5UX0dBTUVfUkVTVUxUX1ZJREVPX1NIT1c6XCJjbGllbnQub25HYW1lUmVzdWx0U2hvd1ZpZGVvXCIsXG4gICAgQ0xJRU5UX0dBTUVfUExBWV9WSURFTzpcImNsaWVudC5vbkdhbWVQbGF5VmlkZW9cIixcbiAgICBIVFRQX1JFQ09SRF9TRVJWRVI6XCJodHRwczovL2wuaDUxMjAuY29tL3RlL3RrL2dhbWVhcHBsaXN0XCIsXG4gICAgSFRUUF9FVkVOVF9NSURETEVfREVTS19DT05GSUc6XCJjbGllbnQub25HYW1lTWlkZGxlRGVza0NvbmZpZ1wiLCAvL+iOt+WPlumFjee9rlxuXG4gICAgLyrpnIDopoHkv67mlLnnmoTphY3nva4qL1xuICAgIEhUVFBfUkVDT1JEX1BBQ0tBR0U6J2NvbS5zbm1pLmNyYXp5cmVtb3ZlJywgLy/ljIXlkI1cbiAgICBIVFRQX1JFQ09SRF9QQUNLQUdFTkFNRTon55av54uC5raI5raI5raIJywgLy/muLjmiI/lkI1cbiAgICBHQU1FX0lEOjE1LFxuICAgIEhUVFBfR0VUX1BBQVNfREFUQV9TRVJWRVI6J2h0dHBzOi8vY3Muc25taS5jbi9nYW1lL0dldEdhbWVWYWx1ZScsLy/ojrflj5bkuK3lj7DmnI3liqHlmajphY3nva5cbiAgICBIVFRQX0dFVF9HQU1FX0RBVEFfU0VSVkVSOidodHRwczovL2NzLnNubWkuY24vc3dpdGNoL0dldEdhbWVWYWx1ZScsLy/ojrflj5bmuLjmiI/mnI3liqHlmajphY3nva5cbiAgICAvKuS4jemcgOimgeS/ruaUueeahOmFjee9riovXG4gICAgSFRUUF9TUFJFQURfV09SRDpcImh0dHBzOi8vcy5zbm1pLmNuL2dhbWUva2xcIixcbiAgICBIVFRQX1NQUkVBRF9SRVBPUlQ6XCJodHRwczovL3QuaDVkYXRhLmNvbS9kL2drbD9cIixcbiAgICBIVFRQX1NQUkVBRF9DTE9TRTpcImh0dHBzOi8vdC5oNWRhdGEuY29tL2QvZ2Nsb3NlP3JpZD1cIixcblxuICAgIC8vIGh0dHBzOi8vbC5oNTEyMC5jb20gIC8v5omT54K5XG4gICAgLy8gaHR0cHM6Ly9jcy5zbm1pLmNuICAgLy/kupLot7NcbiAgICAvLyBodHRwczovL3QuaDVkYXRhLmNvbSAgLy/kupLot7NcbiAgICAvLyBodHRwczovL3Muc25taS5jbiAgIC8v6YWN572uXG4gICAgLy8gaHR0cHM6Ly9zdC5oNTEyMC5jb20gIC8v5LiL6L29XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnN0cztcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/ad/wxnativeAd.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9a169f/Cs9NFp08r0mXOa8e', 'wxnativeAd');
// gameComon/scripts/ad/wxnativeAd.js

"use strict";

var WXNativeAd = cc.Class({
  properties: {},
  ctor: function ctor() {
    this.instance = null;
  },
  statics: {
    create: function create(data) {
      if (!this.instance) {
        this.instance = new WXNativeAd();
        this.instance.initWithData(data);
        return this.instance;
      }
    }
  },
  initWithData: function initWithData(data) {
    this.targetBannerAdWidth = 200;

    if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'WX') {
      //微信平台 
      var _wx$getSystemInfoSync = wx.getSystemInfoSync(),
          windowWidth = _wx$getSystemInfoSync.windowWidth,
          windowHeight = _wx$getSystemInfoSync.windowHeight;

      this.width = windowWidth;
      this.height = windowHeight;
      this.adId = 'adunit-48fb335e928d3b4d';

      if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.gridId && appGame.gameServerRoom.adConfig.nativeId.WX) {
        this.adId = appGame.gameServerRoom.adConfig.nativeId.WX.adUnitId;
      }

      this.globalData = {
        nativeAd: wx.createCustomAd({
          adUnitId: this.adId,
          adIntervals: 30,
          style: {
            left: 20,
            top: this.height - this.targetBannerAdWidth / 16 * 9
          }
        })
      };
      httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
        title: '原生广告',
        content: '创建成功',
        desc: this.adId
      }, function () {});
    }

    this.refreshSize();
  },
  playNativeAd: function playNativeAd(isShow) {
    var _this = this;

    if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'WX') {
      if (this.globalData && this.globalData.nativeAd) {
        if (isShow) {
          this.globalData.nativeAd.show();
        } else {
          this.globalData.nativeAd.hide();
        }
      }
    } else {
      if (this.globalData && this.globalData.nativeAd) {
        var nativeAd = this.globalData.nativeAd;
        nativeAd.load().then(function () {
          console.log("原生广告显示成功");
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '原生广告',
            content: '展示成功',
            desc: _this.adId
          }, function () {});
        })["catch"](function (err) {
          console.log("原生广告出现问题", err);
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '原生广告',
            content: '展示失败',
            desc: _this.adId
          }, function () {});
        });
        nativeAd.onLoad(function (res) {
          console.log("\u52A0\u8F7D\u539F\u751F\u5E7F\u544A\u6210\u529F", "\uFF1A" + JSON.stringify(res)); //res.adList && res.adList.length > 0 && (appGame.nativeAdData = res.adList[0])
        });
      }
    }
  },
  refreshSize: function refreshSize() {
    var _this2 = this;

    // 尺寸调整时会触发回调，通过回调拿到的广告真实宽高再进行定位适配处理
    // 注意：如果在回调里再次调整尺寸，要确保不要触发死循环！！！
    if (this.globalData && this.globalData.nativeAd) {
      this.globalData.nativeAd.onError(function (listener) {
        console.log("原生广告出错");
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '原生广告',
          content: _this2.adId,
          desc: listener.errCode + listener.errMsg
        }, function () {});
      });
    }
  }
});
module.exports = WXNativeAd;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/model/httpUtils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1c82dl9OYBOLaaJO15Yt8bQ', 'httpUtils');
// gameComon/scripts/model/httpUtils.js

"use strict";

module.exports = {
  onLoad: function onLoad() {},
  httpGet: function httpGet(url, cb) {
    var xhr = cc.loader.getXMLHttpRequest();

    xhr.onreadystatechange = function () {
      if (xhr.readyState === 4 && xhr.status >= 200 && xhr.status < 300) {
        var respone = xhr.responseText;
        cb && cb(null, respone);
      } else if (xhr.readyState === 4 && (xhr.status > 400 || xhr.status == 0)) {
        cb && cb(xhr.status);
      }
    };

    xhr.onerror = function (error) {
      cc.log('httpUtils onreadystatechange  onerror====' + xhr.readyState + '===' + xhr.status);

      if (xhr.readyState == 4 && xhr.status == 0 || xhr.readyState == 1 && xhr.status == 0) {
        cb && cb(503); //503   （服务不可用） 服务器目前无法使用（由于超载或停机维护）
      }
    };

    if (cc.sys.isNative) {
      xhr.setRequestHeader("Accept-Encoding", "gzip,deflate");
    }

    xhr.open("GET", url, true);
    xhr.timeout = 5000; // 5 seconds for timeout

    xhr.send();
  },
  httpGets: function httpGets(url, callback) {
    cc.log("url==" + url);
    var xhr = cc.loader.getXMLHttpRequest();
    var timedout = false;
    var timer = setTimeout(function () {
      timedout = true;
      xhr.abort();
      callback();
    }, 2000);

    xhr.onreadystatechange = function () {
      if (xhr.readyState == 4) {
        if (timedout) {
          return;
        }

        clearTimeout(timer);

        if (xhr.status >= 200 && xhr.status < 300) {
          var respone = xhr.responseText;

          if (respone) {
            callback(respone);
          }
        } else if (xhr.status > 400 || xhr.status == 0) {
          callback("false");
        }
      }
    };

    xhr.open("GET", url, true);
    xhr.setRequestHeader("Content-Type", "text/plain;charset=UTF-8");

    if (cc.sys.isNative) {
      xhr.setRequestHeader("Accept-Encoding", "gzip,deflate");
    }

    xhr.send();
  },
  httpPost: function httpPost(url, params, callback) {
    var query = [];
    var snmiguid = cc.sys.localStorage.getItem('snmi_guid');
    query['snmi'] = encodeURIComponent(JSON.stringify(snmiguid));
    query['deviceInfo'] = encodeURIComponent(JSON.stringify(appGame.deviceInfo));
    query['timestamp'] = new Date().getTime();
    var info = {
      'package': consts.HTTP_RECORD_PACKAGE,
      'packageName': consts.HTTP_RECORD_PACKAGENAME,
      'packageVersion': appGame.packageVersion,
      'versionCode': '1',
      'platfrom': appGame.platform
    };
    query['manifest'] = encodeURIComponent(JSON.stringify(info));
    query['title'] = encodeURIComponent(params.title);
    query['content'] = encodeURIComponent(params.content);

    if (params.desc) {
      query['desc'] = encodeURIComponent(params.desc);
    } else {
      query['desc'] = encodeURIComponent('');
    }

    var xhr = cc.loader.getXMLHttpRequest();

    xhr.onreadystatechange = function () {
      if (xhr.readyState === 4 && xhr.status >= 200 && xhr.status < 300) {
        var respone = xhr.responseText;

        if (respone) {
          callback(respone);
        }
      } else {
        callback(-1);
      }
    }; //xhr.open("POST", url, true);
    //xhr.send(params);  decodeURIComponent


    var geturl = url + "?" + Object.keys(query).map(function (key) {
      return key + "=" + query[key];
    }).join('&'); //cc.log("geturl===="+geturl)

    xhr.open("GET", geturl, true);
    xhr.send();
  },
  httpSendRequest: function httpSendRequest(url, callback) {
    //cc.log("url==="+url)
    var xhr = cc.loader.getXMLHttpRequest();
    var timedout = false;
    var timer = setTimeout(function () {
      timedout = true;
      xhr.abort();
      callback(-1);
    }, 2000);

    xhr.onreadystatechange = function () {
      if (xhr.readyState == 4) {
        if (timedout) {
          return;
        }

        clearTimeout(timer);

        if (xhr.status >= 200 && xhr.status < 300) {
          var respone = xhr.responseText;

          if (respone) {
            var respones = JSON.parse(respone);
            callback(respones);
          } else {
            callback(1);
          }
        } else if (xhr.status > 400 || xhr.status == 0) {
          callback(-1);
        }
      }
    };

    xhr.open("POST", url, true);
    xhr.send(); //xhr.open("POST", url, true);
    //xhr.send(params);
  },
  httpPostParam: function httpPostParam(url, params, callback) {
    var xhr = cc.loader.getXMLHttpRequest();

    xhr.onreadystatechange = function () {
      console.log('xhr.readyState=' + xhr.readyState + '  xhr.status=' + xhr.status);

      if (xhr.readyState === 4 && xhr.status >= 200 && xhr.status < 300) {
        var respone = xhr.responseText;

        if (respone) {
          var pars = JSON.parse(respone);
          callback(pars);
        }
      } else {
        callback(-1);
      }
    };

    xhr.open("POST", url, true); //xhr.setRequestHeader('Access-Control-Allow-Origin', '*'); 
    //xhr.setRequestHeader('content-type', 'application/json')

    xhr.timeout = 5000; // 5 seconds for timeout  

    var payload = JSON.stringify(params);
    xhr.send(payload);
  },
  loadNetToNativeImg: function loadNetToNativeImg(url, callback) {
    var dirpath = jsb.fileUtils.getWritablePath() + 'img/';
    var filepath = dirpath + MD5(url) + '.png';

    function loadEnd() {
      cc.loader.load(filepath, function (err, tex) {
        if (err) {
          cc.error(err);
        } else {
          var spriteFrame = new cc.SpriteFrame(tex);

          if (spriteFrame) {
            spriteFrame.retain();
            callback(spriteFrame);
          }
        }
      });
    }

    if (jsb.fileUtils.isFileExist(filepath)) {
      cc.log('Remote is find' + filepath);
      loadEnd();
      return;
    }

    var saveFile = function saveFile(data) {
      if (typeof data !== 'undefined') {
        if (!jsb.fileUtils.isDirectoryExist(dirpath)) {
          jsb.fileUtils.createDirectory(dirpath);
        }

        if (jsb.fileUtils.writeDataToFile(new Uint8Array(data), filepath)) {
          cc.log('Remote write file succeed.');
          loadEnd();
        } else {
          cc.log('Remote write file failed.');
        }
      } else {
        cc.log('Remote download file failed.');
      }
    };

    var xhr = new XMLHttpRequest();

    xhr.onreadystatechange = function () {
      cc.log("xhr.readyState  " + xhr.readyState);
      cc.log("xhr.status  " + xhr.status);

      if (xhr.readyState === 4) {
        if (xhr.status === 200) {
          xhr.responseType = 'arraybuffer';
          saveFile(xhr.response);
        } else {
          saveFile(null);
        }
      }
    }.bind(this);

    xhr.open("GET", url, true);
    xhr.send();
  }
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/model/emitter.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bebe1jW6dZFa5TewiY9r4WZ', 'emitter');
// gameComon/scripts/model/emitter.js

"use strict";

/**
 * Expose `Emitter`.
 */
module.exports = Emitter;
window.EventEmitter = Emitter;
/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
}

;
/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }

  return obj;
}
/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */


Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn, obj) {
  var fun = null;

  if (fn && obj) {
    fun = fn.bind(obj);
    fun.fn = fn;
  } else {
    fun = fn;
  }

  this._callbacks = this._callbacks || {};
  (this._callbacks[event] = this._callbacks[event] || []).push(fun);
  return this;
};
/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */


Emitter.prototype.once = function (event, fn, obj) {
  var self = this;
  this._callbacks = this._callbacks || {};

  function on() {
    self.off(event, on);
    fn.apply(obj || this, arguments);
  }

  on.fn = fn;
  this._callbacks = this._callbacks || {};
  (this._callbacks[event] = this._callbacks[event] || []).push(on); //this.on(event, on);

  return this;
};
/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */


Emitter.prototype.off = Emitter.prototype.removeListener = //Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function (event, fn) {
  this._callbacks = this._callbacks || {}; // all

  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  } // specific event


  var callbacks = this._callbacks[event];
  if (!callbacks) return this; // remove all handlers

  if (1 == arguments.length) {
    delete this._callbacks[event];
    return this;
  } // remove specific handler


  var cb;

  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];

    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }

  return this;
};
/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */


Emitter.prototype.emit = function (event) {
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1),
      callbacks = this._callbacks[event];

  if (callbacks) {
    callbacks = callbacks.slice(0);

    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};
/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */


Emitter.prototype.listeners = function (event) {
  this._callbacks = this._callbacks || {};
  return this._callbacks[event] || [];
};
/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */


Emitter.prototype.hasListeners = function (event) {
  return !!this.listeners(event).length;
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/ad/qqBlockAd.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '59fb8mIHidNo75VI5Kyxo8X', 'qqBlockAd');
// gameComon/scripts/ad/qqBlockAd.js

"use strict";

var videoId = '';
var BlockAd = cc.Class({
  "extends": cc.Component,
  properties: {},
  ctor: function ctor() {
    this.instance = null;
  },
  statics: {
    create: function create(data) {
      if (!this.instance) {
        this.instance = new BlockAd();
        this.instance.initWithData(data);
        return this.instance;
      }
    }
  },
  initWithData: function initWithData(data) {
    this.targetBannerAdWidth = 200;
  },
  playBlockad: function playBlockad(show, count) {
    var _this = this;

    if (count === void 0) {
      count = 4;
    }

    if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'QQ') {
      //QQ
      if (show) {
        if (this.globalData && this.globalData.blockAd) {
          this.globalData.blockAd.destroy();
        }

        var res = qq.getSystemInfoSync();
        this.width = res.windowWidth;
        this.height = res.windowHeight;
        var Version2 = util.compareVersion(res.SDKVersion, "1.15.0"); //if(Version2 > 0){

        videoId = "672c9551ab8b8b8284a73dde8cf1406a";

        if (appGame.gameServerRoom.adConfig && appGame.gameServerRoom.adConfig.blockId && appGame.gameServerRoom.adConfig.blockId.QQ) {
          videoId = appGame.gameServerRoom.adConfig.blockId.QQ.adUnitId;
        }

        this.globalData = {
          blockAd: qq.createBlockAd({
            adUnitId: videoId,
            size: count,
            orientation: 'landscape',
            style: {
              //left: 16,
              //top: this.height - (this.targetBannerAdWidth / 16) * 9, // 根据系统约定尺寸计算出广告高度,
              // width: this.targetBannerAdWidth,
              left: 16,
              top: 100
            }
          })
        };
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '积木广告',
          content: '创建成功',
          desc: videoId
        }, function () {}); //this.refreshSize();

        this.globalData.blockAd.onError(function (res) {
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '积木广告',
            content: videoId,
            desc: listener.errCode + listener.errMsg
          }, function () {});
        });
        this.globalData.blockAd.onLoad(function (res) {
          console.log('globalData blockAd onLoad', res);

          _this.globalData.blockAd.show().then(function () {
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '积木广告',
              content: '展示成功',
              desc: videoId
            }, function () {});
          })["catch"](function (res) {
            httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
              title: '积木广告',
              content: '展示失败',
              desc: videoId
            }, function () {});
          });
        });
      } else {
        if (this.globalData && this.globalData.blockAd) {
          this.globalData.blockAd.destroy();
          httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
            title: '积木广告',
            content: '隐藏',
            desc: videoId
          }, function () {});
        }
      }
    }
  },
  refreshSize: function refreshSize() {
    var _this2 = this;

    if (this.globalData && this.globalData.bannerAd) {
      if (cc.sys.platform == cc.sys.WECHAT_GAME && appGame.platform == 'QQ') {
        //QQ
        this.globalData.blockAd.onResize(function (size) {
          console.log("积木广告 shezhi大小" + _this2.height + "   " + _this2.width);
          _this2.globalData.blockAd.style.top = _this2.height - size.height;
          _this2.globalData.blockAd.style.left = (_this2.width - size.width) / 2;
        });
      }
    }
  }
});
module.exports = BlockAd;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/model/appGame.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ed2f8mb9M5M3JYlDEliFk1E', 'appGame');
// gameComon/scripts/model/appGame.js

"use strict";

/**
 * 模型层根节点
 */
var Emitter = require('emitter');

var AppGame = cc.Class({
  properties: {},
  ctor: function ctor() {
    cc.log('create new AppGame start');
    var self = this;
    this.gameServerRoom = {};
    this.videoBanner = {}; //激励视频

    this.interstitialAd = {}; //插屏广告

    this.banner = {}; //banner广告

    this.nativeAd = {}; //原生广告

    this.appBoxAd = {}; //盒子广告

    this.blockAd = {}; //积木广告

    this.gridAd = {};
    this.deviceInfo = ""; //设备信息

    this.userId = ""; //本地生成的玩家userId

    this.nativeAdData = null;
    this.visibleSize = cc.view.getVisibleSize();
    this.platform = ''; //平台

    this.screenAuto = {}; //录屏

    this.appStartTime = 0;
    this.appFinishTime = 0;
    this.isClick = false; //录屏时常判断

    if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {
      //字节
      this.packageVersion = "1.0.0";
      this.platform = 'toutiao';
    } else if (cc.sys.platform == cc.sys.WECHAT_GAME) {
      //微信  QQ   WX
      this.packageVersion = "1.0.0";
      this.platform = 'QQ';
    } else if (cc.sys.platform == cc.sys.BAIDU_GAME) {
      //百度
      this.packageVersion = "1.0.0";
      this.platform = 'baidu';
    } else if (cc.sys.platform == cc.sys.OPPO_GAME) {
      //oppo
      this.packageVersion = "1.0.0";
      this.platform = 'oppo';
    } else if (cc.sys.platform == cc.sys.XIAOMI_GAME) {
      //小米
      this.packageVersion = "1.0.0";
      this.platform = 'xiaomi';
    } else if (cc.sys.platform == cc.sys.VIVO_GAME) {
      //vivo
      this.packageVersion = "1.0.0";
      this.platform = 'vivo';
    } else if (cc.sys.platform == cc.sys.ANDROID) {
      this.packageVersion = "1.0.0";
      this.platform = 'android';
    } else {
      this.packageVersion = "1.0.0";
      this.platform = 'QQ';
    }

    var createObj = function createObj(className) {
      var ctorFun = require(className);

      var obj = new ctorFun(self);
      cc.log('初始化AppGame时已创建%s', className);
      return obj;
    };

    this.audioMgr = createObj('audioMgr'); //音效

    this.emitter = new AppEmitter(this); //弹窗、跑马灯等公用事件的注册和触发工具

    cc.log('create new AppGame end');
    this.show2Hide();
  },
  statics: {
    init: function init() {
      if (!window.appGame) {
        cc.log('have no window.AppGame');
        window.consts = require('consts');
        window.httpUtils = require('httpUtils');
        window.async = require('async');
        window.underscore = require('underscore');
        window.util = require('util');
        window.platformFun = require('platformFun');

        if (cc.sys.os == cc.sys.OS_ANDROID) {
          window.androidHelper = require('androidHelper');
        }

        window.appGame = new AppGame();
      } else {
        cc.log('have window.app, so do nothing');
      }
    }
  },
  show2Hide: function show2Hide() {
    /* 游戏进入前台 */
    cc.game.on(cc.game.EVENT_SHOW, function () {
      if (appGame.interstitialAd && appGame.gameServerRoom.gameConfigData && !appGame.gameServerRoom.gameConfigData.isbanner) {
        appGame.interstitialAd.playAd();
      }

      if (appGame.gameServerRoom && appGame.gameServerRoom.isHadWord) {
        util.spreadWordFun();
      }

      console.log('game enter fore on');
    });
    /* 游戏进入后台 */

    cc.game.on(cc.game.EVENT_HIDE, function () {
      console.log('game enter back on');

      if (appGame.gameServerRoom && appGame.gameServerRoom.wordRid) {
        util.spreadClose(appGame.gameServerRoom.wordRid);
      }

      if (appGame.appStartTime != 0) {
        //超过10分钟的话不用打点
        appGame.appFinishTime = new Date().getTime() - appGame.appStartTime;
        appGame.appFinishTime = util.timeConvertInt(appGame.appFinishTime);
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, {
          title: '关闭APP',
          content: 'APP停留时长',
          desc: appGame.appFinishTime
        }, function () {});
      }
    });
  }
});
module.exports = AppGame;

var AppEmitter = function AppEmitter(app) {
  var addEventListener = this.addEventListener;

  this.on = this.addEventListener = function (event, fn, obj) {
    //cc.log('添加app本地事件，%s', event);
    addEventListener.call(this, event, fn, obj);
  };

  var removeEventListener = this.removeEventListener;

  this.off = this.removeEventListener = function (event, fn) {
    //cc.log('删除app本地事件，%s', event);
    removeEventListener.call(this, event, fn);
  };
};

AppEmitter.prototype = new EventEmitter();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/ad/nativeAd.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '798f3uehO1CeqnH/lESNu8/', 'nativeAd');
// gameComon/scripts/ad/nativeAd.js

"use strict";

var NativeAd = cc.Class({
  properties: {},
  ctor: function ctor() {
    this.instance = null;
  },
  statics: {
    create: function create(data) {
      if (!this.instance) {
        this.instance = new NativeAd();
        this.instance.initWithData(data);
        return this.instance;
      }
    }
  },
  initWithData: function initWithData(data) {
    if (cc.sys.platform == cc.sys.OPPO_GAME) {
      //oppo
      this.globalData = {
        nativeAd: qg.createNativeAd({
          adUnitId: '226783'
        })
      };
    }

    if (this.globalData && this.globalData.nativeAd) {
      // 设置原生广告加载成功回调
      this.globalData.nativeAd.onLoad(function (res) {
        cc.log("\u52A0\u8F7D\u539F\u751F\u5E7F\u544A\u6210\u529F", "\uFF1A" + JSON.stringify(res));
        res.adList && res.adList.length > 0 && (appGame.nativeAdData = res.adList[0]);
        appGame.gameServerRoom.emit(consts.LOCAL_GAME_RESULT_NATIVE_AD, {});
      }); // 设置原生广告出错回调

      this.globalData.nativeAd.onError(function (err) {
        cc.log("\u8BBE\u7F6E\u539F\u751F\u5E7F\u544A\u51FA\u9519\uFF1A" + JSON.stringify(err));
      });
    }
  },
  playAd: function playAd() {
    console.log("播放原生广告==");

    if (this.globalData && this.globalData.nativeAd) {
      var nativeAd = this.globalData.nativeAd;
      nativeAd.load().then(function () {
        console.log("原生广告显示成功");
        return nativeAd.show();
      })["catch"](function (err) {
        console.log("原生广告出现问题", err);
      });
    }
  }
});
module.exports = NativeAd;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZUNvbW9uXFxzY3JpcHRzXFxhZFxcbmF0aXZlQWQuanMiXSwibmFtZXMiOlsiTmF0aXZlQWQiLCJjYyIsIkNsYXNzIiwicHJvcGVydGllcyIsImN0b3IiLCJpbnN0YW5jZSIsInN0YXRpY3MiLCJjcmVhdGUiLCJkYXRhIiwiaW5pdFdpdGhEYXRhIiwic3lzIiwicGxhdGZvcm0iLCJPUFBPX0dBTUUiLCJnbG9iYWxEYXRhIiwibmF0aXZlQWQiLCJxZyIsImNyZWF0ZU5hdGl2ZUFkIiwiYWRVbml0SWQiLCJvbkxvYWQiLCJyZXMiLCJsb2ciLCJKU09OIiwic3RyaW5naWZ5IiwiYWRMaXN0IiwibGVuZ3RoIiwiYXBwR2FtZSIsIm5hdGl2ZUFkRGF0YSIsImdhbWVTZXJ2ZXJSb29tIiwiZW1pdCIsImNvbnN0cyIsIkxPQ0FMX0dBTUVfUkVTVUxUX05BVElWRV9BRCIsIm9uRXJyb3IiLCJlcnIiLCJwbGF5QWQiLCJjb25zb2xlIiwibG9hZCIsInRoZW4iLCJzaG93IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ3BCQyxFQUFBQSxVQUFVLEVBQUUsRUFEUTtBQUdwQkMsRUFBQUEsSUFIb0Isa0JBR2Q7QUFDRixTQUFLQyxRQUFMLEdBQWdCLElBQWhCO0FBQ0gsR0FMbUI7QUFNcEJDLEVBQUFBLE9BQU8sRUFBRTtBQUNMQyxJQUFBQSxNQUFNLEVBQUUsZ0JBQVVDLElBQVYsRUFBZ0I7QUFDcEIsVUFBRyxDQUFDLEtBQUtILFFBQVQsRUFBa0I7QUFDZCxhQUFLQSxRQUFMLEdBQWdCLElBQUlMLFFBQUosRUFBaEI7QUFDQSxhQUFLSyxRQUFMLENBQWNJLFlBQWQsQ0FBMkJELElBQTNCO0FBQ0EsZUFBTyxLQUFLSCxRQUFaO0FBQ0g7QUFDSjtBQVBJLEdBTlc7QUFlcEJJLEVBQUFBLFlBQVksRUFBRSxzQkFBVUQsSUFBVixFQUFnQjtBQUMxQixRQUFHUCxFQUFFLENBQUNTLEdBQUgsQ0FBT0MsUUFBUCxJQUFtQlYsRUFBRSxDQUFDUyxHQUFILENBQU9FLFNBQTdCLEVBQXVDO0FBQUM7QUFDcEMsV0FBS0MsVUFBTCxHQUFrQjtBQUNkQyxRQUFBQSxRQUFRLEVBQUVDLEVBQUUsQ0FBQ0MsY0FBSCxDQUFrQjtBQUN4QkMsVUFBQUEsUUFBUSxFQUFFO0FBRGMsU0FBbEI7QUFESSxPQUFsQjtBQUtIOztBQUNELFFBQUcsS0FBS0osVUFBTCxJQUFtQixLQUFLQSxVQUFMLENBQWdCQyxRQUF0QyxFQUErQztBQUMzQztBQUNBLFdBQUtELFVBQUwsQ0FBZ0JDLFFBQWhCLENBQXlCSSxNQUF6QixDQUFnQyxVQUFBQyxHQUFHLEVBQUk7QUFDbkNsQixRQUFBQSxFQUFFLENBQUNtQixHQUFILGdFQUF1QkMsSUFBSSxDQUFDQyxTQUFMLENBQWVILEdBQWYsQ0FBdkI7QUFDQUEsUUFBQUEsR0FBRyxDQUFDSSxNQUFKLElBQWNKLEdBQUcsQ0FBQ0ksTUFBSixDQUFXQyxNQUFYLEdBQW9CLENBQWxDLEtBQXdDQyxPQUFPLENBQUNDLFlBQVIsR0FBdUJQLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLENBQVgsQ0FBL0Q7QUFDQUUsUUFBQUEsT0FBTyxDQUFDRSxjQUFSLENBQXVCQyxJQUF2QixDQUE0QkMsTUFBTSxDQUFDQywyQkFBbkMsRUFBK0QsRUFBL0Q7QUFDSCxPQUpELEVBRjJDLENBTzNDOztBQUNBLFdBQUtqQixVQUFMLENBQWdCQyxRQUFoQixDQUF5QmlCLE9BQXpCLENBQWlDLFVBQUFDLEdBQUcsRUFBSTtBQUNwQy9CLFFBQUFBLEVBQUUsQ0FBQ21CLEdBQUgsNERBQW1CQyxJQUFJLENBQUNDLFNBQUwsQ0FBZVUsR0FBZixDQUFuQjtBQUNILE9BRkQ7QUFHSDtBQUVKLEdBcENtQjtBQXFDcEJDLEVBQUFBLE1BQU0sRUFBRSxrQkFBVztBQUNmQyxJQUFBQSxPQUFPLENBQUNkLEdBQVIsQ0FBWSxVQUFaOztBQUNBLFFBQUcsS0FBS1AsVUFBTCxJQUFtQixLQUFLQSxVQUFMLENBQWdCQyxRQUF0QyxFQUErQztBQUMzQyxVQUFJQSxRQUFRLEdBQUcsS0FBS0QsVUFBTCxDQUFnQkMsUUFBL0I7QUFDQUEsTUFBQUEsUUFBUSxDQUNQcUIsSUFERCxHQUVDQyxJQUZELENBRU0sWUFBTTtBQUNSRixRQUFBQSxPQUFPLENBQUNkLEdBQVIsQ0FBWSxVQUFaO0FBQ0EsZUFBT04sUUFBUSxDQUFDdUIsSUFBVCxFQUFQO0FBQ0gsT0FMRCxXQU1PLFVBQUNMLEdBQUQsRUFBUztBQUNaRSxRQUFBQSxPQUFPLENBQUNkLEdBQVIsQ0FBWSxVQUFaLEVBQXdCWSxHQUF4QjtBQUNILE9BUkQ7QUFTSDtBQUNKO0FBbkRtQixDQUFULENBQWY7QUFxREFNLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnZDLFFBQWpCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgTmF0aXZlQWQgPSBjYy5DbGFzcyh7XHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICB9LFxyXG4gICAgY3Rvcigpe1xyXG4gICAgICAgIHRoaXMuaW5zdGFuY2UgPSBudWxsO1xyXG4gICAgfSxcclxuICAgIHN0YXRpY3M6IHtcclxuICAgICAgICBjcmVhdGU6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGlmKCF0aGlzLmluc3RhbmNlKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgTmF0aXZlQWQoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UuaW5pdFdpdGhEYXRhKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuaW5zdGFuY2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgaW5pdFdpdGhEYXRhOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgIGlmKGNjLnN5cy5wbGF0Zm9ybSA9PSBjYy5zeXMuT1BQT19HQU1FKXsvL29wcG9cclxuICAgICAgICAgICAgdGhpcy5nbG9iYWxEYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgbmF0aXZlQWQ6IHFnLmNyZWF0ZU5hdGl2ZUFkKHtcclxuICAgICAgICAgICAgICAgICAgICBhZFVuaXRJZDogJzIyNjc4MycsXHJcbiAgICAgICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0aGlzLmdsb2JhbERhdGEgJiYgdGhpcy5nbG9iYWxEYXRhLm5hdGl2ZUFkKXtcclxuICAgICAgICAgICAgLy8g6K6+572u5Y6f55Sf5bm/5ZGK5Yqg6L295oiQ5Yqf5Zue6LCDXHJcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5uYXRpdmVBZC5vbkxvYWQocmVzID0+IHtcclxuICAgICAgICAgICAgICAgIGNjLmxvZyhg5Yqg6L295Y6f55Sf5bm/5ZGK5oiQ5YqfYCwgYO+8miR7SlNPTi5zdHJpbmdpZnkocmVzKX1gKVxyXG4gICAgICAgICAgICAgICAgcmVzLmFkTGlzdCAmJiByZXMuYWRMaXN0Lmxlbmd0aCA+IDAgJiYgKGFwcEdhbWUubmF0aXZlQWREYXRhID0gcmVzLmFkTGlzdFswXSlcclxuICAgICAgICAgICAgICAgIGFwcEdhbWUuZ2FtZVNlcnZlclJvb20uZW1pdChjb25zdHMuTE9DQUxfR0FNRV9SRVNVTFRfTkFUSVZFX0FELHt9KTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLy8g6K6+572u5Y6f55Sf5bm/5ZGK5Ye66ZSZ5Zue6LCDXHJcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5uYXRpdmVBZC5vbkVycm9yKGVyciA9PiB7XHJcbiAgICAgICAgICAgICAgICBjYy5sb2coYOiuvue9ruWOn+eUn+W5v+WRiuWHuumUme+8miR7SlNPTi5zdHJpbmdpZnkoZXJyKX1gKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH0sXHJcbiAgICBwbGF5QWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwi5pKt5pS+5Y6f55Sf5bm/5ZGKPT1cIilcclxuICAgICAgICBpZih0aGlzLmdsb2JhbERhdGEgJiYgdGhpcy5nbG9iYWxEYXRhLm5hdGl2ZUFkKXtcclxuICAgICAgICAgICAgbGV0IG5hdGl2ZUFkID0gdGhpcy5nbG9iYWxEYXRhLm5hdGl2ZUFkO1xyXG4gICAgICAgICAgICBuYXRpdmVBZFxyXG4gICAgICAgICAgICAubG9hZCgpXHJcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5Y6f55Sf5bm/5ZGK5pi+56S65oiQ5YqfXCIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5hdGl2ZUFkLnNob3coKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5Y6f55Sf5bm/5ZGK5Ye6546w6Zeu6aKYXCIsIGVycik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSk7XHJcbm1vZHVsZS5leHBvcnRzID0gTmF0aXZlQWQ7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/hex-lines-game/Game.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4c9b5SEXlhDAqXGat0NcWmI', 'Game');
// Game/Scripts/hex-lines-game/Game.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Res_1 = require("./Res");
var HexonTile_1 = require("./HexonTile");
var GridManager_1 = require("./GridManager");
var InputSystem_1 = require("../../../framework/plugin_boosts/misc/InputSystem");
var Info_1 = require("../Info");
var Animal_1 = require("./Animal");
var ViewManager_1 = require("../../../framework/plugin_boosts/ui/ViewManager");
var ToastManager_1 = require("../../../framework/plugin_boosts/ui/ToastManager");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LineGame = /** @class */ (function (_super) {
    __extends(LineGame, _super);
    function LineGame() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._isGameOver = false;
        _this._moveCount = 0;
        _this._playTime = 0;
        _this._colCount = 6;
        _this._rowCount = 7;
        _this._pickedTile = null;
        _this.tileLayer = null;
        _this.levelLabel = null;
        _this.timeLabel = null;
        _this.stepLabel = null;
        _this.focusNode = null;
        _this._figureList = [];
        _this.perfectMoveCount = 0;
        return _this;
    }
    LineGame_1 = LineGame;
    LineGame.prototype.get_isGameOver = function () {
        return this._isGameOver;
    };
    LineGame.prototype.get_minCol = function () {
        return this._levelData.mincol;
    };
    LineGame.prototype.get_moveCount = function () {
        return this._moveCount;
    };
    LineGame.prototype.loadLevel = function (t) {
        //test :
        t = Math.min(t, Res_1.R.levelJson.json.levels.length - 1);
        this._levelData = Res_1.R.levelJson.json.levels[t];
        this.levelLabel.string = t + "";
        if (t == 1) {
            this.scheduleOnce(this.openGuide, 0.1);
        }
    };
    LineGame.prototype.openGuide = function () {
        ViewManager_1.default.instance.show("Game/OpenGuide");
    };
    LineGame.prototype.onLoad = function () {
        var _this = this;
        var t = this;
        LineGame_1.instance = this;
        this.loadLevel(Info_1.UserInfo.currentLevel);
        //this.loadLevel(75)
        this.hideFocus();
        this._tileList = [];
        this._rowCount = this._levelData.size;
        this._colCount -= 1;
        appGame.gameServerRoom.on(consts.CLIENT_GAME_START, this.onGameStart, this);
        for (var e = 0, n = this._rowCount; n > e;) {
            var i, s = e++;
            var tmplist = [];
            i = s <= this._rowCount / 2 ? this._levelData.mincol + s : this._levelData.mincol - 1 + this._rowCount - s;
            for (var r = 0; i > r;) {
                var o = r++;
                var node = cc.instantiate(Res_1.R.TilePrefab);
                var tile = node.getComponent(HexonTile_1.default);
                node.parent = this.tileLayer;
                node.zIndex = this._rowCount - s;
                // this._tileLayer.addChild((new g).add(node))
                tile.set_row(s);
                tile.set_col(o);
                //------------------------------------------------------------------------------//
                var shadowNode = cc.instantiate(Res_1.R.TileShadow);
                var shadow = shadowNode.getComponent(HexonTile_1.default);
                shadow.set_row(s);
                shadow.set_col(o);
                shadowNode.y -= 3;
                shadowNode.parent = this.tileLayer;
                shadowNode.zIndex = 0;
                //------------------------------------------------------------------------------//
                tmplist.push(tile);
            }
            this._tileList.push(tmplist);
        }
        this._gridManager = this.tileLayer.addComponent(GridManager_1.default);
        this._gridManager.init(this._levelData.mincol);
        // this._lineLayer = (new g).add(this._gridManager),
        // this.owner.addChild(this._lineLayer),
        this.setFigure();
        this.addComponent(InputSystem_1.InputSystem);
        // this._uiLayer = new g,
        // this._uiManager = new ni(this._stageIndex + 1),
        // this.owner.addChild(this._uiLayer.add(this._uiManager))
        if (appGame.platform == 'toutiao') {
            appGame.screenAuto.playScreenCap(true);
        }
        Info_1.UserInfo.timePassed = 0;
        Info_1.UserInfo.stepUsed = 0;
        this.schedule(function (_) {
            Info_1.UserInfo.timePassed += 1;
            _this.timeLabel.string = Info_1.UserInfo.timePassed + "s";
            _this.stepLabel.string = Info_1.UserInfo.stepUsed + "步";
        }, 1);
    };
    LineGame.prototype.onDestroy = function () {
        appGame.gameServerRoom.off(consts.CLIENT_GAME_START, this.onGameStart, this);
    };
    LineGame.prototype.onGameStart = function () {
        appGame.banner.playBanner(2);
        //插屏广告
        this.schedule(function () {
            console.log("插屏广告==");
            if (appGame.interstitialAd) {
                appGame.interstitialAd.playAd("插屏");
            }
        }, 60);
        //积木广告
        this.schedule(function () {
            console.log("积木广告==");
            if (appGame.qqblockad) {
                appGame.qqblockad.playBlockad(true);
            }
        }, 30);
    };
    LineGame.prototype.onTouchBegan = function (e) {
        var t = this;
        if (!t._isGameOver) {
            // var n = t.touchXtoScreenX(e.viewX)
            // var e = t.touchYtoScreenY(e.viewY)
            // var i = t.findTileByPos(n, e)
            var p = e.currentTouch.getLocation();
            p = this.node.convertToNodeSpaceAR(p);
            var i = t.findTileByPos(p.x, p.y);
            if (null != i && 0 != i.get_animal()) {
                cc.audioEngine.playEffect(Res_1.R.audio_down, false);
                // jn.playSound(0)
                t._pickedTile = i;
                t.removeGridFromTile(t._pickedTile);
                t._pickedTile.connect(null);
                if (null != t._pickedTile.targetTile) {
                    t.removeGridFromTile(t._pickedTile.targetTile);
                    t._pickedTile.targetTile.connect(null);
                    t._pickedTile.targetTile.set_isConnecting(false);
                }
                t._pickedTile.set_isConnecting(!0);
                i = t._pickedTile.getHead();
                for (; null != i;)
                    i.set_isConnecting(!0),
                        i = i.connectedTile;
                // t._uiManager.showFocus(t._pickedTile.get_animal()),
                this.showFocus(t._pickedTile.get_animal());
                // t._uiManager.moveFocus(n, e)
                this.moveFocus(p);
            }
            this.checkCompelete();
            // 1 ==  ? 1 == t.checkFillAll() ? t._uiManager.hideFillAllPopup() : t._uiManager.showFillAllPopup() : t._uiManager.hideFillAllPopup()
        }
    };
    LineGame.prototype.checkCompelete = function () {
        if (this.checkConnectedAll()) {
            if (this.checkFillAll()) {
                // t._uiManager.hideFillAllPopup()
            }
            else {
                //  t._uiManager.showFillAllPopup()
            }
        }
        else {
            // _uiManager.hideFillAllPopup()
        }
    };
    LineGame.prototype.isTileConnected = function (t, e) {
        var n, i = t._row;
        n = t._col + (i <= this._rowCount / 2 ? 0 : t._row - (this._rowCount / 2 | 0));
        var s, a = e._row;
        return s = e._col + (a <= this._rowCount / 2 ? 0 : e._row - (this._rowCount / 2 | 0)),
            i - 1 == a && n - 1 == s || i - 1 == a && n == s || i == a && n - 1 == s || i == a && n + 1 == s || i + 1 == a && n == s || i + 1 == a && n + 1 == s ? true : false;
    };
    LineGame.prototype.onTouchMoved = function (e) {
        var t = this;
        if (!t._isGameOver) {
            var p = e.currentTouch.getLocation();
            p = this.node.convertToNodeSpaceAR(p);
            var i = t.findTileByPos(p.x, p.y);
            if (null != t._pickedTile && null != i)
                if (t.isTileConnected(t._pickedTile, i)) {
                    if (0 == i.get_animal())
                        (null == t._pickedTile.targetTile || null == t._pickedTile.reverseConnectedTile) && (t._gridManager.setState(t._pickedTile.get_row(), t._pickedTile.get_col(), i.get_row(), i.get_col(), !0), t._pickedTile.connect(i), t._pickedTile = i, t._pickedTile.set_isConnecting(!0));
                    else if (i.get_animal() == t._pickedTile.get_animal())
                        if (false == i.isChangable && !i.equals(t._pickedTile.getHead()))
                            null == i.reverseConnectedTile && (t._gridManager.setState(t._pickedTile.get_row(), t._pickedTile.get_col(), i.get_row(), i.get_col(), !0), t._pickedTile.connect(i), t._pickedTile = i);
                        else {
                            for (t._pickedTile = i, i = t._pickedTile; null != i && null != i.connectedTile;)
                                t._gridManager.setState(i.get_row(), i.get_col(), i.connectedTile.get_row(), i.connectedTile.get_col(), !1),
                                    i = i.connectedTile;
                            t._pickedTile.connect(null);
                        }
                }
                else if (i.get_animal() == t._pickedTile.get_animal() && !i.equals(t._pickedTile) && null != i.connectedTile) {
                    for (t._pickedTile = i, i = t._pickedTile; null != i && null != i.connectedTile;)
                        t._gridManager.setState(i.get_row(), i.get_col(), i.connectedTile.get_row(), i.connectedTile.get_col(), !1),
                            i = i.connectedTile;
                    t._pickedTile.connect(null);
                }
            this.moveFocus(p);
            // t._uiManager.moveFocus(n, e),
            //this.checkCompelete()
        }
    };
    LineGame.prototype.onTouchEnded = function () {
        var t = this;
        var e = false;
        if (!t._isGameOver) {
            if (null != t._pickedTile) {
                var n = t._pickedTile.getHead();
                for (null != t._pickedTile.animalSprite && null != n && null != n.animalSprite && (e = true, t._pickedTile.animalSprite.connected(), n.animalSprite.connected()); null != n;)
                    n.set_isConnecting(false),
                        n = n.connectedTile;
                t._moveCount++;
                Info_1.UserInfo.stepUsed++;
            }
            t._pickedTile = null;
            // t._uiManager.hideFocus(),
            this.hideFocus();
            if (t.checkConnectedAll()) {
                if (t.checkFillAll()) {
                    // t._uiManager.hideFillAllPopup()
                    t._isGameOver = true;
                    // t._uiManager.showClearPopup(t._moveCount, t.perfectMoveCount)
                    t.danceAll();
                }
                else {
                    //  t._uiManager.showFillAllPopup()
                    ToastManager_1.Toast.make("必须填满所有格子");
                }
            }
            else {
                // _uiManager.hideFillAllPopup()
            }
            if (e == true && !t._isGameOver) {
                // jn.playSound(1)
                cc.audioEngine.playEffect(Res_1.R.audio_link, false);
            }
            // 1 == e && 0 == t._isGameOver && jn.playSound(1)
        }
    };
    LineGame.prototype.showFocus = function (animal) {
        console.log(animal);
        this.focusNode.active = true;
        this.focusNode.zIndex = 100;
        this.focusNode.color = Res_1.R.colors[animal].clone();
    };
    LineGame.prototype.moveFocus = function (p) {
        this.focusNode.position = p;
    };
    LineGame.prototype.hideFocus = function () {
        this.focusNode.active = false;
    };
    LineGame.prototype.danceAll = function () {
        // jn.playSound(3);
        cc.audioEngine.playEffect(Res_1.R.audio_win, false);
        for (var t = 0, e = this._tileList; t < e.length;) {
            var n = e[t];
            ++t;
            for (var i = 0; i < n.length;) {
                var s = n[i];
                ++i,
                    null != s.animalSprite && s.animalSprite.loopJump(1);
            }
        }
        this.scheduleOnce(this.showWinDialog, 1);
    };
    LineGame.prototype.showWinDialog = function () {
        ViewManager_1.default.instance.show("Game/WinDialog");
    };
    LineGame.prototype.click_pause = function () {
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, { title: '游戏界面', content: '点击返回' }, function () { });
        ViewManager_1.default.instance.show("Game/PauseDialog");
    };
    LineGame.prototype.click_share = function () {
    };
    LineGame.prototype.setFigure = function () {
        // this._figureLayer = new g,
        this._figureList = [];
        // this.owner.addChild(this._figureLayer);
        for (var t = [], e = 0; 10 > e;)
            e++, t.push(null);
        for (var e = 0, n = this._levelData.figure; e < n.length;) {
            var i = n[e];
            ++e;
            var s = this._tileList[i[0]][i[1]];
            var a = s.get_borderPosition();
            // s.animalSprite = new $n(i[2], a.get_x(), a.get_y())
            // this.owner.addChild((new g).add(s.animalSprite))
            var type = i[2];
            var node = cc.instantiate(Res_1.R.animalPrefabs[type - 1]);
            s.animalSprite = node.getComponent(Animal_1.default);
            // s.animalSprite.type = type;
            node.setPosition(a.x, a.y);
            node.parent = this.tileLayer;
            node.zIndex = 110;
            // animal.type = type; 
            // animal.tx = a.x ; 
            s.set_animal(i[2]);
            s.isChangable = false;
            this._figureList.push(s);
            null == t[i[2]] ? t[i[2]] = s : (s.targetTile = t[i[2]], t[i[2]].targetTile = s);
        }
        this.perfectMoveCount = this._figureList.length / 2 | 0;
    };
    LineGame.prototype.findTileByPos = function (x, y) {
        var n = null;
        var i = 1e6;
        var s = cc.v2(x, y);
        var r = this._tileList;
        for (var a = 0; a < r.length; ++a) {
            var o = r[a];
            for (var _ = 0; _ < o.length; ++_) {
                var l = o[_];
                var tp = o[_].node.position;
                var h = s.sub(tp).mag();
                if (h < 50 && h < i) {
                    i = h;
                    n = l;
                }
                // 40 > h && i > h && (i = h, n = l)
            }
        }
        return n;
    };
    LineGame.prototype.removeGridFromTile = function (t) {
        for (; null != t && null != t.connectedTile;)
            this._gridManager.setState(t.get_row(), t.get_col(), t.connectedTile.get_row(), t.connectedTile.get_col(), !1), t = t.connectedTile;
    };
    LineGame.prototype.checkFillAll = function () {
        for (var t = 0, e = this._tileList; t < e.length;) {
            var n = e[t];
            ++t;
            for (var i = 0; i < n.length;) {
                var s = n[i];
                if (++i, 0 == s.get_animal())
                    return !1;
            }
        }
        return !0;
    };
    LineGame.prototype.checkConnectedAll = function () {
        for (var t = 0, e = this._tileList; t < e.length;) {
            var n = e[t];
            ++t;
            for (var i = 0; i < n.length;) {
                var s = n[i];
                if (++i, null != s.targetTile) {
                    var a = s.getHead(), r = s.getTail();
                    if (0 == s.targetTile.equals(a) && 0 == s.targetTile.equals(r))
                        return !1;
                }
            }
        }
        return !0;
    };
    var LineGame_1;
    LineGame.instance = null;
    __decorate([
        property(cc.Node)
    ], LineGame.prototype, "tileLayer", void 0);
    __decorate([
        property(cc.Label)
    ], LineGame.prototype, "levelLabel", void 0);
    __decorate([
        property(cc.Label)
    ], LineGame.prototype, "timeLabel", void 0);
    __decorate([
        property(cc.Label)
    ], LineGame.prototype, "stepLabel", void 0);
    __decorate([
        property(cc.Node)
    ], LineGame.prototype, "focusNode", void 0);
    LineGame = LineGame_1 = __decorate([
        ccclass
    ], LineGame);
    return LineGame;
}(cc.Component));
exports.default = LineGame;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/ui/HbDialog.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ec5aa26/dhLhpV83mVeVmkA', 'HbDialog');
// Game/Scripts/ui/HbDialog.ts

Object.defineProperty(exports, "__esModule", { value: true });
var ViewManager_1 = require("../../../framework/plugin_boosts/ui/ViewManager");
var ToastManager_1 = require("../../../framework/plugin_boosts/ui/ToastManager");
var Res_1 = require("../hex-lines-game/Res");
var Info_1 = require("../Info");
var Device_1 = require("../../../framework/plugin_boosts/gamesys/Device");
var View_1 = require("../../../framework/plugin_boosts/ui/View");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var HbDialog = /** @class */ (function (_super) {
    __extends(HbDialog, _super);
    function HbDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HbDialog.prototype.onLoad = function () { };
    HbDialog.prototype.start = function () { };
    HbDialog.prototype.click = function () {
        var choise = Info_1.UserInfo.getChoice(Info_1.ChoiceType.HB);
    };
    HbDialog.prototype.share_suc = function () {
        var cfg = Res_1.R.skinConfig.json[3];
        ToastManager_1.Toast.make("恭喜获得皮肤 ：" + cfg.text);
        Device_1.default.playEffect(Res_1.R.audio_unlock);
        Info_1.UserInfo.unlock(cfg.id);
        Info_1.UserInfo.selectedSkin = cfg.id;
        Info_1.UserInfo.save();
        ViewManager_1.default.instance.show("Game/ShopDialog");
        this.getComponent(View_1.default).hide();
    };
    HbDialog = __decorate([
        ccclass
    ], HbDialog);
    return HbDialog;
}(cc.Component));
exports.default = HbDialog;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcdWlcXEhiRGlhbG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSwrRUFBMEU7QUFDMUUsaUZBQXlFO0FBQ3pFLDZDQUEwQztBQUMxQyxnQ0FBK0M7QUFDL0MsMEVBQXFFO0FBQ3JFLGlFQUE0RDtBQUV0RCxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFzQyw0QkFBWTtJQUFsRDs7SUFzQkEsQ0FBQztJQXBCRyx5QkFBTSxHQUFOLGNBQVcsQ0FBQztJQUNaLHdCQUFLLEdBQUwsY0FBVSxDQUFDO0lBQ1gsd0JBQUssR0FBTDtRQUVJLElBQUksTUFBTSxHQUFHLGVBQVEsQ0FBQyxTQUFTLENBQUMsaUJBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUduRCxDQUFDO0lBRUQsNEJBQVMsR0FBVDtRQUVJLElBQUksR0FBRyxHQUFHLE9BQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFBO1FBQzlCLG9CQUFLLENBQUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDakMsZ0JBQU0sQ0FBQyxVQUFVLENBQUMsT0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ2xDLGVBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3hCLGVBQVEsQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUMvQixlQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDaEIscUJBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUE7UUFDNUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNuQyxDQUFDO0lBckJnQixRQUFRO1FBRDVCLE9BQU87T0FDYSxRQUFRLENBc0I1QjtJQUFELGVBQUM7Q0F0QkQsQUFzQkMsQ0F0QnFDLEVBQUUsQ0FBQyxTQUFTLEdBc0JqRDtrQkF0Qm9CLFFBQVEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBMdWNreURpYWxvZyBmcm9tIFwiLi9MdWNreURpYWxvZ1wiO1xuaW1wb3J0IFZpZXdNYW5hZ2VyIGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvcGx1Z2luX2Jvb3N0cy91aS9WaWV3TWFuYWdlclwiO1xuaW1wb3J0IHsgVG9hc3QgfSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL3BsdWdpbl9ib29zdHMvdWkvVG9hc3RNYW5hZ2VyXCI7XG5pbXBvcnQgeyBSIH0gZnJvbSBcIi4uL2hleC1saW5lcy1nYW1lL1Jlc1wiO1xuaW1wb3J0IHsgVXNlckluZm8sIENob2ljZVR5cGUgfSBmcm9tIFwiLi4vSW5mb1wiO1xuaW1wb3J0IERldmljZSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL3BsdWdpbl9ib29zdHMvZ2FtZXN5cy9EZXZpY2VcIjtcbmltcG9ydCBWaWV3IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvcGx1Z2luX2Jvb3N0cy91aS9WaWV3XCI7XG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGJEaWFsb2cgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgb25Mb2FkICgpIHt9XG4gICAgc3RhcnQgKCkge31cbiAgICBjbGljaygpXG4gICAge1xuICAgICAgICBsZXQgY2hvaXNlID0gVXNlckluZm8uZ2V0Q2hvaWNlKENob2ljZVR5cGUuSEIpO1xuXG4gICAgICAgIFxuICAgIH1cblxuICAgIHNoYXJlX3N1YygpXG4gICAge1xuICAgICAgICBsZXQgY2ZnID0gUi5za2luQ29uZmlnLmpzb25bM11cbiAgICAgICAgVG9hc3QubWFrZShcIuaBreWWnOiOt+W+l+earuiCpCDvvJpcIiArIGNmZy50ZXh0KSBcbiAgICAgICAgRGV2aWNlLnBsYXlFZmZlY3QoUi5hdWRpb191bmxvY2spO1xuICAgICAgICBVc2VySW5mby51bmxvY2soY2ZnLmlkKTtcbiAgICAgICAgVXNlckluZm8uc2VsZWN0ZWRTa2luID0gY2ZnLmlkO1xuICAgICAgICBVc2VySW5mby5zYXZlKCk7XG4gICAgICAgIFZpZXdNYW5hZ2VyLmluc3RhbmNlLnNob3coXCJHYW1lL1Nob3BEaWFsb2dcIilcbiAgICAgICAgdGhpcy5nZXRDb21wb25lbnQoVmlldykuaGlkZSgpO1xuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/hex-lines-game/ds/IntMap.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '11eeadKZERHbLgjtZ/2KsFr', 'IntMap');
// Game/Scripts/hex-lines-game/ds/IntMap.ts

Object.defineProperty(exports, "__esModule", { value: true });
var IntMap = /** @class */ (function () {
    function IntMap() {
        this.h = {};
    }
    IntMap.prototype.set = function (t, e) {
        this.h[t] = e;
    };
    IntMap.prototype.get = function (t) {
        return this.h[t];
    };
    IntMap.prototype.exists = function (t) {
        return this.h.hasOwnProperty(t);
    };
    IntMap.prototype.remove = function (t) {
        return this.h.hasOwnProperty(t) ? (delete this.h[t], !0) : !1;
    };
    IntMap.prototype.keys = function () {
        var t, e = [];
        for (t in this.h)
            this.h.hasOwnProperty(t) && e.push(0 | t);
        return com.iter(e);
    };
    return IntMap;
}());
exports.default = IntMap;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcaGV4LWxpbmVzLWdhbWVcXGRzXFxJbnRNYXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0lBQUE7UUFFSSxNQUFDLEdBQUcsRUFBRSxDQUFBO0lBa0JWLENBQUM7SUFqQkcsb0JBQUcsR0FBSCxVQUFJLENBQUMsRUFBRSxDQUFDO1FBQ0osSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDakIsQ0FBQztJQUNELG9CQUFHLEdBQUgsVUFBSSxDQUFDO1FBQ0QsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQ3BCLENBQUM7SUFDRCx1QkFBTSxHQUFOLFVBQU8sQ0FBQztRQUNKLE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDbkMsQ0FBQztJQUNELHVCQUFNLEdBQU4sVUFBTyxDQUFDO1FBQ0osT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDakUsQ0FBQztJQUNELHFCQUFJLEdBQUo7UUFDSSxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ2QsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUM7WUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM1RCxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDdEIsQ0FBQztJQUNMLGFBQUM7QUFBRCxDQXBCQSxBQW9CQyxJQUFBIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW50TWFwXG57XG4gICAgaCA9IHt9XG4gICAgc2V0KHQsIGUpIHtcbiAgICAgICAgdGhpcy5oW3RdID0gZVxuICAgIH1cbiAgICBnZXQodCkge1xuICAgICAgICByZXR1cm4gdGhpcy5oW3RdXG4gICAgfVxuICAgIGV4aXN0cyh0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmguaGFzT3duUHJvcGVydHkodClcbiAgICB9XG4gICAgcmVtb3ZlKHQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaC5oYXNPd25Qcm9wZXJ0eSh0KSA/IChkZWxldGUgdGhpcy5oW3RdLCAhMCkgOiAhMVxuICAgIH1cbiAgICBrZXlzKCkge1xuICAgICAgICB2YXIgdCwgZSA9IFtdO1xuICAgICAgICBmb3IgKHQgaW4gdGhpcy5oKSB0aGlzLmguaGFzT3duUHJvcGVydHkodCkgJiYgZS5wdXNoKDAgfCB0KTtcbiAgICAgICAgcmV0dXJuIGNvbS5pdGVyKGUpXG4gICAgfVxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/gameComon/scripts/model/underscore.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ec994o1t0FK6Y0DWnJafEhA', 'underscore');
// gameComon/scripts/model/underscore.js

"use strict";

//     Underscore.js 1.5.2
//     http://underscorejs.org
//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function () {
  // Baseline setup
  // --------------
  // Establish the root object, `window` in the browser, or `exports` on the server.
  var root = window; //this; //modified
  // Save the previous value of the `_` variable.

  var previousUnderscore = root._; // Establish the object that gets returned to break out of a loop iteration.

  var breaker = {}; // Save bytes in the minified (but not gzipped) version:

  var ArrayProto = Array.prototype,
      ObjProto = Object.prototype,
      FuncProto = Function.prototype; // Create quick reference variables for speed access to core prototypes.

  var push = ArrayProto.push,
      slice = ArrayProto.slice,
      concat = ArrayProto.concat,
      toString = ObjProto.toString,
      hasOwnProperty = ObjProto.hasOwnProperty; // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.

  var nativeForEach = ArrayProto.forEach,
      nativeMap = ArrayProto.map,
      nativeReduce = ArrayProto.reduce,
      nativeReduceRight = ArrayProto.reduceRight,
      nativeFilter = ArrayProto.filter,
      nativeEvery = ArrayProto.every,
      nativeSome = ArrayProto.some,
      nativeIndexOf = ArrayProto.indexOf,
      nativeLastIndexOf = ArrayProto.lastIndexOf,
      nativeIsArray = Array.isArray,
      nativeKeys = Object.keys,
      nativeBind = FuncProto.bind; // Create a safe reference to the Underscore object for use below.

  var _ = function _(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  }; // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object via a string identifier,
  // for Closure Compiler "advanced" mode.


  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }

    exports._ = _;
  } else {
    root._ = _;
  } // Current version.


  _.VERSION = '1.5.2'; // Collection Functions
  // --------------------
  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles objects with the built-in `forEach`, arrays, and raw objects.
  // Delegates to **ECMAScript 5**'s native `forEach` if available.

  var each = _.each = _.forEach = function (obj, iterator, context) {
    if (obj == null) return;

    if (nativeForEach && obj.forEach === nativeForEach) {
      obj.forEach(iterator, context);
    } else if (obj.length === +obj.length) {
      for (var i = 0, length = obj.length; i < length; i++) {
        if (iterator.call(context, obj[i], i, obj) === breaker) return;
      }
    } else {
      var keys = _.keys(obj);

      for (var i = 0, length = keys.length; i < length; i++) {
        if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker) return;
      }
    }
  }; // Return the results of applying the iterator to each element.
  // Delegates to **ECMAScript 5**'s native `map` if available.


  _.map = _.collect = function (obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);
    each(obj, function (value, index, list) {
      results.push(iterator.call(context, value, index, list));
    });
    return results;
  };

  var reduceError = 'Reduce of empty array with no initial value'; // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.

  _.reduce = _.foldl = _.inject = function (obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];

    if (nativeReduce && obj.reduce === nativeReduce) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);
    }

    each(obj, function (value, index, list) {
      if (!initial) {
        memo = value;
        initial = true;
      } else {
        memo = iterator.call(context, memo, value, index, list);
      }
    });
    if (!initial) throw new TypeError(reduceError);
    return memo;
  }; // The right-associative version of reduce, also known as `foldr`.
  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.


  _.reduceRight = _.foldr = function (obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];

    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);
    }

    var length = obj.length;

    if (length !== +length) {
      var keys = _.keys(obj);

      length = keys.length;
    }

    each(obj, function (value, index, list) {
      index = keys ? keys[--length] : --length;

      if (!initial) {
        memo = obj[index];
        initial = true;
      } else {
        memo = iterator.call(context, memo, obj[index], index, list);
      }
    });
    if (!initial) throw new TypeError(reduceError);
    return memo;
  }; // Return the first value which passes a truth test. Aliased as `detect`.


  _.find = _.detect = function (obj, iterator, context) {
    var result;
    any(obj, function (value, index, list) {
      if (iterator.call(context, value, index, list)) {
        result = value;
        return true;
      }
    });
    return result;
  }; // Return all the elements that pass a truth test.
  // Delegates to **ECMAScript 5**'s native `filter` if available.
  // Aliased as `select`.


  _.filter = _.select = function (obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);
    each(obj, function (value, index, list) {
      if (iterator.call(context, value, index, list)) results.push(value);
    });
    return results;
  }; // Return all the elements for which a truth test fails.


  _.reject = function (obj, iterator, context) {
    return _.filter(obj, function (value, index, list) {
      return !iterator.call(context, value, index, list);
    }, context);
  }; // Determine whether all of the elements match a truth test.
  // Delegates to **ECMAScript 5**'s native `every` if available.
  // Aliased as `all`.


  _.every = _.all = function (obj, iterator, context) {
    iterator || (iterator = _.identity);
    var result = true;
    if (obj == null) return result;
    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);
    each(obj, function (value, index, list) {
      if (!(result = result && iterator.call(context, value, index, list))) return breaker;
    });
    return !!result;
  }; // Determine if at least one element in the object matches a truth test.
  // Delegates to **ECMAScript 5**'s native `some` if available.
  // Aliased as `any`.


  var any = _.some = _.any = function (obj, iterator, context) {
    iterator || (iterator = _.identity);
    var result = false;
    if (obj == null) return result;
    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);
    each(obj, function (value, index, list) {
      if (result || (result = iterator.call(context, value, index, list))) return breaker;
    });
    return !!result;
  }; // Determine if the array or object contains a given value (using `===`).
  // Aliased as `include`.


  _.contains = _.include = function (obj, target) {
    if (obj == null) return false;
    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;
    return any(obj, function (value) {
      return value === target;
    });
  }; // Invoke a method (with arguments) on every item in a collection.


  _.invoke = function (obj, method) {
    var args = slice.call(arguments, 2);

    var isFunc = _.isFunction(method);

    return _.map(obj, function (value) {
      return (isFunc ? method : value[method]).apply(value, args);
    });
  }; // Convenience version of a common use case of `map`: fetching a property.


  _.pluck = function (obj, key) {
    return _.map(obj, function (value) {
      return value[key];
    });
  }; // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.


  _.where = function (obj, attrs, first) {
    if (_.isEmpty(attrs)) return first ? void 0 : [];
    return _[first ? 'find' : 'filter'](obj, function (value) {
      for (var key in attrs) {
        if (attrs[key] !== value[key]) return false;
      }

      return true;
    });
  }; // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.


  _.findWhere = function (obj, attrs) {
    return _.where(obj, attrs, true);
  }; // Return the maximum element or (element-based computation).
  // Can't optimize arrays of integers longer than 65,535 elements.
  // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)


  _.max = function (obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
      return Math.max.apply(Math, obj);
    }

    if (!iterator && _.isEmpty(obj)) return -Infinity;
    var result = {
      computed: -Infinity,
      value: -Infinity
    };
    each(obj, function (value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed > result.computed && (result = {
        value: value,
        computed: computed
      });
    });
    return result.value;
  }; // Return the minimum element (or element-based computation).


  _.min = function (obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
      return Math.min.apply(Math, obj);
    }

    if (!iterator && _.isEmpty(obj)) return Infinity;
    var result = {
      computed: Infinity,
      value: Infinity
    };
    each(obj, function (value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed < result.computed && (result = {
        value: value,
        computed: computed
      });
    });
    return result.value;
  }; // Shuffle an array, using the modern version of the 
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).


  _.shuffle = function (obj) {
    var rand;
    var index = 0;
    var shuffled = [];
    each(obj, function (value) {
      rand = _.random(index++);
      shuffled[index - 1] = shuffled[rand];
      shuffled[rand] = value;
    });
    return shuffled;
  }; // Sample **n** random values from an array.
  // If **n** is not specified, returns a single random element from the array.
  // The internal `guard` argument allows it to work with `map`.


  _.sample = function (obj, n, guard) {
    if (arguments.length < 2 || guard) {
      return obj[_.random(obj.length - 1)];
    }

    return _.shuffle(obj).slice(0, Math.max(0, n));
  }; // An internal function to generate lookup iterators.


  var lookupIterator = function lookupIterator(value) {
    return _.isFunction(value) ? value : function (obj) {
      return obj[value];
    };
  }; // Sort the object's values by a criterion produced by an iterator.


  _.sortBy = function (obj, value, context) {
    var iterator = lookupIterator(value);
    return _.pluck(_.map(obj, function (value, index, list) {
      return {
        value: value,
        index: index,
        criteria: iterator.call(context, value, index, list)
      };
    }).sort(function (left, right) {
      var a = left.criteria;
      var b = right.criteria;

      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }

      return left.index - right.index;
    }), 'value');
  }; // An internal function used for aggregate "group by" operations.


  var group = function group(behavior) {
    return function (obj, value, context) {
      var result = {};
      var iterator = value == null ? _.identity : lookupIterator(value);
      each(obj, function (value, index) {
        var key = iterator.call(context, value, index, obj);
        behavior(result, key, value);
      });
      return result;
    };
  }; // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.


  _.groupBy = group(function (result, key, value) {
    (_.has(result, key) ? result[key] : result[key] = []).push(value);
  }); // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.

  _.indexBy = group(function (result, key, value) {
    result[key] = value;
  }); // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.

  _.countBy = group(function (result, key) {
    _.has(result, key) ? result[key]++ : result[key] = 1;
  }); // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.

  _.sortedIndex = function (array, obj, iterator, context) {
    iterator = iterator == null ? _.identity : lookupIterator(iterator);
    var value = iterator.call(context, obj);
    var low = 0,
        high = array.length;

    while (low < high) {
      var mid = low + high >>> 1;
      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;
    }

    return low;
  }; // Safely create a real, live array from anything iterable.


  _.toArray = function (obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (obj.length === +obj.length) return _.map(obj, _.identity);
    return _.values(obj);
  }; // Return the number of elements in an object.


  _.size = function (obj) {
    if (obj == null) return 0;
    return obj.length === +obj.length ? obj.length : _.keys(obj).length;
  }; // Array Functions
  // ---------------
  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.


  _.first = _.head = _.take = function (array, n, guard) {
    if (array == null) return void 0;
    return n == null || guard ? array[0] : slice.call(array, 0, n);
  }; // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N. The **guard** check allows it to work with
  // `_.map`.


  _.initial = function (array, n, guard) {
    return slice.call(array, 0, array.length - (n == null || guard ? 1 : n));
  }; // Get the last element of an array. Passing **n** will return the last N
  // values in the array. The **guard** check allows it to work with `_.map`.


  _.last = function (array, n, guard) {
    if (array == null) return void 0;

    if (n == null || guard) {
      return array[array.length - 1];
    } else {
      return slice.call(array, Math.max(array.length - n, 0));
    }
  }; // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array. The **guard**
  // check allows it to work with `_.map`.


  _.rest = _.tail = _.drop = function (array, n, guard) {
    return slice.call(array, n == null || guard ? 1 : n);
  }; // Trim out all falsy values from an array.


  _.compact = function (array) {
    return _.filter(array, _.identity);
  }; // Internal implementation of a recursive `flatten` function.


  var flatten = function flatten(input, shallow, output) {
    if (shallow && _.every(input, _.isArray)) {
      return concat.apply(output, input);
    }

    each(input, function (value) {
      if (_.isArray(value) || _.isArguments(value)) {
        shallow ? push.apply(output, value) : flatten(value, shallow, output);
      } else {
        output.push(value);
      }
    });
    return output;
  }; // Flatten out an array, either recursively (by default), or just one level.


  _.flatten = function (array, shallow) {
    return flatten(array, shallow, []);
  }; // Return a version of the array that does not contain the specified value(s).


  _.without = function (array) {
    return _.difference(array, slice.call(arguments, 1));
  }; // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.


  _.uniq = _.unique = function (array, isSorted, iterator, context) {
    if (_.isFunction(isSorted)) {
      context = iterator;
      iterator = isSorted;
      isSorted = false;
    }

    var initial = iterator ? _.map(array, iterator, context) : array;
    var results = [];
    var seen = [];
    each(initial, function (value, index) {
      if (isSorted ? !index || seen[seen.length - 1] !== value : !_.contains(seen, value)) {
        seen.push(value);
        results.push(array[index]);
      }
    });
    return results;
  }; // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.


  _.union = function () {
    return _.uniq(_.flatten(arguments, true));
  }; // Produce an array that contains every item shared between all the
  // passed-in arrays.


  _.intersection = function (array) {
    var rest = slice.call(arguments, 1);
    return _.filter(_.uniq(array), function (item) {
      return _.every(rest, function (other) {
        return _.indexOf(other, item) >= 0;
      });
    });
  }; // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.


  _.difference = function (array) {
    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));
    return _.filter(array, function (value) {
      return !_.contains(rest, value);
    });
  }; // Zip together multiple lists into a single array -- elements that share
  // an index go together.


  _.zip = function () {
    var length = _.max(_.pluck(arguments, "length").concat(0));

    var results = new Array(length);

    for (var i = 0; i < length; i++) {
      results[i] = _.pluck(arguments, '' + i);
    }

    return results;
  }; // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.


  _.object = function (list, values) {
    if (list == null) return {};
    var result = {};

    for (var i = 0, length = list.length; i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }

    return result;
  }; // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),
  // we need this function. Return the position of the first occurrence of an
  // item in an array, or -1 if the item is not included in the array.
  // Delegates to **ECMAScript 5**'s native `indexOf` if available.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.


  _.indexOf = function (array, item, isSorted) {
    if (array == null) return -1;
    var i = 0,
        length = array.length;

    if (isSorted) {
      if (typeof isSorted == 'number') {
        i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;
      } else {
        i = _.sortedIndex(array, item);
        return array[i] === item ? i : -1;
      }
    }

    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);

    for (; i < length; i++) {
      if (array[i] === item) return i;
    }

    return -1;
  }; // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.


  _.lastIndexOf = function (array, item, from) {
    if (array == null) return -1;
    var hasIndex = from != null;

    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {
      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);
    }

    var i = hasIndex ? from : array.length;

    while (i--) {
      if (array[i] === item) return i;
    }

    return -1;
  }; // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).


  _.range = function (start, stop, step) {
    if (arguments.length <= 1) {
      stop = start || 0;
      start = 0;
    }

    step = arguments[2] || 1;
    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var idx = 0;
    var range = new Array(length);

    while (idx < length) {
      range[idx++] = start;
      start += step;
    }

    return range;
  }; // Function (ahem) Functions
  // ------------------
  // Reusable constructor function for prototype setting.


  var ctor = function ctor() {}; // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.


  _.bind = function (func, context) {
    var args, _bound;

    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func)) throw new TypeError();
    args = slice.call(arguments, 2);
    return _bound = function bound() {
      if (!(this instanceof _bound)) return func.apply(context, args.concat(slice.call(arguments)));
      ctor.prototype = func.prototype;
      var self = new ctor();
      ctor.prototype = null;
      var result = func.apply(self, args.concat(slice.call(arguments)));
      if (Object(result) === result) return result;
      return self;
    };
  }; // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context.


  _.partial = function (func) {
    var args = slice.call(arguments, 1);
    return function () {
      return func.apply(this, args.concat(slice.call(arguments)));
    };
  }; // Bind all of an object's methods to that object. Useful for ensuring that
  // all callbacks defined on an object belong to it.


  _.bindAll = function (obj) {
    var funcs = slice.call(arguments, 1);
    if (funcs.length === 0) throw new Error("bindAll must be passed function names");
    each(funcs, function (f) {
      obj[f] = _.bind(obj[f], obj);
    });
    return obj;
  }; // Memoize an expensive function by storing its results.


  _.memoize = function (func, hasher) {
    var memo = {};
    hasher || (hasher = _.identity);
    return function () {
      var key = hasher.apply(this, arguments);
      return _.has(memo, key) ? memo[key] : memo[key] = func.apply(this, arguments);
    };
  }; // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.


  _.delay = function (func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function () {
      return func.apply(null, args);
    }, wait);
  }; // Defers a function, scheduling it to run after the current call stack has
  // cleared.


  _.defer = function (func) {
    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));
  }; // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.


  _.throttle = function (func, wait, options) {
    var context, args, result;
    var timeout = null;
    var previous = 0;
    options || (options = {});

    var later = function later() {
      previous = options.leading === false ? 0 : new Date();
      timeout = null;
      result = func.apply(context, args);
    };

    return function () {
      var now = new Date();
      if (!previous && options.leading === false) previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;

      if (remaining <= 0) {
        clearTimeout(timeout);
        timeout = null;
        previous = now;
        result = func.apply(context, args);
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }

      return result;
    };
  }; // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.


  _.debounce = function (func, wait, immediate) {
    var timeout, args, context, timestamp, result;
    return function () {
      context = this;
      args = arguments;
      timestamp = new Date();

      var later = function later() {
        var last = new Date() - timestamp;

        if (last < wait) {
          timeout = setTimeout(later, wait - last);
        } else {
          timeout = null;
          if (!immediate) result = func.apply(context, args);
        }
      };

      var callNow = immediate && !timeout;

      if (!timeout) {
        timeout = setTimeout(later, wait);
      }

      if (callNow) result = func.apply(context, args);
      return result;
    };
  }; // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.


  _.once = function (func) {
    var ran = false,
        memo;
    return function () {
      if (ran) return memo;
      ran = true;
      memo = func.apply(this, arguments);
      func = null;
      return memo;
    };
  }; // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.


  _.wrap = function (func, wrapper) {
    return function () {
      var args = [func];
      push.apply(args, arguments);
      return wrapper.apply(this, args);
    };
  }; // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.


  _.compose = function () {
    var funcs = arguments;
    return function () {
      var args = arguments;

      for (var i = funcs.length - 1; i >= 0; i--) {
        args = [funcs[i].apply(this, args)];
      }

      return args[0];
    };
  }; // Returns a function that will only be executed after being called N times.


  _.after = function (times, func) {
    return function () {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  }; // Object Functions
  // ----------------
  // Retrieve the names of an object's properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`


  _.keys = nativeKeys || function (obj) {
    if (obj !== Object(obj)) throw new TypeError('Invalid object');
    var keys = [];

    for (var key in obj) {
      if (_.has(obj, key)) keys.push(key);
    }

    return keys;
  }; // Retrieve the values of an object's properties.


  _.values = function (obj) {
    var keys = _.keys(obj);

    var length = keys.length;
    var values = new Array(length);

    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }

    return values;
  }; // Convert an object into a list of `[key, value]` pairs.


  _.pairs = function (obj) {
    var keys = _.keys(obj);

    var length = keys.length;
    var pairs = new Array(length);

    for (var i = 0; i < length; i++) {
      pairs[i] = [keys[i], obj[keys[i]]];
    }

    return pairs;
  }; // Invert the keys and values of an object. The values must be serializable.


  _.invert = function (obj) {
    var result = {};

    var keys = _.keys(obj);

    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }

    return result;
  }; // Return a sorted list of the function names available on the object.
  // Aliased as `methods`


  _.functions = _.methods = function (obj) {
    var names = [];

    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }

    return names.sort();
  }; // Extend a given object with all the properties in passed-in object(s).


  _.extend = function (obj) {
    each(slice.call(arguments, 1), function (source) {
      if (source) {
        for (var prop in source) {
          obj[prop] = source[prop];
        }
      }
    });
    return obj;
  }; // Return a copy of the object only containing the whitelisted properties.


  _.pick = function (obj) {
    var copy = {};
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
    each(keys, function (key) {
      if (key in obj) copy[key] = obj[key];
    });
    return copy;
  }; // Return a copy of the object without the blacklisted properties.


  _.omit = function (obj) {
    var copy = {};
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));

    for (var key in obj) {
      if (!_.contains(keys, key)) copy[key] = obj[key];
    }

    return copy;
  }; // Fill in a given object with default properties.


  _.defaults = function (obj) {
    each(slice.call(arguments, 1), function (source) {
      if (source) {
        for (var prop in source) {
          if (obj[prop] === void 0) obj[prop] = source[prop];
        }
      }
    });
    return obj;
  }; // Create a (shallow-cloned) duplicate of an object.


  _.clone = function (obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  }; // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.


  _.tap = function (obj, interceptor) {
    interceptor(obj);
    return obj;
  }; // Internal recursive comparison function for `isEqual`.


  var eq = function eq(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b) return a !== 0 || 1 / a == 1 / b; // A strict comparison is necessary because `null == undefined`.

    if (a == null || b == null) return a === b; // Unwrap any wrapped objects.

    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped; // Compare `[[Class]]` names.

    var className = toString.call(a);
    if (className != toString.call(b)) return false;

    switch (className) {
      // Strings, numbers, dates, and booleans are compared by value.
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return a == String(b);

      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for
        // other numeric values.
        return a != +a ? b != +b : a == 0 ? 1 / a == 1 / b : a == +b;

      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a == +b;
      // RegExps are compared by their source patterns and flags.

      case '[object RegExp]':
        return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;
    }

    if (typeof a != 'object' || typeof b != 'object') return false; // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

    var length = aStack.length;

    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] == a) return bStack[length] == b;
    } // Objects with different constructors are not equivalent, but `Object`s
    // from different frames are.


    var aCtor = a.constructor,
        bCtor = b.constructor;

    if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor)) {
      return false;
    } // Add the first object to the stack of traversed objects.


    aStack.push(a);
    bStack.push(b);
    var size = 0,
        result = true; // Recursively compare objects and arrays.

    if (className == '[object Array]') {
      // Compare array lengths to determine if a deep comparison is necessary.
      size = a.length;
      result = size == b.length;

      if (result) {
        // Deep compare the contents, ignoring non-numeric properties.
        while (size--) {
          if (!(result = eq(a[size], b[size], aStack, bStack))) break;
        }
      }
    } else {
      // Deep compare objects.
      for (var key in a) {
        if (_.has(a, key)) {
          // Count the expected number of properties.
          size++; // Deep compare each member.

          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;
        }
      } // Ensure that both objects contain the same number of properties.


      if (result) {
        for (key in b) {
          if (_.has(b, key) && !size--) break;
        }

        result = !size;
      }
    } // Remove the first object from the stack of traversed objects.


    aStack.pop();
    bStack.pop();
    return result;
  }; // Perform a deep comparison to check if two objects are equal.


  _.isEqual = function (a, b) {
    return eq(a, b, [], []);
  }; // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.


  _.isEmpty = function (obj) {
    if (obj == null) return true;
    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;

    for (var key in obj) {
      if (_.has(obj, key)) return false;
    }

    return true;
  }; // Is a given value a DOM element?


  _.isElement = function (obj) {
    return !!(obj && obj.nodeType === 1);
  }; // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray


  _.isArray = nativeIsArray || function (obj) {
    return toString.call(obj) == '[object Array]';
  }; // Is a given variable an object?


  _.isObject = function (obj) {
    return obj === Object(obj);
  }; // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.


  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function (name) {
    _['is' + name] = function (obj) {
      return toString.call(obj) == '[object ' + name + ']';
    };
  }); // Define a fallback version of the method in browsers (ahem, IE), where
  // there isn't any inspectable "Arguments" type.

  if (!_.isArguments(arguments)) {
    _.isArguments = function (obj) {
      return !!(obj && _.has(obj, 'callee'));
    };
  } // Optimize `isFunction` if appropriate.


  if (typeof /./ !== 'function') {
    _.isFunction = function (obj) {
      return typeof obj === 'function';
    };
  } // Is a given object a finite number?


  _.isFinite = function (obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  }; // Is the given value `NaN`? (NaN is the only number which does not equal itself).


  _.isNaN = function (obj) {
    return _.isNumber(obj) && obj != +obj;
  }; // Is a given value a boolean?


  _.isBoolean = function (obj) {
    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';
  }; // Is a given value equal to null?


  _.isNull = function (obj) {
    return obj === null;
  }; // Is a given variable undefined?


  _.isUndefined = function (obj) {
    return obj === void 0;
  }; // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).


  _.has = function (obj, key) {
    return hasOwnProperty.call(obj, key);
  }; // Utility Functions
  // -----------------
  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.


  _.noConflict = function () {
    root._ = previousUnderscore;
    return this;
  }; // Keep the identity function around for default iterators.


  _.identity = function (value) {
    return value;
  }; // Run a function **n** times.


  _.times = function (n, iterator, context) {
    var accum = Array(Math.max(0, n));

    for (var i = 0; i < n; i++) {
      accum[i] = iterator.call(context, i);
    }

    return accum;
  }; // Return a random integer between min and max (inclusive).


  _.random = function (min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }

    return min + Math.floor(Math.random() * (max - min + 1));
  }; // List of HTML entities for escaping.


  var entityMap = {
    escape: {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#x27;'
    }
  };
  entityMap.unescape = _.invert(entityMap.escape); // Regexes containing the keys and values listed immediately above.

  var entityRegexes = {
    escape: new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),
    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')
  }; // Functions for escaping and unescaping strings to/from HTML interpolation.

  _.each(['escape', 'unescape'], function (method) {
    _[method] = function (string) {
      if (string == null) return '';
      return ('' + string).replace(entityRegexes[method], function (match) {
        return entityMap[method][match];
      });
    };
  }); // If the value of the named `property` is a function then invoke it with the
  // `object` as context; otherwise, return it.


  _.result = function (object, property) {
    if (object == null) return void 0;
    var value = object[property];
    return _.isFunction(value) ? value.call(object) : value;
  }; // Add your own custom functions to the Underscore object.


  _.mixin = function (obj) {
    each(_.functions(obj), function (name) {
      var func = _[name] = obj[name];

      _.prototype[name] = function () {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result.call(this, func.apply(_, args));
      };
    });
  }; // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.


  var idCounter = 0;

  _.uniqueId = function (prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  }; // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.


  _.templateSettings = {
    evaluate: /<%([\s\S]+?)%>/g,
    interpolate: /<%=([\s\S]+?)%>/g,
    escape: /<%-([\s\S]+?)%>/g
  }; // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.

  var noMatch = /(.)^/; // Certain characters need to be escaped so that they can be put into a
  // string literal.

  var escapes = {
    "'": "'",
    '\\': '\\',
    '\r': 'r',
    '\n': 'n',
    '\t': 't',
    "\u2028": 'u2028',
    "\u2029": 'u2029'
  };
  var escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g; // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.

  _.template = function (text, data, settings) {
    var render;
    settings = _.defaults({}, settings, _.templateSettings); // Combine delimiters into one regular expression via alternation.

    var matcher = new RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g'); // Compile the template source, escaping string literals appropriately.

    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset).replace(escaper, function (match) {
        return '\\' + escapes[match];
      });

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      }

      if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      }

      if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }

      index = offset + match.length;
      return match;
    });
    source += "';\n"; // If a variable is not specified, place data values in local scope.

    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';
    source = "var __t,__p='',__j=Array.prototype.join," + "print=function(){__p+=__j.call(arguments,'');};\n" + source + "return __p;\n";

    try {
      render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    if (data) return render(data, _);

    var template = function template(data) {
      return render.call(this, data, _);
    }; // Provide the compiled function source as a convenience for precompilation.


    template.source = 'function(' + (settings.variable || 'obj') + '){\n' + source + '}';
    return template;
  }; // Add a "chain" function, which will delegate to the wrapper.


  _.chain = function (obj) {
    return _(obj).chain();
  }; // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.
  // Helper function to continue chaining intermediate results.


  var result = function result(obj) {
    return this._chain ? _(obj).chain() : obj;
  }; // Add all of the Underscore functions to the wrapper object.


  _.mixin(_); // Add all mutator Array functions to the wrapper.


  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {
    var method = ArrayProto[name];

    _.prototype[name] = function () {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];
      return result.call(this, obj);
    };
  }); // Add all accessor Array functions to the wrapper.

  each(['concat', 'join', 'slice'], function (name) {
    var method = ArrayProto[name];

    _.prototype[name] = function () {
      return result.call(this, method.apply(this._wrapped, arguments));
    };
  });

  _.extend(_.prototype, {
    // Start chaining a wrapped Underscore object.
    chain: function chain() {
      this._chain = true;
      return this;
    },
    // Extracts the result from a wrapped and chained object.
    value: function value() {
      return this._wrapped;
    }
  });
}).call(void 0);

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/Main.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '979d2m9WlRN0519FkcUBa5E', 'Main');
// Game/Scripts/Main.ts

Object.defineProperty(exports, "__esModule", { value: true });
var ViewManager_1 = require("../../framework/plugin_boosts/ui/ViewManager");
var Device_1 = require("../../framework/plugin_boosts/gamesys/Device");
var Res_1 = require("./hex-lines-game/Res");
var ToastManager_1 = require("../../framework/plugin_boosts/ui/ToastManager");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Main = /** @class */ (function (_super) {
    __extends(Main, _super);
    function Main() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Main_1 = Main;
    Main.prototype.onLoad = function () {
        Main_1.instance = this;
        Device_1.default.playMusic(Res_1.R.audio_bgm);
    };
    Main.prototype.isNextDay = function (timeSec) {
        return this.isGreaterDate(new Date(), new Date(timeSec));
    };
    ;
    Main.prototype.isGreaterDate = function (now, before) {
        var diff = now.getTime() - before.getTime();
        if (diff > 86400000) // 24*60*60*1000
         {
            return true;
        }
        else {
            if (diff > 0)
                return now.getDate() != before.getDate();
            else
                return false;
        }
    };
    ;
    Main.prototype.start = function () {
        appGame.gameServerRoom.emit(consts.CLIENT_GAME_START, function () {
            appGame.banner.playBanner(2);
        });
    };
    Main.prototype.click_play = function () {
        ViewManager_1.default.instance.show("Game/LevelDialog");
    };
    Main.prototype.toggle_sfx = function (t) {
        Device_1.default.setSoundsEnable(!t.isChecked);
    };
    Main.prototype.click_skin = function () {
        ViewManager_1.default.instance.show("Game/ShopDialog");
    };
    Main.prototype.click_rank = function () {
        ViewManager_1.default.instance.show("wechat/WxRankDialog");
    };
    Main.prototype.onShare = function () {
    };
    Main.prototype.click_share = function () {
    };
    Main.prototype.click_luck = function () {
        ViewManager_1.default.instance.show("Game/LuckyDialog");
    };
    Main.prototype.click_more = function () {
        ToastManager_1.Toast.make("敬请期待");
    };
    var Main_1;
    Main.instance = null;
    Main = Main_1 = __decorate([
        ccclass
    ], Main);
    return Main;
}(cc.Component));
exports.default = Main;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcTWFpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNEVBQXVFO0FBR3ZFLHVFQUFrRTtBQUNsRSw0Q0FBeUM7QUFDekMsOEVBQXNFO0FBRWhFLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQWtDLHdCQUFZO0lBQTlDOztJQXNFQSxDQUFDO2FBdEVvQixJQUFJO0lBS3JCLHFCQUFNLEdBQU47UUFDSSxNQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUVyQixnQkFBTSxDQUFDLFNBQVMsQ0FBQyxPQUFDLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUNELHdCQUFTLEdBQVQsVUFBVSxPQUFPO1FBRWIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksSUFBSSxFQUFFLEVBQUMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQTtJQUMzRCxDQUFDO0lBQUEsQ0FBQztJQUNGLDRCQUFhLEdBQWIsVUFBYyxHQUFHLEVBQUMsTUFBTTtRQUVwQixJQUFJLElBQUksR0FBRyxHQUFHLENBQUMsT0FBTyxFQUFFLEdBQUcsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFBO1FBQzNDLElBQUcsSUFBSSxHQUFHLFFBQVEsRUFBRSxnQkFBZ0I7U0FDcEM7WUFDSSxPQUFPLElBQUksQ0FBQztTQUNmO2FBQUk7WUFDRCxJQUFJLElBQUksR0FBRyxDQUFDO2dCQUNSLE9BQU8sR0FBRyxDQUFDLE9BQU8sRUFBRSxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQTs7Z0JBRXhDLE9BQU8sS0FBSyxDQUFDO1NBQ3BCO0lBQ0wsQ0FBQztJQUFBLENBQUM7SUFHRixvQkFBSyxHQUFMO1FBQ0ksT0FBTyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixFQUFDO1lBQ2pELE9BQU8sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxDQUFDO0lBRVAsQ0FBQztJQUVELHlCQUFVLEdBQVY7UUFDSSxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQTtJQUNqRCxDQUFDO0lBRUQseUJBQVUsR0FBVixVQUFXLENBQUM7UUFDUixnQkFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQTtJQUN4QyxDQUFDO0lBRUQseUJBQVUsR0FBVjtRQUNJLHFCQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO0lBQ2hELENBQUM7SUFFRCx5QkFBVSxHQUFWO1FBQ0kscUJBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUE7SUFDcEQsQ0FBQztJQUVELHNCQUFPLEdBQVA7SUFFQSxDQUFDO0lBRUQsMEJBQVcsR0FBWDtJQUVBLENBQUM7SUFFRCx5QkFBVSxHQUFWO1FBQ0kscUJBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUE7SUFDakQsQ0FBQztJQUdELHlCQUFVLEdBQVY7UUFDSSxvQkFBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUN0QixDQUFDOztJQWpFTSxhQUFRLEdBQVMsSUFBSSxDQUFDO0lBRlosSUFBSTtRQUR4QixPQUFPO09BQ2EsSUFBSSxDQXNFeEI7SUFBRCxXQUFDO0NBdEVELEFBc0VDLENBdEVpQyxFQUFFLENBQUMsU0FBUyxHQXNFN0M7a0JBdEVvQixJQUFJIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZpZXdNYW5hZ2VyIGZyb20gXCIuLi8uLi9mcmFtZXdvcmsvcGx1Z2luX2Jvb3N0cy91aS9WaWV3TWFuYWdlclwiO1xuXG5cbmltcG9ydCBEZXZpY2UgZnJvbSBcIi4uLy4uL2ZyYW1ld29yay9wbHVnaW5fYm9vc3RzL2dhbWVzeXMvRGV2aWNlXCI7XG5pbXBvcnQgeyBSIH0gZnJvbSBcIi4vaGV4LWxpbmVzLWdhbWUvUmVzXCI7XG5pbXBvcnQgeyBUb2FzdCB9IGZyb20gXCIuLi8uLi9mcmFtZXdvcmsvcGx1Z2luX2Jvb3N0cy91aS9Ub2FzdE1hbmFnZXJcIjtcblxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1haW4gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgc3RhdGljIGluc3RhbmNlOiBNYWluID0gbnVsbDtcblxuXG4gICAgb25Mb2FkKCkge1xuICAgICAgICBNYWluLmluc3RhbmNlID0gdGhpcztcblxuICAgICAgICBEZXZpY2UucGxheU11c2ljKFIuYXVkaW9fYmdtKTtcbiAgICB9XG4gICAgaXNOZXh0RGF5KHRpbWVTZWMpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5pc0dyZWF0ZXJEYXRlKG5ldyBEYXRlKCksbmV3IERhdGUodGltZVNlYykpXG4gICAgfTtcbiAgICBpc0dyZWF0ZXJEYXRlKG5vdyxiZWZvcmUpXG4gICAge1xuICAgICAgICB2YXIgZGlmZiA9IG5vdy5nZXRUaW1lKCkgLSBiZWZvcmUuZ2V0VGltZSgpIFxuICAgICAgICBpZihkaWZmID4gODY0MDAwMDApIC8vIDI0KjYwKjYwKjEwMDBcbiAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgaWYgKGRpZmYgPiAwIClcbiAgICAgICAgICAgICAgICByZXR1cm4gbm93LmdldERhdGUoKSAhPSBiZWZvcmUuZ2V0RGF0ZSgpXG4gICAgICAgICAgICBlbHNlIFxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgXG4gICAgICAgIH1cbiAgICB9O1xuICBcblxuICAgIHN0YXJ0KCkgeyBcbiAgICAgICAgYXBwR2FtZS5nYW1lU2VydmVyUm9vbS5lbWl0KGNvbnN0cy5DTElFTlRfR0FNRV9TVEFSVCxmdW5jdGlvbigpe1xuICAgICAgICAgICAgYXBwR2FtZS5iYW5uZXIucGxheUJhbm5lcigyKTtcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgIH1cblxuICAgIGNsaWNrX3BsYXkoKSB7XG4gICAgICAgIFZpZXdNYW5hZ2VyLmluc3RhbmNlLnNob3coXCJHYW1lL0xldmVsRGlhbG9nXCIpXG4gICAgfVxuXG4gICAgdG9nZ2xlX3NmeCh0KSB7XG4gICAgICAgIERldmljZS5zZXRTb3VuZHNFbmFibGUoIXQuaXNDaGVja2VkKVxuICAgIH1cblxuICAgIGNsaWNrX3NraW4oKSB7XG4gICAgICAgIFZpZXdNYW5hZ2VyLmluc3RhbmNlLnNob3coXCJHYW1lL1Nob3BEaWFsb2dcIilcbiAgICB9XG5cbiAgICBjbGlja19yYW5rKCkge1xuICAgICAgICBWaWV3TWFuYWdlci5pbnN0YW5jZS5zaG93KFwid2VjaGF0L1d4UmFua0RpYWxvZ1wiKVxuICAgIH1cblxuICAgIG9uU2hhcmUoKSB7XG5cbiAgICB9XG5cbiAgICBjbGlja19zaGFyZSgpIHtcbiAgICAgICBcbiAgICB9XG5cbiAgICBjbGlja19sdWNrKCkge1xuICAgICAgICBWaWV3TWFuYWdlci5pbnN0YW5jZS5zaG93KFwiR2FtZS9MdWNreURpYWxvZ1wiKVxuICAgIH1cblxuXG4gICAgY2xpY2tfbW9yZSgpIHtcbiAgICAgICAgVG9hc3QubWFrZShcIuaVrOivt+acn+W+hVwiKVxuICAgIH1cblxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/hex-lines-game/Animal.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ba634us93lPYrBZpOaL4ofo', 'Animal');
// Game/Scripts/hex-lines-game/Animal.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Animal = /** @class */ (function (_super) {
    __extends(Animal, _super);
    function Animal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sprite = null;
        _this.animation = null;
        return _this;
    }
    Animal.prototype.onLoad = function () {
        this.animation = this.getComponentInChildren(cc.Animation);
        this.animation.on("finished", this.onFinish, this);
    };
    Animal.prototype.onFinish = function (s, a) {
        if (a.clip.name == "animal_jump") {
            this.animation.play("animal_idle");
        }
    };
    Animal.prototype.start = function () {
        this.animation.play("animal_idle");
    };
    Animal.prototype.connected = function () {
        var state = this.animation.play("animal_jump");
        state.wrapMode = cc.WrapMode.Normal;
    };
    Animal.prototype._loopJump = function () {
        var state = this.animation.play("animal_jump");
        state.wrapMode = cc.WrapMode.Loop;
    };
    Animal.prototype.loopJump = function (d) {
        this.scheduleOnce(this._loopJump, this.randomFloat(0, d));
    };
    Animal.prototype.randomFloat = function (min, max) {
        return Math.random() * (max - min) + min;
    };
    ;
    __decorate([
        property(cc.Sprite)
    ], Animal.prototype, "sprite", void 0);
    Animal = __decorate([
        ccclass
    ], Animal);
    return Animal;
}(cc.Component));
exports.default = Animal;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcaGV4LWxpbmVzLWdhbWVcXEFuaW1hbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBRU0sSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBb0MsMEJBQVk7SUFBaEQ7UUFBQSxxRUE2Q0M7UUExQ0csWUFBTSxHQUFhLElBQUksQ0FBQztRQUd4QixlQUFTLEdBQWdCLElBQUksQ0FBQzs7SUF1Q2xDLENBQUM7SUFyQ0csdUJBQU0sR0FBTjtRQUNJLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLHNCQUFzQixDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBQyxJQUFJLENBQUMsQ0FBQTtJQUNyRCxDQUFDO0lBRUQseUJBQVEsR0FBUixVQUFTLENBQUMsRUFBQyxDQUFtQjtRQUUxQixJQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLGFBQWEsRUFDL0I7WUFDSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQTtTQUNyQztJQUNMLENBQUM7SUFFRCxzQkFBSyxHQUFMO1FBQ0ksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVELDBCQUFTLEdBQVQ7UUFDSSxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMvQyxLQUFLLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDO0lBQ3hDLENBQUM7SUFFRCwwQkFBUyxHQUFUO1FBRUksSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUE7UUFDOUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztJQUN0QyxDQUFDO0lBRUQseUJBQVEsR0FBUixVQUFTLENBQUM7UUFFTixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUM1RCxDQUFDO0lBRUQsNEJBQVcsR0FBWCxVQUFhLEdBQVUsRUFBQyxHQUFVO1FBRTlCLE9BQU8sSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQztJQUM3QyxDQUFDO0lBQUEsQ0FBQztJQXpDRjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDOzBDQUNJO0lBSFAsTUFBTTtRQUQxQixPQUFPO09BQ2EsTUFBTSxDQTZDMUI7SUFBRCxhQUFDO0NBN0NELEFBNkNDLENBN0NtQyxFQUFFLENBQUMsU0FBUyxHQTZDL0M7a0JBN0NvQixNQUFNIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUiB9IGZyb20gXCIuL1Jlc1wiO1xuaW1wb3J0IEcgZnJvbVwiLi4vZyAtIDAwMVwiO1xuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBbmltYWwgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgQHByb3BlcnR5KGNjLlNwcml0ZSlcbiAgICBzcHJpdGU6Y2MuU3ByaXRlID0gbnVsbDtcblxuXG4gICAgYW5pbWF0aW9uOmNjLkFuaW1hdGlvbiA9IG51bGw7XG4gICAgXG4gICAgb25Mb2FkICgpIHtcbiAgICAgICAgdGhpcy5hbmltYXRpb24gPSB0aGlzLmdldENvbXBvbmVudEluQ2hpbGRyZW4oY2MuQW5pbWF0aW9uKTtcbiAgICAgICAgdGhpcy5hbmltYXRpb24ub24oXCJmaW5pc2hlZFwiLCB0aGlzLm9uRmluaXNoLHRoaXMpXG4gICAgfVxuXG4gICAgb25GaW5pc2gocyxhOmNjLkFuaW1hdGlvblN0YXRlKVxuICAgIHtcbiAgICAgICAgaWYoYS5jbGlwLm5hbWUgPT0gXCJhbmltYWxfanVtcFwiKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLmFuaW1hdGlvbi5wbGF5KFwiYW5pbWFsX2lkbGVcIilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgdGhpcy5hbmltYXRpb24ucGxheShcImFuaW1hbF9pZGxlXCIpO1xuICAgIH1cblxuICAgIGNvbm5lY3RlZCgpIHtcbiAgICAgICAgbGV0IHN0YXRlID0gdGhpcy5hbmltYXRpb24ucGxheShcImFuaW1hbF9qdW1wXCIpO1xuICAgICAgICBzdGF0ZS53cmFwTW9kZSA9IGNjLldyYXBNb2RlLk5vcm1hbDtcbiAgICB9XG5cbiAgICBfbG9vcEp1bXAoKVxuICAgIHtcbiAgICAgICAgbGV0IHN0YXRlID0gdGhpcy5hbmltYXRpb24ucGxheShcImFuaW1hbF9qdW1wXCIpXG4gICAgICAgIHN0YXRlLndyYXBNb2RlID0gY2MuV3JhcE1vZGUuTG9vcDtcbiAgICB9XG5cbiAgICBsb29wSnVtcChkKVxuICAgIHtcbiAgICAgICAgdGhpcy5zY2hlZHVsZU9uY2UodGhpcy5fbG9vcEp1bXAsIHRoaXMucmFuZG9tRmxvYXQoMCxkKSlcbiAgICB9XG5cbiAgICByYW5kb21GbG9hdCAobWluOm51bWJlcixtYXg6bnVtYmVyKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbjtcbiAgICB9O1xufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/ui/DCParticleSystem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f51daFLsqdJ/4k4IuDQeRuR', 'DCParticleSystem');
// Game/Scripts/ui/DCParticleSystem.ts

Object.defineProperty(exports, "__esModule", { value: true });
var DCUI_1 = require("../../../framework/plugin_boosts/ui/DCUI");
var Info_1 = require("../Info");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var DCParticleSystem = /** @class */ (function (_super) {
    __extends(DCParticleSystem, _super);
    function DCParticleSystem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DCParticleSystem.prototype.onLoad = function () {
    };
    DCParticleSystem.prototype.start = function () { };
    DCParticleSystem.prototype.onValueChanged = function (v) {
        var _this = this;
        var data = Info_1.UserInfo.getSkinById(v);
        // data.ps
        if (this.ps && this.ps.node)
            this.ps.node.destroy();
        cc.loader.loadRes("Game/Particles/" + data.ps, cc.ParticleAsset, function (err, ps) {
            console.log(data.ps, ps);
            var particleNode = new cc.Node();
            _this.ps = particleNode.addComponent(cc.ParticleSystem);
            _this.ps.file = ps;
            _this.node.addChild(particleNode);
        });
        // this.ps.file = cc.url.raw("resources/Game/Particles/" + data.ps+".plist");
        // cc.loader.loadRes("Game/Particles/"+data.ps,cc.ParticleAsset,(err,ps)=>{
        //     console.log(data.ps,ps);
        //     this.ps.file = ps;
        // })
    };
    DCParticleSystem = __decorate([
        ccclass
    ], DCParticleSystem);
    return DCParticleSystem;
}(DCUI_1.default));
exports.default = DCParticleSystem;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcdWlcXERDUGFydGljbGVTeXN0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGlFQUE0RDtBQUM1RCxnQ0FBbUM7QUFHN0IsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBOEMsb0NBQUk7SUFBbEQ7O0lBNkJBLENBQUM7SUExQkcsaUNBQU0sR0FBTjtJQUdBLENBQUM7SUFFRCxnQ0FBSyxHQUFMLGNBQVUsQ0FBQztJQUVYLHlDQUFjLEdBQWQsVUFBZSxDQUFDO1FBQWhCLGlCQWtCQztRQWhCRyxJQUFJLElBQUksR0FBRyxlQUFRLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ25DLFVBQVU7UUFDVixJQUFHLElBQUksQ0FBQyxFQUFFLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJO1lBQ3RCLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzNCLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGlCQUFpQixHQUFDLElBQUksQ0FBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLGFBQWEsRUFBQyxVQUFDLEdBQUcsRUFBQyxFQUFFO1lBQ2hFLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsQ0FBQztZQUN4QixJQUFJLFlBQVksR0FBRyxJQUFJLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNqQyxLQUFJLENBQUMsRUFBRSxHQUFHLFlBQVksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQ3ZELEtBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztZQUNsQixLQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNyQyxDQUFDLENBQUMsQ0FBQTtRQUNGLDZFQUE2RTtRQUM3RSwyRUFBMkU7UUFDM0UsK0JBQStCO1FBQy9CLHlCQUF5QjtRQUN6QixLQUFLO0lBQ1QsQ0FBQztJQTVCZ0IsZ0JBQWdCO1FBRHBDLE9BQU87T0FDYSxnQkFBZ0IsQ0E2QnBDO0lBQUQsdUJBQUM7Q0E3QkQsQUE2QkMsQ0E3QjZDLGNBQUksR0E2QmpEO2tCQTdCb0IsZ0JBQWdCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERDVUkgZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9wbHVnaW5fYm9vc3RzL3VpL0RDVUlcIjtcbmltcG9ydCB7IFVzZXJJbmZvIH0gZnJvbSBcIi4uL0luZm9cIjtcbmltcG9ydCB7IFIgfSBmcm9tIFwiLi4vaGV4LWxpbmVzLWdhbWUvUmVzXCI7XG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRENQYXJ0aWNsZVN5c3RlbSBleHRlbmRzIERDVUkge1xuXG4gICAgcHM6Y2MuUGFydGljbGVTeXN0ZW07XG4gICAgb25Mb2FkKClcbiAgICB7XG4gICAgICAgIFxuICAgIH1cblxuICAgIHN0YXJ0ICgpIHt9XG5cbiAgICBvblZhbHVlQ2hhbmdlZCh2KVxuICAgIHtcbiAgICAgICAgbGV0IGRhdGEgPSBVc2VySW5mby5nZXRTa2luQnlJZCh2KTtcbiAgICAgICAgLy8gZGF0YS5wc1xuICAgICAgICBpZih0aGlzLnBzICYmIHRoaXMucHMubm9kZSlcbiAgICAgICAgICAgIHRoaXMucHMubm9kZS5kZXN0cm95KCk7XG4gICAgICAgIGNjLmxvYWRlci5sb2FkUmVzKFwiR2FtZS9QYXJ0aWNsZXMvXCIrZGF0YS5wcyxjYy5QYXJ0aWNsZUFzc2V0LChlcnIscHMpPT57XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLnBzLHBzKTtcbiAgICAgICAgICAgIGxldCBwYXJ0aWNsZU5vZGUgPSBuZXcgY2MuTm9kZSgpO1xuICAgICAgICAgICAgdGhpcy5wcyA9IHBhcnRpY2xlTm9kZS5hZGRDb21wb25lbnQoY2MuUGFydGljbGVTeXN0ZW0pO1xuICAgICAgICAgICAgdGhpcy5wcy5maWxlID0gcHM7XG4gICAgICAgICAgICB0aGlzLm5vZGUuYWRkQ2hpbGQocGFydGljbGVOb2RlKTtcbiAgICAgICAgfSlcbiAgICAgICAgLy8gdGhpcy5wcy5maWxlID0gY2MudXJsLnJhdyhcInJlc291cmNlcy9HYW1lL1BhcnRpY2xlcy9cIiArIGRhdGEucHMrXCIucGxpc3RcIik7XG4gICAgICAgIC8vIGNjLmxvYWRlci5sb2FkUmVzKFwiR2FtZS9QYXJ0aWNsZXMvXCIrZGF0YS5wcyxjYy5QYXJ0aWNsZUFzc2V0LChlcnIscHMpPT57XG4gICAgICAgIC8vICAgICBjb25zb2xlLmxvZyhkYXRhLnBzLHBzKTtcbiAgICAgICAgLy8gICAgIHRoaXMucHMuZmlsZSA9IHBzO1xuICAgICAgICAvLyB9KVxuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/hex-lines-game/Consts.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ccf28Nj1JdBbY/NtYiwJtcW', 'Consts');
// Game/Scripts/hex-lines-game/Consts.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Consts = /** @class */ (function () {
    function Consts() {
    }
    Consts.CenterY = 0;
    Consts.CenterX = 0;
    Consts.ColSize = 84;
    Consts.RowSize = 61;
    Consts.StagePageCount = 3;
    Consts.FreeSkinId = 5;
    return Consts;
}());
exports.default = Consts;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcaGV4LWxpbmVzLWdhbWVcXENvbnN0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7SUFBQTtJQVFBLENBQUM7SUFOVSxjQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ1osY0FBTyxHQUFHLENBQUMsQ0FBQztJQUNaLGNBQU8sR0FBRyxFQUFFLENBQUM7SUFDYixjQUFPLEdBQUcsRUFBRSxDQUFDO0lBQ2IscUJBQWMsR0FBRyxDQUFDLENBQUM7SUFDbkIsaUJBQVUsR0FBRyxDQUFDLENBQUM7SUFDMUIsYUFBQztDQVJELEFBUUMsSUFBQTtrQkFSb0IsTUFBTSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbnN0c1xue1xuICAgIHN0YXRpYyBDZW50ZXJZID0gMDtcbiAgICBzdGF0aWMgQ2VudGVyWCA9IDA7XG4gICAgc3RhdGljIENvbFNpemUgPSA4NDtcbiAgICBzdGF0aWMgUm93U2l6ZSA9IDYxO1xuICAgIHN0YXRpYyBTdGFnZVBhZ2VDb3VudCA9IDM7XG4gICAgc3RhdGljIEZyZWVTa2luSWQgPSA1O1xufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/ui/GetDialog.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '714f07aCe9N55KDdTLTUVv8', 'GetDialog');
// Game/Scripts/ui/GetDialog.ts

Object.defineProperty(exports, "__esModule", { value: true });
var View_1 = require("../../../framework/plugin_boosts/ui/View");
var Info_1 = require("../Info");
var ViewManager_1 = require("../../../framework/plugin_boosts/ui/ViewManager");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GetDialog = /** @class */ (function (_super) {
    __extends(GetDialog, _super);
    function GetDialog() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.diamondLabel = null;
        _this.count = 0;
        _this.node_close = null;
        return _this;
    }
    GetDialog.prototype.onLoad = function () { };
    GetDialog.prototype.start = function () { };
    GetDialog.prototype.share_suc = function () {
        Info_1.UserInfo.addDiamond(this.count * 2);
        Info_1.UserInfo.save();
        // Device.playEffect(R.audio_get_diamond)
        this.getComponent(View_1.default).hide();
        ViewManager_1.default.instance.show("Game/LuckyDialog");
    };
    GetDialog.prototype.click_double = function () {
        //share 
        //if share suc 
        // this.share_suc()
        var choice = Info_1.UserInfo.getChoice(Info_1.ChoiceType.Get);
        if (choice == 1) {
        }
        else if (choice == 0) {
            this.share_suc();
        }
        else {
            //video\
        }
    };
    GetDialog.prototype.onShown = function (count) {
        this.count = count;
        // SpriteFrameCache.instance.getSpriteFrame("Game/textures/car/" + cfg.img).then(sf=>this.icon.spriteFrame= sf);
        this.diamondLabel.string = "+" + count;
        this.node_close.active = false;
        this.unschedule(this.delayShow);
        this.scheduleOnce(this.delayShow, 2);
    };
    GetDialog.prototype.delayShow = function () {
        this.node_close.active = true;
    };
    GetDialog.prototype.click_no = function () {
        this.getComponent(View_1.default).hide();
        Info_1.UserInfo.addDiamond(this.count);
        Info_1.UserInfo.save();
        // Device.playEffect(R.audio_get_diamond)
        ViewManager_1.default.instance.show("Game/LuckyDialog");
    };
    __decorate([
        property(cc.Label)
    ], GetDialog.prototype, "diamondLabel", void 0);
    __decorate([
        property(cc.Node)
    ], GetDialog.prototype, "node_close", void 0);
    GetDialog = __decorate([
        ccclass
    ], GetDialog);
    return GetDialog;
}(cc.Component));
exports.default = GetDialog;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcdWlcXEdldERpYWxvZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaUVBQTREO0FBQzVELGdDQUErQztBQUcvQywrRUFBMEU7QUFJcEUsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBdUMsNkJBQVk7SUFBbkQ7UUFBQSxxRUFnRUM7UUExREcsa0JBQVksR0FBWSxJQUFJLENBQUM7UUFFN0IsV0FBSyxHQUFVLENBQUMsQ0FBQztRQUdqQixnQkFBVSxHQUFZLElBQUksQ0FBQzs7SUFxRC9CLENBQUM7SUE5REcsMEJBQU0sR0FBTixjQUFXLENBQUM7SUFDWix5QkFBSyxHQUFMLGNBQVUsQ0FBQztJQVdYLDZCQUFTLEdBQVQ7UUFFSSxlQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFFLENBQUE7UUFDcEMsZUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2hCLHlDQUF5QztRQUN6QyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQy9CLHFCQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFBO0lBQ2pELENBQUM7SUFFRCxnQ0FBWSxHQUFaO1FBRUksUUFBUTtRQUNSLGVBQWU7UUFDZixtQkFBbUI7UUFDbkIsSUFBSSxNQUFNLEdBQUcsZUFBUSxDQUFDLFNBQVMsQ0FBQyxpQkFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBQy9DLElBQUcsTUFBTSxJQUFJLENBQUMsRUFDZDtTQUVDO2FBQUssSUFBRyxNQUFNLElBQUksQ0FBQyxFQUNwQjtZQUNJLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQTtTQUNuQjthQUFLO1lBQ0YsUUFBUTtTQUVYO0lBQ0wsQ0FBQztJQUVELDJCQUFPLEdBQVAsVUFBUSxLQUFLO1FBRVQsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsZ0hBQWdIO1FBQ2hILElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxHQUFJLEdBQUcsR0FBRyxLQUFLLENBQUM7UUFDeEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFBO1FBQzlCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBQy9CLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBQyxDQUFDLENBQUMsQ0FBQTtJQUN2QyxDQUFDO0lBRUQsNkJBQVMsR0FBVDtRQUVJLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQTtJQUNqQyxDQUFDO0lBRUQsNEJBQVEsR0FBUjtRQUVJLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBSSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDL0IsZUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFFLENBQUE7UUFDaEMsZUFBUSxDQUFDLElBQUksRUFBRSxDQUFBO1FBQ2YseUNBQXlDO1FBQ3pDLHFCQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFBO0lBQ2pELENBQUM7SUF6REQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzttREFDVTtJQUs3QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO2lEQUNTO0lBWFYsU0FBUztRQUQ3QixPQUFPO09BQ2EsU0FBUyxDQWdFN0I7SUFBRCxnQkFBQztDQWhFRCxBQWdFQyxDQWhFc0MsRUFBRSxDQUFDLFNBQVMsR0FnRWxEO2tCQWhFb0IsU0FBUyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWaWV3IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvcGx1Z2luX2Jvb3N0cy91aS9WaWV3XCI7XG5pbXBvcnQgeyBVc2VySW5mbywgQ2hvaWNlVHlwZSB9IGZyb20gXCIuLi9JbmZvXCI7XG5pbXBvcnQgeyBUb2FzdCB9IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvcGx1Z2luX2Jvb3N0cy91aS9Ub2FzdE1hbmFnZXJcIjtcbmltcG9ydCBMdWNreURpYWxvZyBmcm9tIFwiLi9MdWNreURpYWxvZ1wiO1xuaW1wb3J0IFZpZXdNYW5hZ2VyIGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvcGx1Z2luX2Jvb3N0cy91aS9WaWV3TWFuYWdlclwiO1xuaW1wb3J0IERldmljZSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL3BsdWdpbl9ib29zdHMvZ2FtZXN5cy9EZXZpY2VcIjtcblxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdldERpYWxvZyBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cbiAgICBvbkxvYWQgKCkge31cbiAgICBzdGFydCAoKSB7fVxuXG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxuICAgIGRpYW1vbmRMYWJlbDpjYy5MYWJlbCA9IG51bGw7XG5cbiAgICBjb3VudDpudW1iZXIgPSAwO1xuXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXG4gICAgbm9kZV9jbG9zZTpjYy5Ob2RlID0gIG51bGw7XG5cblxuICAgIHNoYXJlX3N1YygpXG4gICAge1xuICAgICAgICBVc2VySW5mby5hZGREaWFtb25kKHRoaXMuY291bnQgKiAyIClcbiAgICAgICAgVXNlckluZm8uc2F2ZSgpO1xuICAgICAgICAvLyBEZXZpY2UucGxheUVmZmVjdChSLmF1ZGlvX2dldF9kaWFtb25kKVxuICAgICAgICB0aGlzLmdldENvbXBvbmVudChWaWV3KS5oaWRlKCk7XG4gICAgICAgIFZpZXdNYW5hZ2VyLmluc3RhbmNlLnNob3coXCJHYW1lL0x1Y2t5RGlhbG9nXCIpXG4gICAgfVxuXG4gICAgY2xpY2tfZG91YmxlKClcbiAgICB7XG4gICAgICAgIC8vc2hhcmUgXG4gICAgICAgIC8vaWYgc2hhcmUgc3VjIFxuICAgICAgICAvLyB0aGlzLnNoYXJlX3N1YygpXG4gICAgICAgIGxldCBjaG9pY2UgPSBVc2VySW5mby5nZXRDaG9pY2UoQ2hvaWNlVHlwZS5HZXQpXG4gICAgICAgIGlmKGNob2ljZSA9PSAxKVxuICAgICAgICB7XG4gICAgICBcbiAgICAgICAgfWVsc2UgaWYoY2hvaWNlID09IDApXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuc2hhcmVfc3VjKClcbiAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgLy92aWRlb1xcXG4gICAgICAgICBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uU2hvd24oY291bnQpXG4gICAge1xuICAgICAgICB0aGlzLmNvdW50ID0gY291bnQ7XG4gICAgICAgIC8vIFNwcml0ZUZyYW1lQ2FjaGUuaW5zdGFuY2UuZ2V0U3ByaXRlRnJhbWUoXCJHYW1lL3RleHR1cmVzL2Nhci9cIiArIGNmZy5pbWcpLnRoZW4oc2Y9PnRoaXMuaWNvbi5zcHJpdGVGcmFtZT0gc2YpO1xuICAgICAgICB0aGlzLmRpYW1vbmRMYWJlbC5zdHJpbmcgPSAgXCIrXCIgKyBjb3VudDtcbiAgICAgICAgdGhpcy5ub2RlX2Nsb3NlLmFjdGl2ZSA9IGZhbHNlXG4gICAgICAgIHRoaXMudW5zY2hlZHVsZSh0aGlzLmRlbGF5U2hvdylcbiAgICAgICAgdGhpcy5zY2hlZHVsZU9uY2UodGhpcy5kZWxheVNob3csMilcbiAgICB9XG5cbiAgICBkZWxheVNob3coKVxuICAgIHtcbiAgICAgICAgdGhpcy5ub2RlX2Nsb3NlLmFjdGl2ZSA9IHRydWVcbiAgICB9XG5cbiAgICBjbGlja19ubygpXG4gICAge1xuICAgICAgICB0aGlzLmdldENvbXBvbmVudChWaWV3KS5oaWRlKCk7XG4gICAgICAgIFVzZXJJbmZvLmFkZERpYW1vbmQodGhpcy5jb3VudCApXG4gICAgICAgIFVzZXJJbmZvLnNhdmUoKVxuICAgICAgICAvLyBEZXZpY2UucGxheUVmZmVjdChSLmF1ZGlvX2dldF9kaWFtb25kKVxuICAgICAgICBWaWV3TWFuYWdlci5pbnN0YW5jZS5zaG93KFwiR2FtZS9MdWNreURpYWxvZ1wiKVxuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/ui/DailyGetDialog.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd3b8fModWBPmovqTucbpm5C', 'DailyGetDialog');
// Game/Scripts/ui/DailyGetDialog.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Info_1 = require("../Info");
var View_1 = require("../../../framework/plugin_boosts/ui/View");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var DailyGetDialog = /** @class */ (function (_super) {
    __extends(DailyGetDialog, _super);
    function DailyGetDialog() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.diamond = 0;
        _this.rewardLabel = null;
        return _this;
    }
    DailyGetDialog.prototype.onLoad = function () { };
    DailyGetDialog.prototype.start = function () { };
    DailyGetDialog.prototype.onShown = function () {
        this.diamond = g.randomInt(20, 50);
        this.rewardLabel.string = cc.js.formatStr("钻石 x " + this.diamond);
    };
    DailyGetDialog.prototype.click_get = function () {
        // share or video 
        Info_1.UserInfo.addDiamond(this.diamond);
        Info_1.UserInfo.dailyGetTime = new Date().getTime();
        Info_1.UserInfo.save();
        this.getComponent(View_1.default).hide();
    };
    DailyGetDialog.prototype.share_succ = function () {
        Info_1.UserInfo.addDiamond(this.diamond * 2);
        Info_1.UserInfo.dailyGetTime = new Date().getTime();
        Info_1.UserInfo.save();
        this.getComponent(View_1.default).hide();
    };
    DailyGetDialog.prototype.click_get_double = function () {
        //share orvideo
        var choice = Info_1.UserInfo.getChoice(Info_1.ChoiceType.DailyGet);
        if (choice == 0) {
            this.share_succ();
        }
    };
    __decorate([
        property(cc.Label)
    ], DailyGetDialog.prototype, "rewardLabel", void 0);
    DailyGetDialog = __decorate([
        ccclass
    ], DailyGetDialog);
    return DailyGetDialog;
}(cc.Component));
exports.default = DailyGetDialog;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcdWlcXERhaWx5R2V0RGlhbG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxnQ0FBK0M7QUFDL0MsaUVBQTREO0FBSXRELElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQTRDLGtDQUFZO0lBQXhEO1FBQUEscUVBeUNDO1FBckNHLGFBQU8sR0FBVSxDQUFDLENBQUM7UUFHbkIsaUJBQVcsR0FBWSxJQUFJLENBQUM7O0lBa0NoQyxDQUFDO0lBdkNHLCtCQUFNLEdBQU4sY0FBVyxDQUFDO0lBQ1osOEJBQUssR0FBTCxjQUFVLENBQUM7SUFNWCxnQ0FBTyxHQUFQO1FBRUksSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsU0FBUyxDQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBQ3JFLENBQUM7SUFFRCxrQ0FBUyxHQUFUO1FBRUksa0JBQWtCO1FBQ2xCLGVBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ2pDLGVBQVEsQ0FBQyxZQUFZLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtRQUM1QyxlQUFRLENBQUMsSUFBSSxFQUFFLENBQUE7UUFDZixJQUFJLENBQUMsWUFBWSxDQUFDLGNBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFBO0lBQ2xDLENBQUM7SUFFRCxtQ0FBVSxHQUFWO1FBRUksZUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3RDLGVBQVEsQ0FBQyxZQUFZLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtRQUM1QyxlQUFRLENBQUMsSUFBSSxFQUFFLENBQUE7UUFDZixJQUFJLENBQUMsWUFBWSxDQUFDLGNBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFBO0lBQ2xDLENBQUM7SUFFRCx5Q0FBZ0IsR0FBaEI7UUFFSSxlQUFlO1FBQ2YsSUFBSSxNQUFNLEdBQUcsZUFBUSxDQUFDLFNBQVMsQ0FBQyxpQkFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3JELElBQUksTUFBTSxJQUFJLENBQUMsRUFDZjtZQUNJLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztTQUNyQjtJQUNMLENBQUM7SUFqQ0Q7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzt1REFDUztJQVBYLGNBQWM7UUFEbEMsT0FBTztPQUNhLGNBQWMsQ0F5Q2xDO0lBQUQscUJBQUM7Q0F6Q0QsQUF5Q0MsQ0F6QzJDLEVBQUUsQ0FBQyxTQUFTLEdBeUN2RDtrQkF6Q29CLGNBQWMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VySW5mbywgQ2hvaWNlVHlwZSB9IGZyb20gXCIuLi9JbmZvXCI7XG5pbXBvcnQgVmlldyBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL3BsdWdpbl9ib29zdHMvdWkvVmlld1wiO1xuaW1wb3J0IHsgVG9hc3QgfSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL3BsdWdpbl9ib29zdHMvdWkvVG9hc3RNYW5hZ2VyXCI7XG5cblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEYWlseUdldERpYWxvZyBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cbiAgICBvbkxvYWQgKCkge31cbiAgICBzdGFydCAoKSB7fVxuICAgIGRpYW1vbmQ6bnVtYmVyID0gMDtcblxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcbiAgICByZXdhcmRMYWJlbDpjYy5MYWJlbCA9IG51bGw7XG5cbiAgICBvblNob3duKClcbiAgICB7XG4gICAgICAgIHRoaXMuZGlhbW9uZCA9IGcucmFuZG9tSW50KDIwLDUwKTtcbiAgICAgICAgdGhpcy5yZXdhcmRMYWJlbC5zdHJpbmcgPSBjYy5qcy5mb3JtYXRTdHIoXCLpkrvnn7MgeCBcIiArIHRoaXMuZGlhbW9uZClcbiAgICB9XG5cbiAgICBjbGlja19nZXQoKVxuICAgIHtcbiAgICAgICAgLy8gc2hhcmUgb3IgdmlkZW8gXG4gICAgICAgIFVzZXJJbmZvLmFkZERpYW1vbmQodGhpcy5kaWFtb25kKVxuICAgICAgICBVc2VySW5mby5kYWlseUdldFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKVxuICAgICAgICBVc2VySW5mby5zYXZlKClcbiAgICAgICAgdGhpcy5nZXRDb21wb25lbnQoVmlldykuaGlkZSgpXG4gICAgfVxuXG4gICAgc2hhcmVfc3VjYygpXG4gICAge1xuICAgICAgICBVc2VySW5mby5hZGREaWFtb25kKHRoaXMuZGlhbW9uZCAqIDIpO1xuICAgICAgICBVc2VySW5mby5kYWlseUdldFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKVxuICAgICAgICBVc2VySW5mby5zYXZlKClcbiAgICAgICAgdGhpcy5nZXRDb21wb25lbnQoVmlldykuaGlkZSgpXG4gICAgfVxuXG4gICAgY2xpY2tfZ2V0X2RvdWJsZSgpXG4gICAge1xuICAgICAgICAvL3NoYXJlIG9ydmlkZW9cbiAgICAgICAgbGV0IGNob2ljZSA9IFVzZXJJbmZvLmdldENob2ljZShDaG9pY2VUeXBlLkRhaWx5R2V0KTtcbiAgICAgICAgaWYgKGNob2ljZSA9PSAwKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnNoYXJlX3N1Y2MoKTtcbiAgICAgICAgfVxuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/hex-lines-game/Res.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '81fb28+15NDNaH9M81MKxwU', 'Res');
// Game/Scripts/hex-lines-game/Res.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.R = void 0;
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
exports.R = null;
var Res = /** @class */ (function (_super) {
    __extends(Res, _super);
    function Res() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.levelJson = null;
        _this.TilePrefab = null;
        _this.TileShadow = null;
        _this.Line46 = null;
        _this.Line37 = null;
        _this.Line19 = null;
        _this.audio_bgm = null;
        _this.audio_unlock = null;
        _this.audio_invalid = null;
        _this.audio_draw = null;
        _this.audio_down = null;
        _this.audio_win = null;
        _this.audio_link = null;
        _this.audio_get_diamond = null;
        _this.tileTextures = [];
        _this.animalPrefabs = [];
        _this.skinConfig = null;
        _this.luckyConfig = null;
        _this.colors = [];
        return _this;
    }
    Res.prototype.onLoad = function () {
        exports.R = this;
    };
    Res.prototype.start = function () {
    };
    __decorate([
        property(cc.JsonAsset)
    ], Res.prototype, "levelJson", void 0);
    __decorate([
        property(cc.Prefab)
    ], Res.prototype, "TilePrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], Res.prototype, "TileShadow", void 0);
    __decorate([
        property(cc.Prefab)
    ], Res.prototype, "Line46", void 0);
    __decorate([
        property(cc.Prefab)
    ], Res.prototype, "Line37", void 0);
    __decorate([
        property(cc.Prefab)
    ], Res.prototype, "Line19", void 0);
    __decorate([
        property({ type: cc.AudioClip })
    ], Res.prototype, "audio_bgm", void 0);
    __decorate([
        property({ type: cc.AudioClip })
    ], Res.prototype, "audio_unlock", void 0);
    __decorate([
        property({ type: cc.AudioClip })
    ], Res.prototype, "audio_invalid", void 0);
    __decorate([
        property({ type: cc.AudioClip })
    ], Res.prototype, "audio_draw", void 0);
    __decorate([
        property({ type: cc.AudioClip })
    ], Res.prototype, "audio_down", void 0);
    __decorate([
        property({ type: cc.AudioClip })
    ], Res.prototype, "audio_win", void 0);
    __decorate([
        property({ type: cc.AudioClip })
    ], Res.prototype, "audio_link", void 0);
    __decorate([
        property({ type: cc.AudioClip })
    ], Res.prototype, "audio_get_diamond", void 0);
    __decorate([
        property([cc.SpriteFrame])
    ], Res.prototype, "tileTextures", void 0);
    __decorate([
        property([cc.Prefab])
    ], Res.prototype, "animalPrefabs", void 0);
    __decorate([
        property(cc.JsonAsset)
    ], Res.prototype, "skinConfig", void 0);
    __decorate([
        property(cc.JsonAsset)
    ], Res.prototype, "luckyConfig", void 0);
    __decorate([
        property([cc.Color])
    ], Res.prototype, "colors", void 0);
    Res = __decorate([
        ccclass
    ], Res);
    return Res;
}(cc.Component));
exports.default = Res;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcaGV4LWxpbmVzLWdhbWVcXFJlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRS9CLFFBQUEsQ0FBQyxHQUFPLElBQUksQ0FBQztBQUV4QjtJQUFpQyx1QkFBWTtJQUE3QztRQUFBLHFFQW1FQztRQWhFRyxlQUFTLEdBQWdCLElBQUksQ0FBQztRQUc5QixnQkFBVSxHQUFjLElBQUksQ0FBQztRQUc3QixnQkFBVSxHQUFhLElBQUksQ0FBQztRQUc1QixZQUFNLEdBQWEsSUFBSSxDQUFDO1FBR3hCLFlBQU0sR0FBYSxJQUFJLENBQUM7UUFHeEIsWUFBTSxHQUFhLElBQUksQ0FBQztRQUd4QixlQUFTLEdBQWdCLElBQUksQ0FBQztRQUc5QixrQkFBWSxHQUFnQixJQUFJLENBQUM7UUFHakMsbUJBQWEsR0FBZ0IsSUFBSSxDQUFDO1FBR2xDLGdCQUFVLEdBQWdCLElBQUksQ0FBQztRQUcvQixnQkFBVSxHQUFnQixJQUFJLENBQUM7UUFHL0IsZUFBUyxHQUFnQixJQUFJLENBQUM7UUFHOUIsZ0JBQVUsR0FBZ0IsSUFBSSxDQUFDO1FBRy9CLHVCQUFpQixHQUFnQixJQUFJLENBQUM7UUFHdEMsa0JBQVksR0FBb0IsRUFBRSxDQUFBO1FBR2xDLG1CQUFhLEdBQWUsRUFBRSxDQUFBO1FBRzlCLGdCQUFVLEdBQWlCLElBQUksQ0FBQztRQUdoQyxpQkFBVyxHQUFrQixJQUFJLENBQUM7UUFHbEMsWUFBTSxHQUFnQixFQUFFLENBQUE7O0lBVTVCLENBQUM7SUFSRyxvQkFBTSxHQUFOO1FBQ0ksU0FBQyxHQUFHLElBQUksQ0FBQztJQUNiLENBQUM7SUFFRCxtQkFBSyxHQUFMO0lBRUEsQ0FBQztJQTlERDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDOzBDQUNPO0lBRzlCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7MkNBQ1M7SUFHN0I7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQzsyQ0FDUTtJQUc1QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3VDQUNJO0lBR3hCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7dUNBQ0k7SUFHeEI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQzt1Q0FDSTtJQUd4QjtRQURDLFFBQVEsQ0FBQyxFQUFDLElBQUksRUFBRSxFQUFFLENBQUMsU0FBUyxFQUFDLENBQUM7MENBQ0Q7SUFHOUI7UUFEQyxRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBQyxDQUFDOzZDQUNFO0lBR2pDO1FBREMsUUFBUSxDQUFDLEVBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxTQUFTLEVBQUMsQ0FBQzs4Q0FDRztJQUdsQztRQURDLFFBQVEsQ0FBQyxFQUFDLElBQUksRUFBRSxFQUFFLENBQUMsU0FBUyxFQUFDLENBQUM7MkNBQ0E7SUFHL0I7UUFEQyxRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBQyxDQUFDOzJDQUNBO0lBRy9CO1FBREMsUUFBUSxDQUFDLEVBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxTQUFTLEVBQUMsQ0FBQzswQ0FDRDtJQUc5QjtRQURDLFFBQVEsQ0FBQyxFQUFDLElBQUksRUFBRSxFQUFFLENBQUMsU0FBUyxFQUFDLENBQUM7MkNBQ0E7SUFHL0I7UUFEQyxRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBQyxDQUFDO2tEQUNPO0lBR3RDO1FBREMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDOzZDQUNPO0lBR2xDO1FBREMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDOzhDQUNRO0lBRzlCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUM7MkNBQ1M7SUFHaEM7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQzs0Q0FDVztJQUdsQztRQURDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQzt1Q0FDRztJQXpEUCxHQUFHO1FBRHZCLE9BQU87T0FDYSxHQUFHLENBbUV2QjtJQUFELFVBQUM7Q0FuRUQsQUFtRUMsQ0FuRWdDLEVBQUUsQ0FBQyxTQUFTLEdBbUU1QztrQkFuRW9CLEdBQUciLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuZXhwb3J0IHZhciBSOlJlcyA9IG51bGw7XG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVzIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcbiAgICBcbiAgICBAcHJvcGVydHkoY2MuSnNvbkFzc2V0KVxuICAgIGxldmVsSnNvbjpjYy5Kc29uQXNzZXQgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLlByZWZhYilcbiAgICBUaWxlUHJlZmFiOmNjLlByZWZhYiAgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLlByZWZhYilcbiAgICBUaWxlU2hhZG93OmNjLlByZWZhYiA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoY2MuUHJlZmFiKVxuICAgIExpbmU0NjpjYy5QcmVmYWIgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLlByZWZhYilcbiAgICBMaW5lMzc6Y2MuUHJlZmFiID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5QcmVmYWIpXG4gICAgTGluZTE5OmNjLlByZWZhYiA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoe3R5cGU6IGNjLkF1ZGlvQ2xpcH0pXG4gICAgYXVkaW9fYmdtOmNjLkF1ZGlvQ2xpcCA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoe3R5cGU6IGNjLkF1ZGlvQ2xpcH0pXG4gICAgYXVkaW9fdW5sb2NrOmNjLkF1ZGlvQ2xpcCA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoe3R5cGU6IGNjLkF1ZGlvQ2xpcH0pXG4gICAgYXVkaW9faW52YWxpZDpjYy5BdWRpb0NsaXAgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KHt0eXBlOiBjYy5BdWRpb0NsaXB9KVxuICAgIGF1ZGlvX2RyYXc6Y2MuQXVkaW9DbGlwID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eSh7dHlwZTogY2MuQXVkaW9DbGlwfSlcbiAgICBhdWRpb19kb3duOmNjLkF1ZGlvQ2xpcCA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoe3R5cGU6IGNjLkF1ZGlvQ2xpcH0pXG4gICAgYXVkaW9fd2luOmNjLkF1ZGlvQ2xpcCA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoe3R5cGU6IGNjLkF1ZGlvQ2xpcH0pXG4gICAgYXVkaW9fbGluazpjYy5BdWRpb0NsaXAgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KHt0eXBlOiBjYy5BdWRpb0NsaXB9KVxuICAgIGF1ZGlvX2dldF9kaWFtb25kOmNjLkF1ZGlvQ2xpcCA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoW2NjLlNwcml0ZUZyYW1lXSlcbiAgICB0aWxlVGV4dHVyZXM6Y2MuU3ByaXRlRnJhbWVbXSA9IFtdXG4gICAgXG4gICAgQHByb3BlcnR5KFtjYy5QcmVmYWJdKVxuICAgIGFuaW1hbFByZWZhYnM6Y2MuUHJlZmFiW10gPSBbXVxuXG4gICAgQHByb3BlcnR5KGNjLkpzb25Bc3NldClcbiAgICBza2luQ29uZmlnOmNjLkpzb25Bc3NldCA9ICBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLkpzb25Bc3NldClcbiAgICBsdWNreUNvbmZpZzogY2MuSnNvbkFzc2V0ID0gIG51bGw7XG5cbiAgICBAcHJvcGVydHkoW2NjLkNvbG9yXSlcbiAgICBjb2xvcnM6IGNjLkNvbG9yIFtdID0gW11cbiAgICBcbiAgICBvbkxvYWQgKCkge1xuICAgICAgICBSID0gdGhpcztcbiAgICB9XG5cbiAgICBzdGFydCAoKSB7XG5cbiAgICB9XG5cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/Info.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '894ddeHxZNOMqD6BW+YheZr', 'Info');
// Game/Scripts/Info.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.UserInfo = exports.ChoiceType = void 0;
var DataCenter_1 = require("../../framework/plugin_boosts/misc/DataCenter");
var Res_1 = require("./hex-lines-game/Res");
var ToastManager_1 = require("../../framework/plugin_boosts/ui/ToastManager");
var Device_1 = require("../../framework/plugin_boosts/gamesys/Device");
var ChoiceType;
(function (ChoiceType) {
    ChoiceType[ChoiceType["DailyGet"] = 0] = "DailyGet";
    ChoiceType[ChoiceType["Levelup"] = 1] = "Levelup";
    ChoiceType[ChoiceType["Get"] = 2] = "Get";
    ChoiceType[ChoiceType["Shop"] = 3] = "Shop";
    ChoiceType[ChoiceType["BannerAdRefresh"] = 4] = "BannerAdRefresh";
    ChoiceType[ChoiceType["HB"] = 5] = "HB";
})(ChoiceType = exports.ChoiceType || (exports.ChoiceType = {}));
var UserInfoClass = /** @class */ (function (_super) {
    __extends(UserInfoClass, _super);
    function UserInfoClass() {
        var _this = _super.call(this) || this;
        _this.choices = [];
        _this.version = "6";
        _this.level = 1;
        _this.selectedSkin = "2";
        _this.dailyGetTime = new Date(2018, 1, 1).getTime();
        _this.freedrawTime = _this.dailyGetTime;
        _this.luckyVideoWatchTime = _this.dailyGetTime;
        _this.shopFreeDiamondTime = _this.dailyGetTime;
        _this.diamond = 0;
        _this.sfx_enabled = true;
        _this.firstTimeReach = false;
        _this.luckyVideoWatchCount = 0;
        _this.timePassed = 0;
        _this.stepUsed = 0;
        _this.currentLevel = 1;
        _this.unlock(_this.selectedSkin);
        setTimeout(function () {
            _this.save();
        }, 60 * 1000);
        return _this;
        // onexit game =>save
    }
    // ret: 0:directly-get 1:share 2:video
    UserInfoClass.prototype.getChoice = function (slotId) {
        return this.choices[slotId] || 0;
    };
    UserInfoClass.prototype.init = function () {
    };
    UserInfoClass.prototype.onGetConfig = function (data) {
        if (data) {
            var record = data[0];
            if (record) {
                this.choices = JSON.parse(record[this.version]);
            }
        }
    };
    UserInfoClass.prototype.addDiamond = function (d, b) {
        if (b === void 0) { b = true; }
        if (typeof (d) == "number")
            this.diamond += d;
        else
            this.diamond += parseInt(d);
        if (b) {
            ToastManager_1.Toast.make("获得钻石 x" + d);
            Device_1.default.playEffect(Res_1.R.audio_get_diamond);
        }
        if (!this.firstTimeReach) {
            if (this.diamond >= 500) {
                ToastManager_1.Toast.make("哇可以买皮肤了，快去皮肤商店看看吧!", 2);
                this.firstTimeReach = true;
                exports.UserInfo.save();
            }
        }
    };
    UserInfoClass.prototype.isUnlock = function (skin_id) {
        var carUnlocked = localStorage.getItem("unlocked_" + skin_id);
        if (!carUnlocked) {
            return false;
        }
        else {
            return carUnlocked == "1";
        }
    };
    UserInfoClass.prototype.isAllUnlocked = function () {
        var c = 0;
        for (var i = 0; i < Res_1.R.skinConfig.json.length; i++) {
            var v = Res_1.R.skinConfig.json[i];
            if (exports.UserInfo.isUnlock(v.id)) {
                c++;
            }
        }
        return c == Res_1.R.skinConfig.json.length;
    };
    UserInfoClass.prototype.getSkinById = function (id) {
        var res = Res_1.R.skinConfig.json.filter(function (v) { return v.id == id; });
        return res[0];
    };
    UserInfoClass.prototype.unlock = function (skin_id) {
        localStorage.setItem("unlocked_" + skin_id, "1");
    };
    __decorate([
        DataCenter_1.field()
    ], UserInfoClass.prototype, "level", void 0);
    __decorate([
        DataCenter_1.field()
    ], UserInfoClass.prototype, "selectedSkin", void 0);
    __decorate([
        DataCenter_1.field()
    ], UserInfoClass.prototype, "dailyGetTime", void 0);
    __decorate([
        DataCenter_1.field()
    ], UserInfoClass.prototype, "freedrawTime", void 0);
    __decorate([
        DataCenter_1.field()
    ], UserInfoClass.prototype, "luckyVideoWatchTime", void 0);
    __decorate([
        DataCenter_1.field()
    ], UserInfoClass.prototype, "shopFreeDiamondTime", void 0);
    __decorate([
        DataCenter_1.field()
    ], UserInfoClass.prototype, "diamond", void 0);
    __decorate([
        DataCenter_1.field()
    ], UserInfoClass.prototype, "sfx_enabled", void 0);
    __decorate([
        DataCenter_1.field()
    ], UserInfoClass.prototype, "firstTimeReach", void 0);
    __decorate([
        DataCenter_1.field()
    ], UserInfoClass.prototype, "luckyVideoWatchCount", void 0);
    UserInfoClass = __decorate([
        DataCenter_1.dc("Info")
    ], UserInfoClass);
    return UserInfoClass;
}(DataCenter_1.default));
exports.default = UserInfoClass;
exports.UserInfo = DataCenter_1.default.register(UserInfoClass);

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcSW5mby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDRFQUFzRjtBQUN0Riw0Q0FBeUM7QUFDekMsOEVBQXNFO0FBQ3RFLHVFQUFrRTtBQUlsRSxJQUFZLFVBT1g7QUFQRCxXQUFZLFVBQVU7SUFDbEIsbURBQVEsQ0FBQTtJQUNSLGlEQUFPLENBQUE7SUFDUCx5Q0FBRyxDQUFBO0lBQ0gsMkNBQUksQ0FBQTtJQUNKLGlFQUFlLENBQUE7SUFDZix1Q0FBRSxDQUFBO0FBQ04sQ0FBQyxFQVBXLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBT3JCO0FBR0Q7SUFBMkMsaUNBQVU7SUFpRmpEO1FBQUEsWUFFSSxpQkFBTyxTQU1WO1FBdkZELGFBQU8sR0FBTSxFQUFFLENBQUE7UUFDZixhQUFPLEdBQVUsR0FBRyxDQUFDO1FBeUJyQixXQUFLLEdBQVUsQ0FBQyxDQUFDO1FBR2pCLGtCQUFZLEdBQVUsR0FBRyxDQUFDO1FBRzFCLGtCQUFZLEdBQVcsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUdwRCxrQkFBWSxHQUFVLEtBQUksQ0FBQyxZQUFZLENBQUM7UUFHeEMseUJBQW1CLEdBQVUsS0FBSSxDQUFDLFlBQVksQ0FBQTtRQUc5Qyx5QkFBbUIsR0FBVSxLQUFJLENBQUMsWUFBWSxDQUFDO1FBRy9DLGFBQU8sR0FBVSxDQUFDLENBQUM7UUFHbkIsaUJBQVcsR0FBVyxJQUFJLENBQUM7UUFHM0Isb0JBQWMsR0FBVyxLQUFLLENBQUM7UUFHL0IsMEJBQW9CLEdBQVUsQ0FBQyxDQUFDO1FBQ2hDLGdCQUFVLEdBQVcsQ0FBQyxDQUFDO1FBQ3ZCLGNBQVEsR0FBVSxDQUFDLENBQUM7UUFzQnBCLGtCQUFZLEdBQVUsQ0FBQyxDQUFDO1FBS3BCLEtBQUksQ0FBQyxNQUFNLENBQUMsS0FBSSxDQUFDLFlBQVks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LE9BQU87UUFFVixZQUFZLENBQUMsT0FBTyxDQUFDLFdBQVcsR0FBQyxPQUFPLEVBQUcsR0FBRyxDQUFDLENBQUE7SUFDbkQsQ0FBQztJQW5HRDtRQURDLGtCQUFLLEVBQUU7Z0RBQ1M7SUFHakI7UUFEQyxrQkFBSyxFQUFFO3VEQUNrQjtJQUcxQjtRQURDLGtCQUFLLEVBQUU7dURBQzRDO0lBR3BEO1FBREMsa0JBQUssRUFBRTt1REFDZ0M7SUFHeEM7UUFEQyxrQkFBSyxFQUFFOzhEQUNzQztJQUc5QztRQURDLGtCQUFLLEVBQUU7OERBQ3VDO0lBRy9DO1FBREMsa0JBQUssRUFBRTtrREFDVztJQUduQjtRQURDLGtCQUFLLEVBQUU7c0RBQ21CO0lBRzNCO1FBREMsa0JBQUssRUFBRTt5REFDdUI7SUFHL0I7UUFEQyxrQkFBSyxFQUFFOytEQUN3QjtJQXZEZixhQUFhO1FBRGpDLGVBQUUsQ0FBQyxNQUFNLENBQUM7T0FDVSxhQUFhLENBaUlqQztJQUFELG9CQUFDO0NBaklELEFBaUlDLENBakkwQyxvQkFBVSxHQWlJcEQ7a0JBaklvQixhQUFhO0FBa0l2QixRQUFBLFFBQVEsR0FBaUIsb0JBQVUsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGF0YUNlbnRlciwgeyBkYywgZmllbGQgfSBmcm9tIFwiLi4vLi4vZnJhbWV3b3JrL3BsdWdpbl9ib29zdHMvbWlzYy9EYXRhQ2VudGVyXCI7XG5pbXBvcnQgeyBSIH0gZnJvbSBcIi4vaGV4LWxpbmVzLWdhbWUvUmVzXCI7XG5pbXBvcnQgeyBUb2FzdCB9IGZyb20gXCIuLi8uLi9mcmFtZXdvcmsvcGx1Z2luX2Jvb3N0cy91aS9Ub2FzdE1hbmFnZXJcIjtcbmltcG9ydCBEZXZpY2UgZnJvbSBcIi4uLy4uL2ZyYW1ld29yay9wbHVnaW5fYm9vc3RzL2dhbWVzeXMvRGV2aWNlXCI7XG5cblxuXG5leHBvcnQgZW51bSBDaG9pY2VUeXBlICB7XG4gICAgRGFpbHlHZXQsXG4gICAgTGV2ZWx1cCxcbiAgICBHZXQsXG4gICAgU2hvcCxcbiAgICBCYW5uZXJBZFJlZnJlc2gsXG4gICAgSEIsXG59XG5cbkBkYyhcIkluZm9cIilcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvQ2xhc3MgZXh0ZW5kcyBEYXRhQ2VudGVyXG57XG4gICAgY2hvaWNlczpbXSA9IFtdXG4gICAgdmVyc2lvbjpzdHJpbmcgPSBcIjZcIjtcbiAgICAvLyByZXQ6IDA6ZGlyZWN0bHktZ2V0IDE6c2hhcmUgMjp2aWRlb1xuICAgIGdldENob2ljZShzbG90SWQpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5jaG9pY2VzW3Nsb3RJZF0gfHwgMDtcbiAgICB9XG5cbiAgICBpbml0KClcbiAgICB7XG5cbiAgICB9XG4gICAgb25HZXRDb25maWcoZGF0YSlcbiAgICB7XG4gICAgICAgIGlmKGRhdGEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCByZWNvcmQgPSBkYXRhWzBdXG4gICAgICAgICAgICBpZihyZWNvcmQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5jaG9pY2VzID0gSlNPTi5wYXJzZShyZWNvcmRbdGhpcy52ZXJzaW9uXSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBcbiAgICAgXG4gICAgfVxuXG4gICAgQGZpZWxkKClcbiAgICBsZXZlbDpudW1iZXIgPSAxO1xuXG4gICAgQGZpZWxkKClcbiAgICBzZWxlY3RlZFNraW46c3RyaW5nID0gXCIyXCI7XG5cbiAgICBAZmllbGQoKVxuICAgIGRhaWx5R2V0VGltZTpudW1iZXIgPSAgbmV3IERhdGUoMjAxOCwxLDEpLmdldFRpbWUoKTtcblxuICAgIEBmaWVsZCgpXG4gICAgZnJlZWRyYXdUaW1lOm51bWJlciA9IHRoaXMuZGFpbHlHZXRUaW1lO1xuXG4gICAgQGZpZWxkKClcbiAgICBsdWNreVZpZGVvV2F0Y2hUaW1lOm51bWJlciA9IHRoaXMuZGFpbHlHZXRUaW1lXG5cbiAgICBAZmllbGQoKVxuICAgIHNob3BGcmVlRGlhbW9uZFRpbWU6bnVtYmVyID0gdGhpcy5kYWlseUdldFRpbWU7XG5cbiAgICBAZmllbGQoKVxuICAgIGRpYW1vbmQ6bnVtYmVyID0gMDtcblxuICAgIEBmaWVsZCgpXG4gICAgc2Z4X2VuYWJsZWQ6Ym9vbGVhbiA9IHRydWU7XG5cbiAgICBAZmllbGQoKVxuICAgIGZpcnN0VGltZVJlYWNoOmJvb2xlYW4gPSBmYWxzZTtcblxuICAgIEBmaWVsZCgpXG4gICAgbHVja3lWaWRlb1dhdGNoQ291bnQ6bnVtYmVyID0gMDtcbiAgICB0aW1lUGFzc2VkOiBudW1iZXIgPSAwO1xuICAgIHN0ZXBVc2VkOm51bWJlciA9IDA7XG5cbiAgICBhZGREaWFtb25kKGQsYiA9IHRydWUpXG4gICAge1xuICAgICAgICBpZih0eXBlb2YoZCkgPT0gXCJudW1iZXJcIikgdGhpcy5kaWFtb25kICs9IGQ7XG4gICAgICAgIGVsc2UgdGhpcy5kaWFtb25kICs9IHBhcnNlSW50KGQpO1xuICAgICAgICBpZihiKVxuICAgICAgICB7XG4gICAgICAgICAgICBUb2FzdC5tYWtlKFwi6I635b6X6ZK755+zIHhcIiArIGQpXG4gICAgICAgICAgICBEZXZpY2UucGxheUVmZmVjdChSLmF1ZGlvX2dldF9kaWFtb25kKTtcbiAgICAgICAgfVxuICAgICAgICBpZighdGhpcy5maXJzdFRpbWVSZWFjaClcbiAgICAgICAge1xuICAgICAgICAgICAgaWYodGhpcy5kaWFtb25kID49IDUwMClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBUb2FzdC5tYWtlKFwi5ZOH5Y+v5Lul5Lmw55qu6IKk5LqG77yM5b+r5Y6755qu6IKk5ZWG5bqX55yL55yL5ZCnIVwiLDIpXG4gICAgICAgICAgICAgICAgdGhpcy5maXJzdFRpbWVSZWFjaCA9IHRydWVcbiAgICAgICAgICAgICAgICBVc2VySW5mby5zYXZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjdXJyZW50TGV2ZWw6bnVtYmVyID0gMTtcblxuICAgIGNvbnN0cnVjdG9yKClcbiAgICB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMudW5sb2NrKHRoaXMuc2VsZWN0ZWRTa2luKTtcbiAgICAgICAgc2V0VGltZW91dCgoKT0+e1xuICAgICAgICAgICAgdGhpcy5zYXZlKCk7XG4gICAgICAgIH0sIDYwICogMTAwMClcbiAgICAgICAgLy8gb25leGl0IGdhbWUgPT5zYXZlXG4gICAgfVxuXG4gICAgaXNVbmxvY2soc2tpbl9pZClcbiAgICB7XG4gICAgICAgIGxldCBjYXJVbmxvY2tlZCA9ICBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInVubG9ja2VkX1wiK3NraW5faWQpO1xuICAgICAgICBpZighY2FyVW5sb2NrZWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9ZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICByZXR1cm4gY2FyVW5sb2NrZWQgPT0gXCIxXCJcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlzQWxsVW5sb2NrZWQoKVxuICAgIHtcbiAgICAgICAgbGV0IGMgPSAwO1xuICAgICAgICBmb3IodmFyIGkgPSAwIDtpIDxSLnNraW5Db25maWcuanNvbi5sZW5ndGg7aSsrKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgdiA9IFIuc2tpbkNvbmZpZy5qc29uW2ldXG4gICAgICAgICAgICBpZihVc2VySW5mby5pc1VubG9jayh2LmlkKSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjICsrXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gICBcbiAgICAgICAgcmV0dXJuIGMgPT0gUi5za2luQ29uZmlnLmpzb24ubGVuZ3RoXG4gICAgfVxuXG5cbiAgICBnZXRTa2luQnlJZChpZDogYW55KTogYW55IHtcbiAgICAgICAgbGV0IHJlcyA9IFIuc2tpbkNvbmZpZy5qc29uLmZpbHRlcih2PT57cmV0dXJuIHYuaWQgPT0gaWR9KTtcbiAgICAgICAgcmV0dXJuIHJlc1swXVxuICAgIH1cblxuXG4gICAgdW5sb2NrKHNraW5faWQpXG4gICAge1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInVubG9ja2VkX1wiK3NraW5faWQgLCBcIjFcIilcbiAgICB9XG5cbn1cbmV4cG9ydCB2YXIgVXNlckluZm86VXNlckluZm9DbGFzcyA9IERhdGFDZW50ZXIucmVnaXN0ZXIoVXNlckluZm9DbGFzcykiXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/hex-lines-game/HexonTile.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '64d50rBFZhG5qLba7sOg6x9', 'HexonTile');
// Game/Scripts/hex-lines-game/HexonTile.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Consts_1 = require("./Consts");
var Game_1 = require("./Game");
var Res_1 = require("./Res");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var TileType;
(function (TileType) {
    TileType[TileType["Empty"] = 0] = "Empty";
    TileType[TileType["Type1"] = 1] = "Type1";
    TileType[TileType["Type2"] = 2] = "Type2";
    TileType[TileType["Type3"] = 3] = "Type3";
    TileType[TileType["Type4"] = 4] = "Type4";
    TileType[TileType["Type5"] = 5] = "Type5";
    TileType[TileType["Type6"] = 6] = "Type6";
    TileType[TileType["Type7"] = 7] = "Type7";
})(TileType || (TileType = {}));
var HexonTile = /** @class */ (function (_super) {
    __extends(HexonTile, _super);
    function HexonTile() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._col = 0;
        _this._row = 0;
        _this._animal = 0;
        _this.isChangable = true;
        _this._isConnecting = false;
        _this.connectedTile = null;
        _this.reverseConnectedTile = null;
        _this.targetTile = null;
        _this._sprite = null;
        _this._baseSprite = null;
        _this.animalSprite = null;
        _this._tileType = 0;
        return _this;
        // update (dt) {}
    }
    HexonTile.prototype.get_col = function () {
        return this._col;
    };
    HexonTile.prototype.set_col = function (t) {
        return this._col = t,
            t = this._col - (this._row <= Game_1.default.instance._rowCount / 2 ? Game_1.default.instance.get_minCol() + this._row : Game_1.default.instance.get_minCol() - 1 + Game_1.default.instance._rowCount - this._row) / 2 + .5,
            this._baseSprite.node.x = (Consts_1.default.CenterX + t * Consts_1.default.ColSize),
            this._col;
    };
    HexonTile.prototype.get_row = function () {
        return this._row;
    };
    HexonTile.prototype.set_row = function (t) {
        this._row = t;
        this._baseSprite.node.y = (Consts_1.default.CenterY + (this._row - (Game_1.default.instance._rowCount / 2 | 0)) * Consts_1.default.RowSize);
        return this._row;
    };
    HexonTile.prototype.get_borderPosition = function () {
        return this._baseSprite.node.position;
        // return cc.v2(this._baseSprite.node.x._value, this._baseSprite.node.y._value)
    };
    HexonTile.prototype.get_isConnecting = function () {
        return this._isConnecting;
    };
    HexonTile.prototype.set_isConnecting = function (t) {
        return this._isConnecting = t, this.set_tileType(this._tileType), this._isConnecting;
    };
    HexonTile.prototype.get_animal = function () {
        return this._animal;
    };
    HexonTile.prototype.set_animal = function (t) {
        switch (this._animal = t, t) {
            case 1:
                this.set_tileType(TileType.Type1);
                break;
            case 2:
                this.set_tileType(TileType.Type2);
                break;
            case 3:
                this.set_tileType(TileType.Type3);
                break;
            case 4:
                this.set_tileType(TileType.Type4);
                break;
            case 5:
                this.set_tileType(TileType.Type5);
                break;
            case 6:
                this.set_tileType(TileType.Type6);
                break;
            case 7:
                this.set_tileType(TileType.Type7);
                break;
            default:
                this.set_tileType(TileType.Empty);
        }
        return this._animal;
    };
    HexonTile.prototype.getTileTexture = function (t, e, n) {
        if (t == 0) {
            return Res_1.R.tileTextures[0];
        }
        else {
            // return e ? R.tileTextures[t] : 1 == n ? R.tileTextures[14 + t] : R.tileTextures[7 + t]
            var idx = 0;
            if (e) {
                idx = t;
            }
            else {
                if (n) {
                    idx = 14 + t;
                }
                else {
                    idx = 7 + t;
                }
            }
            return Res_1.R.tileTextures[idx];
        }
    };
    HexonTile.prototype.set_tileType = function (t) {
        this._tileType = t;
        // if (null == this._baseSprite )
        // {
        //     // this._baseSprite = new Y
        //     // this._baseSprite.setAnchor(42, 42)
        //     // this.owner.add(this._baseSprite)
        // }
        // if (null == this._sprite )
        // {
        //     // this._sprite = new J(jn.Instance.getTileTexture(this.get_animal(), !1, !1))
        //     // this.owner.addChild((new g).add(this._sprite))
        // } 
        if (this.isChangable && this.get_isConnecting()) {
            this._baseSprite.spriteFrame = this.getTileTexture(this.get_animal(), true, false);
        }
        else {
            var tailTile = this.getTail();
            var sp = void 0;
            if (!this.isChangable && null != this.reverseConnectedTile) {
                sp = this.getTileTexture(this.get_animal(), false, true);
            }
            else {
                if (null == tailTile || tailTile.isChangable) {
                    sp = this.getTileTexture(this.get_animal(), false, false);
                }
                else {
                    sp = this.getTileTexture(this.get_animal(), false, true);
                }
            }
            this._baseSprite.spriteFrame = sp;
        }
        return this._tileType;
    };
    HexonTile.prototype.onAdded = function () {
        this.set_tileType(TileType.Empty);
    };
    HexonTile.prototype.connect = function (t) {
        null == t ? null != this.connectedTile && (1 == this.connectedTile.isChangable && this.connectedTile.set_animal(0), this.connectedTile.connect(null), this.connectedTile = this.connectedTile.reverseConnectedTile = null) : (this.connectedTile = t, t.set_animal(this.get_animal()), t.reverseConnectedTile = this);
    };
    HexonTile.prototype.getTail = function () {
        for (var t = this.connectedTile, e = null; null != t;)
            e = t, t = t.connectedTile;
        return e;
    };
    HexonTile.prototype.getHead = function () {
        for (var t = this.reverseConnectedTile, e = null; null != t;)
            e = t, t = t.reverseConnectedTile;
        return e;
    };
    HexonTile.prototype.equals = function (t) {
        return null == t ? !1 : this.get_row() == t.get_row() && this.get_col() == t.get_col();
    };
    HexonTile.prototype.start = function () {
    };
    __decorate([
        property({ type: cc.Sprite, visible: true, displayName: "Animal Sprite" })
    ], HexonTile.prototype, "_sprite", void 0);
    __decorate([
        property({ type: cc.Sprite, visible: true, displayName: "Base Sprite" })
    ], HexonTile.prototype, "_baseSprite", void 0);
    HexonTile = __decorate([
        ccclass
    ], HexonTile);
    return HexonTile;
}(cc.Component));
exports.default = HexonTile;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcaGV4LWxpbmVzLWdhbWVcXEhleG9uVGlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsbUNBQThCO0FBQzlCLCtCQUE4QjtBQUM5Qiw2QkFBMEI7QUFFcEIsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFFMUMsSUFBSyxRQVVKO0FBVkQsV0FBSyxRQUFRO0lBRVQseUNBQUssQ0FBQTtJQUNMLHlDQUFLLENBQUE7SUFDTCx5Q0FBSyxDQUFBO0lBQ0wseUNBQUssQ0FBQTtJQUNMLHlDQUFLLENBQUE7SUFDTCx5Q0FBSyxDQUFBO0lBQ0wseUNBQUssQ0FBQTtJQUNMLHlDQUFLLENBQUE7QUFDVCxDQUFDLEVBVkksUUFBUSxLQUFSLFFBQVEsUUFVWjtBQUlEO0lBQXVDLDZCQUFZO0lBQW5EO1FBQUEscUVBa0tDO1FBaktHLFVBQUksR0FBVyxDQUFDLENBQUM7UUFDakIsVUFBSSxHQUFVLENBQUMsQ0FBQztRQUNoQixhQUFPLEdBQVUsQ0FBQyxDQUFDO1FBQ25CLGlCQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ25CLG1CQUFhLEdBQUcsS0FBSyxDQUFDO1FBRXRCLG1CQUFhLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLDBCQUFvQixHQUFHLElBQUksQ0FBQztRQUM1QixnQkFBVSxHQUFHLElBQUksQ0FBQztRQUdsQixhQUFPLEdBQWEsSUFBSSxDQUFDO1FBR3pCLGlCQUFXLEdBQUcsSUFBSSxDQUFDO1FBRW5CLGtCQUFZLEdBQUcsSUFBSSxDQUFDO1FBR3BCLGVBQVMsR0FBRyxDQUFDLENBQUM7O1FBNklkLGlCQUFpQjtJQUNyQixDQUFDO0lBNUlHLDJCQUFPLEdBQVA7UUFDSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUE7SUFDcEIsQ0FBQztJQUNELDJCQUFPLEdBQVAsVUFBUSxDQUFDO1FBQ0wsT0FBTyxJQUFJLENB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QUFDLE9BQU8sRUFBQyxJQUFJLEVBQUMsV0FBVyxFQUFDLGFBQWEsRUFBQyxDQUFDO2tEQUMvQztJQWZGLFNBQVM7UUFEN0IsT0FBTztPQUNhLFNBQVMsQ0FrSzdCO0lBQUQsZ0JBQUM7Q0FsS0QsQUFrS0MsQ0FsS3NDLEVBQUUsQ0FBQyxTQUFTLEdBa0tsRDtrQkFsS29CLFNBQVMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29uc3RzIGZyb20gXCIuL0NvbnN0c1wiO1xuaW1wb3J0IExpbmVHYW1lIGZyb20gXCIuL0dhbWVcIjtcbmltcG9ydCB7IFIgfSBmcm9tIFwiLi9SZXNcIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbmVudW0gVGlsZVR5cGVcbntcbiAgICBFbXB0eSxcbiAgICBUeXBlMSxcbiAgICBUeXBlMixcbiAgICBUeXBlMyxcbiAgICBUeXBlNCxcbiAgICBUeXBlNSxcbiAgICBUeXBlNixcbiAgICBUeXBlN1xufVxuXG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIZXhvblRpbGUgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuICAgIF9jb2w6IG51bWJlciA9IDA7XG4gICAgX3JvdzpudW1iZXIgPSAwO1xuICAgIF9hbmltYWw6bnVtYmVyID0gMDtcbiAgICBpc0NoYW5nYWJsZSA9IHRydWU7XG4gICAgX2lzQ29ubmVjdGluZyA9IGZhbHNlO1xuICAgIFxuICAgIGNvbm5lY3RlZFRpbGUgPSBudWxsO1xuICAgIHJldmVyc2VDb25uZWN0ZWRUaWxlID0gbnVsbDtcbiAgICB0YXJnZXRUaWxlID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eSh7dHlwZTpjYy5TcHJpdGUsdmlzaWJsZTp0cnVlLGRpc3BsYXlOYW1lOlwiQW5pbWFsIFNwcml0ZVwifSlcbiAgICBfc3ByaXRlOmNjLlNwcml0ZSA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoe3R5cGU6Y2MuU3ByaXRlLHZpc2libGU6dHJ1ZSxkaXNwbGF5TmFtZTpcIkJhc2UgU3ByaXRlXCJ9KVxuICAgIF9iYXNlU3ByaXRlID0gbnVsbDtcblxuICAgIGFuaW1hbFNwcml0ZSA9IG51bGw7XG5cblxuICAgIF90aWxlVHlwZSA9IDA7XG5cbiAgICBnZXRfY29sKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY29sXG4gICAgfVxuICAgIHNldF9jb2wodCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY29sID0gdCxcbiAgICAgICAgICAgIHQgPSB0aGlzLl9jb2wgLSAodGhpcy5fcm93IDw9IExpbmVHYW1lLmluc3RhbmNlLl9yb3dDb3VudCAvIDIgPyBMaW5lR2FtZS5pbnN0YW5jZS5nZXRfbWluQ29sKCkgKyB0aGlzLl9yb3c6IExpbmVHYW1lLmluc3RhbmNlLmdldF9taW5Db2woKSAtIDEgKyBMaW5lR2FtZS5pbnN0YW5jZS5fcm93Q291bnQgLSB0aGlzLl9yb3cpIC8gMiArIC41LFxuICAgICAgICAgICAgdGhpcy5fYmFzZVNwcml0ZS5ub2RlLnggPSAoQ29uc3RzLkNlbnRlclggKyB0ICogQ29uc3RzLkNvbFNpemUpLFxuICAgICAgICAgICAgdGhpcy5fY29sXG4gICAgfVxuICAgIGdldF9yb3coKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yb3dcbiAgICB9XG4gICAgc2V0X3Jvdyh0KSB7XG4gICAgICAgIHRoaXMuX3JvdyA9IHRcbiAgICAgICAgdGhpcy5fYmFzZVNwcml0ZS5ub2RlLnkgPSAoQ29uc3RzLkNlbnRlclkgKyAodGhpcy5fcm93IC0gKExpbmVHYW1lLmluc3RhbmNlLl9yb3dDb3VudCAvIDIgfCAwKSkgKiBDb25zdHMuUm93U2l6ZSlcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Jvd1xuICAgIH1cbiAgICBnZXRfYm9yZGVyUG9zaXRpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9iYXNlU3ByaXRlLm5vZGUucG9zaXRpb25cbiAgICAgICAgLy8gcmV0dXJuIGNjLnYyKHRoaXMuX2Jhc2VTcHJpdGUubm9kZS54Ll92YWx1ZSwgdGhpcy5fYmFzZVNwcml0ZS5ub2RlLnkuX3ZhbHVlKVxuICAgIH1cbiAgICBnZXRfaXNDb25uZWN0aW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faXNDb25uZWN0aW5nXG4gICAgfVxuICAgIHNldF9pc0Nvbm5lY3RpbmcodCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faXNDb25uZWN0aW5nID0gdCwgdGhpcy5zZXRfdGlsZVR5cGUodGhpcy5fdGlsZVR5cGUpLCB0aGlzLl9pc0Nvbm5lY3RpbmdcbiAgICB9XG4gICAgZ2V0X2FuaW1hbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FuaW1hbFxuICAgIH1cbiAgICBzZXRfYW5pbWFsKHQpIHtcbiAgICAgICAgc3dpdGNoICh0aGlzLl9hbmltYWwgPSB0LCB0KSB7XG4gICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRfdGlsZVR5cGUoVGlsZVR5cGUuVHlwZTEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgIHRoaXMuc2V0X3RpbGVUeXBlKFRpbGVUeXBlLlR5cGUyKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICB0aGlzLnNldF90aWxlVHlwZShUaWxlVHlwZS5UeXBlMyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRfdGlsZVR5cGUoVGlsZVR5cGUuVHlwZTQpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgICAgIHRoaXMuc2V0X3RpbGVUeXBlKFRpbGVUeXBlLlR5cGU1KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgNjpcbiAgICAgICAgICAgICAgICB0aGlzLnNldF90aWxlVHlwZShUaWxlVHlwZS5UeXBlNik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDc6XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRfdGlsZVR5cGUoVGlsZVR5cGUuVHlwZTcpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aGlzLnNldF90aWxlVHlwZShUaWxlVHlwZS5FbXB0eSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fYW5pbWFsXG4gICAgfVxuICAgIFxuICAgIGdldFRpbGVUZXh0dXJlKHQsIGUsIG4pIHtcbiAgICAgICAgaWYodCA9PSAwIClcbiAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuIFIudGlsZVRleHR1cmVzWzBdXG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgLy8gcmV0dXJuIGUgPyBSLnRpbGVUZXh0dXJlc1t0XSA6IDEgPT0gbiA/IFIudGlsZVRleHR1cmVzWzE0ICsgdF0gOiBSLnRpbGVUZXh0dXJlc1s3ICsgdF1cbiAgICAgICAgICAgIGxldCBpZHggPSAwXG4gICAgICAgICAgICBpZihlKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlkeCA9IHRcbiAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgIGlmIChuKXtcbiAgICAgICAgICAgICAgICAgICAgaWR4ID0gMTQgK3QgXG4gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgIGlkeCA9IDcgKyB0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBSLnRpbGVUZXh0dXJlc1tpZHhdO1xuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICBzZXRfdGlsZVR5cGUodDpudW1iZXIpIHtcbiAgICAgICAgdGhpcy5fdGlsZVR5cGUgPSB0XG4gICAgICAgIC8vIGlmIChudWxsID09IHRoaXMuX2Jhc2VTcHJpdGUgKVxuICAgICAgICAvLyB7XG4gICAgICAgIC8vICAgICAvLyB0aGlzLl9iYXNlU3ByaXRlID0gbmV3IFlcbiAgICAgICAgLy8gICAgIC8vIHRoaXMuX2Jhc2VTcHJpdGUuc2V0QW5jaG9yKDQyLCA0MilcbiAgICAgICAgLy8gICAgIC8vIHRoaXMub3duZXIuYWRkKHRoaXMuX2Jhc2VTcHJpdGUpXG4gICAgICAgIC8vIH1cbiAgICAgICAgLy8gaWYgKG51bGwgPT0gdGhpcy5fc3ByaXRlIClcbiAgICAgICAgLy8ge1xuICAgICAgICAvLyAgICAgLy8gdGhpcy5fc3ByaXRlID0gbmV3IEooam4uSW5zdGFuY2UuZ2V0VGlsZVRleHR1cmUodGhpcy5nZXRfYW5pbWFsKCksICExLCAhMSkpXG4gICAgICAgIC8vICAgICAvLyB0aGlzLm93bmVyLmFkZENoaWxkKChuZXcgZykuYWRkKHRoaXMuX3Nwcml0ZSkpXG4gICAgICAgIC8vIH0gXG4gICAgICAgIGlmICh0aGlzLmlzQ2hhbmdhYmxlICYmIHRoaXMuZ2V0X2lzQ29ubmVjdGluZygpICkgXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2Jhc2VTcHJpdGUuc3ByaXRlRnJhbWUgPSB0aGlzLmdldFRpbGVUZXh0dXJlKHRoaXMuZ2V0X2FuaW1hbCgpLHRydWUsIGZhbHNlKSBcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICBsZXQgdGFpbFRpbGUgPSB0aGlzLmdldFRhaWwoKVxuICAgICAgICAgICAgbGV0IHNwIFxuICAgICAgICAgICAgaWYgKCAhdGhpcy5pc0NoYW5nYWJsZSAmJiBudWxsICE9IHRoaXMucmV2ZXJzZUNvbm5lY3RlZFRpbGUgKSBcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzcCA9IHRoaXMuZ2V0VGlsZVRleHR1cmUodGhpcy5nZXRfYW5pbWFsKCksIGZhbHNlLCB0cnVlKVxuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgaWYoIG51bGwgPT0gdGFpbFRpbGUgfHwgdGFpbFRpbGUuaXNDaGFuZ2FibGUpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzcCA9IHRoaXMuZ2V0VGlsZVRleHR1cmUodGhpcy5nZXRfYW5pbWFsKCksIGZhbHNlLCBmYWxzZSkgXG4gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgIHNwID0gdGhpcy5nZXRUaWxlVGV4dHVyZSh0aGlzLmdldF9hbmltYWwoKSwgZmFsc2UsIHRydWUpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fYmFzZVNwcml0ZS5zcHJpdGVGcmFtZSA9IHNwXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3RpbGVUeXBlO1xuICAgIH1cbiAgICBvbkFkZGVkKCkge1xuICAgICAgICB0aGlzLnNldF90aWxlVHlwZShUaWxlVHlwZS5FbXB0eSlcbiAgICB9XG4gICAgY29ubmVjdCh0KSB7XG4gICAgICAgIG51bGwgPT0gdCA/IG51bGwgIT0gdGhpcy5jb25uZWN0ZWRUaWxlICYmICgxID09IHRoaXMuY29ubmVjdGVkVGlsZS5pc0NoYW5nYWJsZSAmJiB0aGlzLmNvbm5lY3RlZFRpbGUuc2V0X2FuaW1hbCgwKSwgdGhpcy5jb25uZWN0ZWRUaWxlLmNvbm5lY3QobnVsbCksIHRoaXMuY29ubmVjdGVkVGlsZSA9IHRoaXMuY29ubmVjdGVkVGlsZS5yZXZlcnNlQ29ubmVjdGVkVGlsZSA9IG51bGwpIDogKHRoaXMuY29ubmVjdGVkVGlsZSA9IHQsIHQuc2V0X2FuaW1hbCh0aGlzLmdldF9hbmltYWwoKSksIHQucmV2ZXJzZUNvbm5lY3RlZFRpbGUgPSB0aGlzKVxuICAgIH1cbiAgICBnZXRUYWlsKCkge1xuICAgICAgICBmb3IgKHZhciB0ID0gdGhpcy5jb25uZWN0ZWRUaWxlLCBlID0gbnVsbDsgbnVsbCAhPSB0OykgZSA9IHQsIHQgPSB0LmNvbm5lY3RlZFRpbGU7XG4gICAgICAgIHJldHVybiBlXG4gICAgfVxuICAgIGdldEhlYWQoKSB7XG4gICAgICAgIGZvciAodmFyIHQgPSB0aGlzLnJldmVyc2VDb25uZWN0ZWRUaWxlLCBlID0gbnVsbDsgbnVsbCAhPSB0OykgZSA9IHQsIHQgPSB0LnJldmVyc2VDb25uZWN0ZWRUaWxlO1xuICAgICAgICByZXR1cm4gZVxuICAgIH1cbiAgICBlcXVhbHModCkge1xuICAgICAgICByZXR1cm4gbnVsbCA9PSB0ID8gITEgOiB0aGlzLmdldF9yb3coKSA9PSB0LmdldF9yb3coKSAmJiB0aGlzLmdldF9jb2woKSA9PSB0LmdldF9jb2woKVxuICAgIH1cblxuICAgIHN0YXJ0ICgpIHtcblxuICAgIH1cblxuXG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/hex-lines-game/GridManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3b45a0/RCtHwJWRliu8sGTN', 'GridManager');
// Game/Scripts/hex-lines-game/GridManager.ts

Object.defineProperty(exports, "__esModule", { value: true });
var IntMap_1 = require("./ds/IntMap");
var Game_1 = require("./Game");
var Res_1 = require("./Res");
var GridManager = /** @class */ (function (_super) {
    __extends(GridManager, _super);
    function GridManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._minCol = null;
        return _this;
    }
    GridManager.prototype.addGrid = function (t, e, n) {
        null == this._gridList && (this._gridList = new IntMap_1.default);
        if (!this._gridList.exists(t))
            this._gridList.set(t, new IntMap_1.default);
        this._gridList.get(t).set(e, n);
    };
    GridManager.prototype.init = function (t) {
        this._minCol = t;
    };
    GridManager.prototype.start = function () {
        var t = Game_1.default.instance._rowCount;
        var e = Game_1.default.instance._tileList;
        this._gridList = new IntMap_1.default;
        for (var n = 0; t > n;) {
            for (var i = n++, s = 0, a = (t / 2 >= i ? this._minCol + i : this._minCol - 1 + t - i) - 1; a > s;) {
                var r = s++;
                var o = e[i][r].get_borderPosition();
                var b = e[i][r + 1].get_borderPosition();
                var c = cc.v2((o.x + b.x) / 2, (o.y + b.y) / 2);
                var line = cc.instantiate(Res_1.R.Line46);
                line.setPosition(c);
                line.active = false;
                line.parent = this.node;
                line.zIndex = 109;
                this.addGrid(i + i, r + r + 1, line);
            }
        }
        for (n = 0, i = t / 2 | 0; i > n;)
            for (s = n++, a = t / 2 >= s ? this._minCol + s : this._minCol - 1 + t - s, r = 0; a > r;) {
                o = r++;
                for (var m_1 = 0; 2 > m_1; m_1++) {
                    var h = e[s][o].get_borderPosition();
                    var u = e[s + 1][o + m_1].get_borderPosition();
                    h = cc.v2((h.x + u.x) / 2, (h.y + u.y) / 2);
                    var line = null;
                    if (m_1 == 0) {
                        line = cc.instantiate(Res_1.R.Line37);
                    }
                    else {
                        line = cc.instantiate(Res_1.R.Line19);
                    }
                    line.setPosition(h);
                    line.active = false;
                    line.parent = this.node;
                    line.zIndex = 109;
                    this.addGrid(s + s + 1, o + o + m_1, line);
                }
            }
        for (n = 0, i = t / 2 | 0; i > n;)
            for (s = n++, s = t - s - 1, a = t / 2 >= s ? this._minCol + s : this._minCol - 1 + t - s, r = 0; a > r;) {
                o = r++;
                for (var m = 0; 2 > m; m++) {
                    h = e[s][o].get_borderPosition();
                    u = e[s - 1][o + m].get_borderPosition();
                    h = cc.v2((h.x + u.x) / 2, (h.y + u.y) / 2);
                    var line = null;
                    if (m == 0) {
                        line = cc.instantiate(Res_1.R.Line19);
                    }
                    else {
                        line = cc.instantiate(Res_1.R.Line37);
                    }
                    line.setPosition(h);
                    line.active = false;
                    line.zIndex = 109;
                    line.parent = this.node;
                    this.addGrid(s + s - 1, o + o + m, line);
                }
            }
    };
    GridManager.prototype.setState = function (r, c, r1, c1, b) {
        if (this._gridList.exists(r + r1)) {
            var t = this._gridList.get(r + r1);
            if (t.exists(c + c1)) {
                var node = t.get(c + c1);
                node.active = b;
            }
        }
    };
    return GridManager;
}(cc.Component));
exports.default = GridManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/ui/PauseDialog.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '83fb9osUoVEppfk8B6mkJYV', 'PauseDialog');
// Game/Scripts/ui/PauseDialog.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var PauseDialog = /** @class */ (function (_super) {
    __extends(PauseDialog, _super);
    function PauseDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PauseDialog.prototype.onLoad = function () { };
    PauseDialog.prototype.start = function () {
        appGame.banner.playBanner(1);
    };
    PauseDialog.prototype.click_share = function () {
    };
    PauseDialog.prototype.click_home = function () {
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, { title: '游戏界面', content: '点击返回主界面' }, function () { });
        cc.director.loadScene("Main");
    };
    PauseDialog.prototype.click_restart = function () {
        cc.director.loadScene("Game");
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, { title: '返回界面', content: '重新开始' }, function () { });
        if (appGame.gameServerRoom.gameConfigData && appGame.gameServerRoom.gameConfigData.PauseDialogRestart) {
            appGame.videoBanner.playVideoAd(4, 0, function () {
            });
        }
    };
    PauseDialog = __decorate([
        ccclass
    ], PauseDialog);
    return PauseDialog;
}(cc.Component));
exports.default = PauseDialog;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcdWlcXFBhdXNlRGlhbG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFTSxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUF5QywrQkFBWTtJQUFyRDs7SUFpQ0EsQ0FBQztJQS9CRyw0QkFBTSxHQUFOLGNBQVcsQ0FBQztJQUNaLDJCQUFLLEdBQUw7UUFFSSxPQUFPLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBR0QsaUNBQVcsR0FBWDtJQUlBLENBQUM7SUFFRCxnQ0FBVSxHQUFWO1FBRUksU0FBUyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLEVBQUMsRUFBQyxLQUFLLEVBQUMsTUFBTSxFQUFDLE9BQU8sRUFBQyxTQUFTLEVBQUMsRUFBQyxjQUFXLENBQUMsQ0FBQyxDQUFDO1FBQzVGLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQ2pDLENBQUM7SUFHRCxtQ0FBYSxHQUFiO1FBRUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDN0IsU0FBUyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLEVBQUMsRUFBQyxLQUFLLEVBQUMsTUFBTSxFQUFDLE9BQU8sRUFBQyxNQUFNLEVBQUMsRUFBQyxjQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ3pGLElBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxjQUFjLElBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsa0JBQWtCLEVBQUM7WUFDaEcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQztZQUVwQyxDQUFDLENBQUMsQ0FBQTtTQUNMO0lBRUwsQ0FBQztJQWhDZ0IsV0FBVztRQUQvQixPQUFPO09BQ2EsV0FBVyxDQWlDL0I7SUFBRCxrQkFBQztDQWpDRCxBQWlDQyxDQWpDd0MsRUFBRSxDQUFDLFNBQVMsR0FpQ3BEO2tCQWpDb0IsV0FBVyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhdXNlRGlhbG9nIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblxuICAgIG9uTG9hZCAoKSB7fVxuICAgIHN0YXJ0ICgpIHtcblxuICAgICAgICBhcHBHYW1lLmJhbm5lci5wbGF5QmFubmVyKDEpO1xuICAgIH1cblxuXG4gICAgY2xpY2tfc2hhcmUoKVxuICAgIHtcbiAgICBcbiAgICAgICAgXG4gICAgfVxuXG4gICAgY2xpY2tfaG9tZSgpXG4gICAge1xuICAgICAgICBodHRwVXRpbHMuaHR0cFBvc3QoY29uc3RzLkhUVFBfUkVDT1JEX1NFUlZFUix7dGl0bGU6J+a4uOaIj+eVjOmdoicsY29udGVudDon54K55Ye76L+U5Zue5Li755WM6Z2iJ30sZnVuY3Rpb24oKXt9KTtcbiAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiTWFpblwiKVxuICAgIH1cblxuXG4gICAgY2xpY2tfcmVzdGFydCgpXG4gICAge1xuICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJHYW1lXCIpXG4gICAgICAgIGh0dHBVdGlscy5odHRwUG9zdChjb25zdHMuSFRUUF9SRUNPUkRfU0VSVkVSLHt0aXRsZTon6L+U5Zue55WM6Z2iJyxjb250ZW50Oifph43mlrDlvIDlp4snfSxmdW5jdGlvbigpe30pO1xuICAgICAgICBpZihhcHBHYW1lLmdhbWVTZXJ2ZXJSb29tLmdhbWVDb25maWdEYXRhICYmYXBwR2FtZS5nYW1lU2VydmVyUm9vbS5nYW1lQ29uZmlnRGF0YS5QYXVzZURpYWxvZ1Jlc3RhcnQpe1xuICAgICAgICAgICAgYXBwR2FtZS52aWRlb0Jhbm5lci5wbGF5VmlkZW9BZCg0LDAsZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgIFxuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/network/MessageType.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9f654W7umlMeasjS7fKQj29', 'MessageType');
// framework/network/MessageType.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.SocketTag = void 0;
/**
* name
*/
var SocketTag;
(function (SocketTag) {
    SocketTag[SocketTag["KSOCKET_OPEN"] = 0] = "KSOCKET_OPEN";
    SocketTag[SocketTag["KSOCKET_CLOSE"] = 1] = "KSOCKET_CLOSE";
    SocketTag[SocketTag["KSOCKET_MESSAGE"] = 2] = "KSOCKET_MESSAGE";
    SocketTag[SocketTag["KSOCKET_ERROR"] = 3] = "KSOCKET_ERROR";
})(SocketTag = exports.SocketTag || (exports.SocketTag = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZnJhbWV3b3JrXFxuZXR3b3JrXFxNZXNzYWdlVHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztFQUVFO0FBQ0QsSUFBWSxTQUtYO0FBTEQsV0FBWSxTQUFTO0lBQ3BCLHlEQUFZLENBQUE7SUFDWiwyREFBYSxDQUFBO0lBQ2IsK0RBQWUsQ0FBQTtJQUNmLDJEQUFhLENBQUE7QUFDZCxDQUFDLEVBTFcsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFLcEIiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiogbmFtZSBcbiovXG5cdGV4cG9ydCBlbnVtIFNvY2tldFRhZyB7XG5cdFx0S1NPQ0tFVF9PUEVOLFxuXHRcdEtTT0NLRVRfQ0xPU0UsXG5cdFx0S1NPQ0tFVF9NRVNTQUdFLFxuXHRcdEtTT0NLRVRfRVJST1IsXG5cdH1cdCJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/ui/ShopDialog.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1b7cbT64WtHxpoRfvlVr4EN', 'ShopDialog');
// Game/Scripts/ui/ShopDialog.ts

Object.defineProperty(exports, "__esModule", { value: true });
var ShopItemTemplate_1 = require("./ShopItemTemplate");
var SpriteFrameCache_1 = require("../../../framework/plugin_boosts/misc/SpriteFrameCache");
var Res_1 = require("../hex-lines-game/Res");
var Info_1 = require("../Info");
var ToastManager_1 = require("../../../framework/plugin_boosts/ui/ToastManager");
var Device_1 = require("../../../framework/plugin_boosts/gamesys/Device");
var Main_1 = require("../Main");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ShopDialog = /** @class */ (function (_super) {
    __extends(ShopDialog, _super);
    function ShopDialog() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.scrollview = null;
        _this.freeDiamondLabel = null;
        _this.freeDiamondBtn = null;
        return _this;
    }
    ShopDialog.prototype.onLoad = function () {
        // this.scrollview
    };
    ShopDialog.prototype.start = function () {
    };
    ShopDialog.prototype.onShown = function () {
        var _this = this;
        // {"id":"1","mini_img":"a1","img":"a2","cost":"100"},
        this.scrollview.showlist(function (node, data, i) {
            // console.log(i,data);
            var item = node.getComponent(ShopItemTemplate_1.default);
            item.data = data;
            item.diamondLabel.string = data.cost;
            var isLocked = !Info_1.UserInfo.isUnlock(data.id);
            item.btnBuyNode.active = isLocked;
            item.maskNode.active = isLocked;
            item.borderNode.color = cc.Color.WHITE;
            item.titleLabel.string = data.text;
            item.selectedFlag.active = Info_1.UserInfo.selectedSkin == data.id;
            item.btnSignal.add(_this.click_unlock, _this);
            SpriteFrameCache_1.default.instance.getSpriteFrame("Game/Textures/ThumbBgs/" + data.mini_img + ".jpg").then(function (sf) { return item.bgmini.spriteFrame = sf; });
        }, Res_1.R.skinConfig.json);
        // this.refreshBtnStatus();
    };
    ShopDialog.prototype.refreshBtnStatus = function () {
        // if (G.isNextDay(UserInfo.shopFreeDiamondTime)) {
        //     this.freeDiamondLabel.string = "免费得50"
        //     UIFunctions.setButtonEnabled(this.freeDiamondBtn, true)
        // } else {
        //     this.freeDiamondLabel.string = "已领取"
        //     UIFunctions.setButtonEnabled(this.freeDiamondBtn, false)
        // }
    };
    ShopDialog.prototype.click_close = function () {
    };
    ShopDialog.prototype.share_succ = function () {
        Info_1.UserInfo.addDiamond(50);
        Info_1.UserInfo.shopFreeDiamondTime = new Date().getTime();
        Info_1.UserInfo.save();
        this.refreshBtnStatus();
    };
    ShopDialog.prototype.click_free = function () {
        var choice = Info_1.UserInfo.getChoice(Info_1.ChoiceType.Shop);
        if (choice == 1) {
        }
        else if (choice == 0) {
            this.share_succ();
        }
        else {
            //video
        }
    };
    ShopDialog.prototype.selectBg = function (data) {
        Info_1.UserInfo.selectedSkin = data.id;
        Info_1.UserInfo.save();
        this.onShown();
    };
    ShopDialog.prototype.click_unlock = function (data) {
        if (Info_1.UserInfo.isUnlock(data.id)) {
            //select 
            this.selectBg(data);
            ToastManager_1.Toast.make("已选择 " + data.text);
            return;
        }
        if (Info_1.UserInfo.diamond >= data.cost) {
            Info_1.UserInfo.diamond -= data.cost;
            Info_1.UserInfo.unlock(data.id);
            this.selectBg(data);
            ToastManager_1.Toast.make(cc.js.formatStr("%s已解锁", data.text));
            Device_1.default.playEffect(Res_1.R.audio_unlock);
            if (Main_1.default.instance)
                Main_1.default.instance.refreshRedpoints();
        }
        else {
            ToastManager_1.Toast.make("钻石不足");
            Device_1.default.playEffect(Res_1.R.audio_invalid);
        }
    };
    __decorate([
        property(cc.ScrollView)
    ], ShopDialog.prototype, "scrollview", void 0);
    __decorate([
        property(cc.Label)
    ], ShopDialog.prototype, "freeDiamondLabel", void 0);
    __decorate([
        property(cc.Button)
    ], ShopDialog.prototype, "freeDiamondBtn", void 0);
    ShopDialog = __decorate([
        ccclass
    ], ShopDialog);
    return ShopDialog;
}(cc.Component));
exports.default = ShopDialog;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/ui/ShopItemTemplate.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0b667/xvIZJapTB+ZTBqkHL', 'ShopItemTemplate');
// Game/Scripts/ui/ShopItemTemplate.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Signal_1 = require("../../../framework/plugin_boosts/misc/Signal");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ShopItemTemplate = /** @class */ (function (_super) {
    __extends(ShopItemTemplate, _super);
    function ShopItemTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.titleLabel = null;
        _this.selectedFlag = null;
        _this.bgmini = null;
        _this.btnBuyNode = null;
        _this.maskNode = null;
        _this.borderNode = null;
        _this.diamondLabel = null;
        _this.btnSignal = new Signal_1.default();
        _this.data = null;
        return _this;
    }
    ShopItemTemplate.prototype.onLoad = function () { };
    ShopItemTemplate.prototype.start = function () { };
    ShopItemTemplate.prototype.click_unlock = function () {
        this.btnSignal.fire(this.data);
    };
    __decorate([
        property(cc.Label)
    ], ShopItemTemplate.prototype, "titleLabel", void 0);
    __decorate([
        property(cc.Node)
    ], ShopItemTemplate.prototype, "selectedFlag", void 0);
    __decorate([
        property(cc.Sprite)
    ], ShopItemTemplate.prototype, "bgmini", void 0);
    __decorate([
        property(cc.Node)
    ], ShopItemTemplate.prototype, "btnBuyNode", void 0);
    __decorate([
        property(cc.Node)
    ], ShopItemTemplate.prototype, "maskNode", void 0);
    __decorate([
        property(cc.Node)
    ], ShopItemTemplate.prototype, "borderNode", void 0);
    __decorate([
        property(cc.Label)
    ], ShopItemTemplate.prototype, "diamondLabel", void 0);
    ShopItemTemplate = __decorate([
        ccclass
    ], ShopItemTemplate);
    return ShopItemTemplate;
}(cc.Component));
exports.default = ShopItemTemplate;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcdWlcXFNob3BJdGVtVGVtcGxhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHVFQUFrRTtBQUU1RCxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUE4QyxvQ0FBWTtJQUExRDtRQUFBLHFFQWtDQztRQTNCRyxnQkFBVSxHQUFZLElBQUksQ0FBQztRQUczQixrQkFBWSxHQUFXLElBQUksQ0FBQztRQUc1QixZQUFNLEdBQWEsSUFBSSxDQUFDO1FBRXhCLGdCQUFVLEdBQVcsSUFBSSxDQUFDO1FBRzFCLGNBQVEsR0FBVyxJQUFJLENBQUM7UUFHeEIsZ0JBQVUsR0FBVyxJQUFJLENBQUM7UUFHMUIsa0JBQVksR0FBWSxJQUFJLENBQUM7UUFFN0IsZUFBUyxHQUFVLElBQUksZ0JBQU0sRUFBRSxDQUFDO1FBRWhDLFVBQUksR0FBTyxJQUFJLENBQUM7O0lBTXBCLENBQUM7SUFoQ0csaUNBQU0sR0FBTixjQUFXLENBQUM7SUFDWixnQ0FBSyxHQUFMLGNBQVUsQ0FBQztJQTJCWCx1Q0FBWSxHQUFaO1FBRUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUExQkQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzt3REFDUTtJQUczQjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDOzBEQUNVO0lBRzVCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7b0RBQ0k7SUFFeEI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzt3REFDUTtJQUcxQjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO3NEQUNNO0lBR3hCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7d0RBQ1E7SUFHMUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzswREFDVTtJQXhCWixnQkFBZ0I7UUFEcEMsT0FBTztPQUNhLGdCQUFnQixDQWtDcEM7SUFBRCx1QkFBQztDQWxDRCxBQWtDQyxDQWxDNkMsRUFBRSxDQUFDLFNBQVMsR0FrQ3pEO2tCQWxDb0IsZ0JBQWdCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNpZ25hbCBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL3BsdWdpbl9ib29zdHMvbWlzYy9TaWduYWxcIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTaG9wSXRlbVRlbXBsYXRlIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblxuICAgIG9uTG9hZCAoKSB7fVxuICAgIHN0YXJ0ICgpIHt9XG5cblxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcbiAgICB0aXRsZUxhYmVsOmNjLkxhYmVsID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxuICAgIHNlbGVjdGVkRmxhZzpjYy5Ob2RlID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5TcHJpdGUpXG4gICAgYmdtaW5pOmNjLlNwcml0ZSA9IG51bGw7XG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXG4gICAgYnRuQnV5Tm9kZTpjYy5Ob2RlID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxuICAgIG1hc2tOb2RlOmNjLk5vZGUgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXG4gICAgYm9yZGVyTm9kZTpjYy5Ob2RlID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcbiAgICBkaWFtb25kTGFiZWw6Y2MuTGFiZWwgPSBudWxsO1xuXG4gICAgYnRuU2lnbmFsOlNpZ25hbCA9IG5ldyBTaWduYWwoKTtcblxuICAgIGRhdGE6YW55ID0gbnVsbDtcbiAgICBcbiAgICBjbGlja191bmxvY2soKVxuICAgIHtcbiAgICAgICAgdGhpcy5idG5TaWduYWwuZmlyZSh0aGlzLmRhdGEpO1xuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/ui/LuckyDialog.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a94275+JmtMx6iZb18iwKTe', 'LuckyDialog');
// Game/Scripts/ui/LuckyDialog.ts

Object.defineProperty(exports, "__esModule", { value: true });
var ToastManager_1 = require("../../../framework/plugin_boosts/ui/ToastManager");
var ViewManager_1 = require("../../../framework/plugin_boosts/ui/ViewManager");
var View_1 = require("../../../framework/plugin_boosts/ui/View");
var Info_1 = require("../Info");
var Device_1 = require("../../../framework/plugin_boosts/gamesys/Device");
var Res_1 = require("../hex-lines-game/Res");
var UIFunctions_1 = require("../../../framework/plugin_boosts/ui/UIFunctions");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LuckyDialog = /** @class */ (function (_super) {
    __extends(LuckyDialog, _super);
    function LuckyDialog() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._canRotate = true;
        _this.sprites = [];
        _this.labels = [];
        _this.btn_freedraw = null;
        _this.btn_videodraw = null;
        _this.freedrawTip = null;
        _this.drawLabel = null;
        // click_draw()
        // {
        // }
        _this.pool = [];
        _this.isGreaterDate = function (now, before) {
            var diff = now.getTime() - before.getTime();
            if (diff > 86400000) // 24*60*60*1000
             {
                return true;
            }
            else {
                if (diff > 0)
                    return now.getDate() != before.getDate();
                else
                    return false;
            }
        };
        return _this;
    }
    LuckyDialog_1 = LuckyDialog;
    LuckyDialog.prototype.start = function () { };
    LuckyDialog.prototype.share_succ = function () {
        this.startDraw();
        Info_1.UserInfo.freedrawTime = new Date().getTime();
        Info_1.UserInfo.save();
        //  Main.instance.refreshRedpoints()
        this.onShown();
    };
    LuckyDialog.prototype.click_freeedraw = function () {
        // if (g.isNextDay(UserInfo.freedrawTime))
        // {
        //     this.share_succ()
        // }
    };
    LuckyDialog.prototype.onLoad = function () {
        for (var i = 0; i < Res_1.R.luckyConfig.json.length; i++) {
            var cfg = Res_1.R.luckyConfig.json[i];
            var chance = parseFloat(cfg.chance);
            for (var j = 0; j < chance * 2; j++) {
                this.pool.push(i);
            }
        }
        this.pool.shuffle();
        console.log(this.pool);
    };
    LuckyDialog.prototype.startDraw = function () {
        var id = g.getRandomInArray(this.pool);
        this.startWheel(id);
        Device_1.default.playEffect(Res_1.R.audio_draw);
    };
    LuckyDialog.prototype.isNextDay = function (timeSec) {
        return this.isGreaterDate(new Date(), new Date(timeSec));
    };
    // 5次
    LuckyDialog.prototype.click_videodraw = function () {
        if (Info_1.UserInfo.luckyVideoWatchCount >= LuckyDialog_1.MaxVideoCount) {
            if (this.isNextDay(Info_1.UserInfo.luckyVideoWatchTime)) {
                Info_1.UserInfo.luckyVideoWatchCount = 0;
                Info_1.UserInfo.luckyVideoWatchTime = new Date().getTime();
            }
            else {
                return;
            }
        }
        else {
        }
    };
    LuckyDialog.prototype.calculateAngle = function (index) {
        var angle = -(index - 1) * 60 - 30 - 4 * 360 - this.wheelSp.node.rotation % 360;
        return angle;
    };
    LuckyDialog.prototype.onShown = function () {
        if (Info_1.UserInfo.luckyVideoWatchCount >= LuckyDialog_1.MaxVideoCount) {
            this.drawLabel.string = "已用完";
            UIFunctions_1.default.setButtonEnabled(this.btn_videodraw, false);
        }
        else {
            this.drawLabel.string = "看视频抽奖";
            UIFunctions_1.default.setButtonEnabled(this.btn_videodraw, true);
        }
        if (g.isGreaterDate(new Date(), new Date(Info_1.UserInfo.freedrawTime))) {
            //free draw 
            this.btn_freedraw.interactable = true;
            this.btn_freedraw.node.opacity = 255;
            this.freedrawTip.active = false;
        }
        else {
            this.btn_freedraw.interactable = false;
            this.btn_freedraw.node.opacity = 100;
            this.freedrawTip.active = true;
        }
        for (var i = 0; i < Res_1.R.luckyConfig.json.length; i++) {
            var cfg = Res_1.R.luckyConfig.json[i];
            this.labels[i].string = cfg.gold_reward + "";
        }
    };
    LuckyDialog.prototype.startWheel = function (id) {
        console.log("target wheel:", id);
        var angle = this.calculateAngle(id);
        if (!this._canRotate) {
            ToastManager_1.Toast.make('正在给您挑选奖品...');
            return;
        }
        this._canRotate = false;
        var stage3 = cc.rotateBy(Math.abs(angle / 400), angle);
        var callFunc = cc.callFunc(function () {
            this._canRotate = true;
            this.showRes(id);
        }.bind(this));
        var sequence = cc.sequence(stage3, callFunc);
        this.wheelSp.node.runAction(sequence.easing(cc.easeQuadraticActionInOut()));
    };
    LuckyDialog.prototype.showRes = function (id) {
        var cfg = Res_1.R.luckyConfig.json[id];
        var gold = !isNaN((Number(cfg.gold_reward)));
        if (gold) {
            this.getComponent(View_1.default).hide();
            ViewManager_1.default.instance.show("Game/GetDialog", cfg.gold_reward);
        }
        else {
            //神秘
            ToastManager_1.Toast.make("恭喜你抽中了 " + cfg.gold_reward);
            Info_1.UserInfo.unlock(g.randomInt(0, 6));
            // Device.playEffect(R.audio_unlock);
        }
    };
    LuckyDialog.prototype.update = function (dt) {
    };
    LuckyDialog.prototype.click_close = function () {
        if (!this._canRotate) {
            ToastManager_1.Toast.make('正在给您挑选奖品...');
            return;
        }
        this.getComponent(View_1.default).hide();
    };
    var LuckyDialog_1;
    LuckyDialog.MaxVideoCount = 5;
    __decorate([
        property(cc.Sprite)
    ], LuckyDialog.prototype, "wheelSp", void 0);
    __decorate([
        property([cc.Sprite])
    ], LuckyDialog.prototype, "sprites", void 0);
    __decorate([
        property([cc.Label])
    ], LuckyDialog.prototype, "labels", void 0);
    __decorate([
        property(cc.Button)
    ], LuckyDialog.prototype, "btn_freedraw", void 0);
    __decorate([
        property(cc.Button)
    ], LuckyDialog.prototype, "btn_videodraw", void 0);
    __decorate([
        property(cc.Node)
    ], LuckyDialog.prototype, "freedrawTip", void 0);
    __decorate([
        property(cc.Label)
    ], LuckyDialog.prototype, "drawLabel", void 0);
    LuckyDialog = LuckyDialog_1 = __decorate([
        ccclass
    ], LuckyDialog);
    return LuckyDialog;
}(cc.Component));
exports.default = LuckyDialog;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/ui/LevelupDialog.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '192e1nHc39B4b1vo/mjTFG2', 'LevelupDialog');
// Game/Scripts/ui/LevelupDialog.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Info_1 = require("../Info");
var View_1 = require("../../../framework/plugin_boosts/ui/View");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LevelupDialog = /** @class */ (function (_super) {
    __extends(LevelupDialog, _super);
    function LevelupDialog() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.diamondLabel = null;
        _this.btnLabel = null;
        _this.tipLabel = null;
        _this.levelLabel = null;
        _this.mult = 1;
        _this.baseDiamond = 0;
        return _this;
    }
    LevelupDialog.prototype.onLoad = function () { };
    LevelupDialog.prototype.start = function () { };
    LevelupDialog.prototype.onShown = function (level, p) {
        //给钻石
        p = Math.min(p, 1);
        var diamond = Math.floor(Math.max(30 * p, 10));
        this.baseDiamond = diamond;
        this.diamondLabel.string = diamond.toString();
        this.levelLabel.string = cc.js.formatStr("- 第 %s 关 - ", level);
        // if(Math.random() > 0.7)
        // {
        //     this.mult = g.randomInt(3,6)
        //     this.btnLabel.string = this.mult +"倍领取"
        // }else{
        //     this.btnLabel.string = "双倍领取"
        //     this.mult = 2
        // }
        //this.tipLabel.string ="恭喜获得" + this.btnLabel.string +"奖励机会"
    };
    LevelupDialog.prototype.click_get = function () {
        Info_1.UserInfo.addDiamond(this.baseDiamond);
        Info_1.UserInfo.save();
        this.getComponent(View_1.default).hide();
    };
    LevelupDialog.prototype.share_suc = function () {
        Info_1.UserInfo.addDiamond(this.baseDiamond * this.mult);
        Info_1.UserInfo.save();
        this.getComponent(View_1.default).hide();
    };
    LevelupDialog.prototype.click_getex = function () {
        var choise = Info_1.UserInfo.getChoice(Info_1.ChoiceType.Levelup);
    };
    __decorate([
        property(cc.Label)
    ], LevelupDialog.prototype, "diamondLabel", void 0);
    __decorate([
        property(cc.Label)
    ], LevelupDialog.prototype, "btnLabel", void 0);
    __decorate([
        property(cc.Label)
    ], LevelupDialog.prototype, "tipLabel", void 0);
    __decorate([
        property(cc.Label)
    ], LevelupDialog.prototype, "levelLabel", void 0);
    LevelupDialog = __decorate([
        ccclass
    ], LevelupDialog);
    return LevelupDialog;
}(cc.Component));
exports.default = LevelupDialog;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcdWlcXExldmVsdXBEaWFsb2cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGdDQUErQztBQUMvQyxpRUFBNEQ7QUFHdEQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBMkMsaUNBQVk7SUFBdkQ7UUFBQSxxRUE2REM7UUExREcsa0JBQVksR0FBWSxJQUFJLENBQUM7UUFJN0IsY0FBUSxHQUFZLElBQUksQ0FBQztRQUd6QixjQUFRLEdBQVksSUFBSSxDQUFDO1FBR3pCLGdCQUFVLEdBQVksSUFBSSxDQUFDO1FBRTNCLFVBQUksR0FBVSxDQUFDLENBQUM7UUFFaEIsaUJBQVcsR0FBVSxDQUFDLENBQUM7O0lBNEMzQixDQUFDO0lBMUNHLDhCQUFNLEdBQU4sY0FBVyxDQUFDO0lBQ1osNkJBQUssR0FBTCxjQUFVLENBQUM7SUFDWCwrQkFBTyxHQUFQLFVBQVEsS0FBSyxFQUFDLENBQUM7UUFFWCxLQUFLO1FBQ0wsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xCLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxFQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUE7UUFDN0MsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUM7UUFDM0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzlDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLGFBQWEsRUFBQyxLQUFLLENBQUMsQ0FBQTtRQUU3RCwwQkFBMEI7UUFDMUIsSUFBSTtRQUNKLG1DQUFtQztRQUNuQyw4Q0FBOEM7UUFDOUMsU0FBUztRQUNULG9DQUFvQztRQUNwQyxvQkFBb0I7UUFDcEIsSUFBSTtRQUNKLDZEQUE2RDtJQUNqRSxDQUFDO0lBRUQsaUNBQVMsR0FBVDtRQUVJLGVBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3RDLGVBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsWUFBWSxDQUFDLGNBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFBO0lBQ2xDLENBQUM7SUFFRCxpQ0FBUyxHQUFUO1FBRUksZUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoRCxlQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQTtJQUNsQyxDQUFDO0lBRUQsbUNBQVcsR0FBWDtRQUVJLElBQUksTUFBTSxHQUFHLGVBQVEsQ0FBQyxTQUFTLENBQUMsaUJBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUd4RCxDQUFDO0lBekREO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7dURBQ1U7SUFJN0I7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzttREFDTTtJQUd6QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDO21EQUNNO0lBR3pCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7cURBQ1E7SUFiVixhQUFhO1FBRGpDLE9BQU87T0FDYSxhQUFhLENBNkRqQztJQUFELG9CQUFDO0NBN0RELEFBNkRDLENBN0QwQyxFQUFFLENBQUMsU0FBUyxHQTZEdEQ7a0JBN0RvQixhQUFhIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXNlckluZm8sIENob2ljZVR5cGUgfSBmcm9tIFwiLi4vSW5mb1wiO1xuaW1wb3J0IFZpZXcgZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9wbHVnaW5fYm9vc3RzL3VpL1ZpZXdcIjtcblxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExldmVsdXBEaWFsb2cgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxuICAgIGRpYW1vbmRMYWJlbDpjYy5MYWJlbCA9IG51bGw7XG5cblxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcbiAgICBidG5MYWJlbDpjYy5MYWJlbCA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoY2MuTGFiZWwpXG4gICAgdGlwTGFiZWw6Y2MuTGFiZWwgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxuICAgIGxldmVsTGFiZWw6Y2MuTGFiZWwgPSBudWxsO1xuXG4gICAgbXVsdDpudW1iZXIgPSAxO1xuXG4gICAgYmFzZURpYW1vbmQ6bnVtYmVyID0gMDtcblxuICAgIG9uTG9hZCAoKSB7fVxuICAgIHN0YXJ0ICgpIHt9XG4gICAgb25TaG93bihsZXZlbCxwKVxuICAgIHtcbiAgICAgICAgLy/nu5npkrvnn7NcbiAgICAgICAgcCA9IE1hdGgubWluKHAsMSk7XG4gICAgICAgIGxldCBkaWFtb25kID0gTWF0aC5mbG9vcihNYXRoLm1heCgzMCAqIHAsMTApKVxuICAgICAgICB0aGlzLmJhc2VEaWFtb25kID0gZGlhbW9uZDtcbiAgICAgICAgdGhpcy5kaWFtb25kTGFiZWwuc3RyaW5nID0gZGlhbW9uZC50b1N0cmluZygpO1xuICAgICAgICB0aGlzLmxldmVsTGFiZWwuc3RyaW5nID0gY2MuanMuZm9ybWF0U3RyKFwiLSDnrKwgJXMg5YWzIC0gXCIsbGV2ZWwpXG5cbiAgICAgICAgLy8gaWYoTWF0aC5yYW5kb20oKSA+IDAuNylcbiAgICAgICAgLy8ge1xuICAgICAgICAvLyAgICAgdGhpcy5tdWx0ID0gZy5yYW5kb21JbnQoMyw2KVxuICAgICAgICAvLyAgICAgdGhpcy5idG5MYWJlbC5zdHJpbmcgPSB0aGlzLm11bHQgK1wi5YCN6aKG5Y+WXCJcbiAgICAgICAgLy8gfWVsc2V7XG4gICAgICAgIC8vICAgICB0aGlzLmJ0bkxhYmVsLnN0cmluZyA9IFwi5Y+M5YCN6aKG5Y+WXCJcbiAgICAgICAgLy8gICAgIHRoaXMubXVsdCA9IDJcbiAgICAgICAgLy8gfVxuICAgICAgICAvL3RoaXMudGlwTGFiZWwuc3RyaW5nID1cIuaBreWWnOiOt+W+l1wiICsgdGhpcy5idG5MYWJlbC5zdHJpbmcgK1wi5aWW5Yqx5py65LyaXCJcbiAgICB9XG5cbiAgICBjbGlja19nZXQoKVxuICAgIHtcbiAgICAgICAgVXNlckluZm8uYWRkRGlhbW9uZCh0aGlzLmJhc2VEaWFtb25kKTtcbiAgICAgICAgVXNlckluZm8uc2F2ZSgpO1xuICAgICAgICB0aGlzLmdldENvbXBvbmVudChWaWV3KS5oaWRlKClcbiAgICB9XG5cbiAgICBzaGFyZV9zdWMoKVxuICAgIHtcbiAgICAgICAgVXNlckluZm8uYWRkRGlhbW9uZCh0aGlzLmJhc2VEaWFtb25kKnRoaXMubXVsdCk7XG4gICAgICAgIFVzZXJJbmZvLnNhdmUoKTtcbiAgICAgICAgdGhpcy5nZXRDb21wb25lbnQoVmlldykuaGlkZSgpXG4gICAgfVxuXG4gICAgY2xpY2tfZ2V0ZXgoKVxuICAgIHtcbiAgICAgICAgbGV0IGNob2lzZSA9IFVzZXJJbmZvLmdldENob2ljZShDaG9pY2VUeXBlLkxldmVsdXApO1xuXG4gICAgICAgIFxuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/ui/WinDialog.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7d78f0lU+VOW7rncsSfgC5s', 'WinDialog');
// Game/Scripts/ui/WinDialog.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Info_1 = require("../Info");
var ViewManager_1 = require("../../../framework/plugin_boosts/ui/ViewManager");
var Consts_1 = require("../hex-lines-game/Consts");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var WinDialog = /** @class */ (function (_super) {
    __extends(WinDialog, _super);
    function WinDialog() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ps = null;
        _this.levelLabel = null;
        _this.screenShareAuto = null;
        return _this;
    }
    WinDialog.prototype.onLoad = function () { };
    WinDialog.prototype.start = function () { };
    WinDialog.prototype.decreaseFomula = function (max, min, t, d) {
        return max - (t / (t + d) * (max - min));
    };
    ;
    WinDialog.prototype.onShown = function () {
        this.screenShareAuto.active = false;
        if (appGame.platform == "toutiao") {
            appGame.screenAuto.playScreenCap(false);
            this.screenShareAuto.active = true;
        }
        this.ps.resetSystem();
        this.levelLabel.string = cc.js.formatStr("关卡 " + Info_1.UserInfo.currentLevel);
        var p = this.decreaseFomula(0.99, 0.3, Info_1.UserInfo.timePassed + Info_1.UserInfo.stepUsed, Info_1.UserInfo.currentLevel + 50);
        if (Info_1.UserInfo.level == Info_1.UserInfo.currentLevel) {
            var lv = Info_1.UserInfo.level;
            var choise_1 = Info_1.UserInfo.getChoice(Info_1.ChoiceType.Levelup);
            // if(choise > 0 && Math.random() > 0.5 && lv >= 3)
            // {
            //     this.scheduleOnce(_=>{
            //         ViewManager.instance.show("Game/LevelupDialog",lv,p)
            //     },1)
            // }else{
            //     p = Math.min(p,1);
            //     let diamond = Math.floor(Math.max(30 * p,10))
            //     UserInfo.addDiamond(diamond);
            // }
            Info_1.UserInfo.level = lv + 1;
            Info_1.UserInfo.save();
        }
        var choise = Info_1.UserInfo.getChoice(Info_1.ChoiceType.HB);
        if (choise == 1) {
            if (Info_1.UserInfo.level >= 3) {
                if (!Info_1.UserInfo.isUnlock(Consts_1.default.FreeSkinId)) {
                    ViewManager_1.default.instance.show("Game/HbDialog");
                }
            }
        }
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, { title: '结算界面', content: '第' + Info_1.UserInfo.level + "关" }, function () { });
        appGame.banner.playBanner(1);
    };
    WinDialog.prototype.click_rank = function () {
        ViewManager_1.default.instance.show("wechat/WxRankDialog");
    };
    //修改成开始当前游戏
    WinDialog.prototype.click_shop = function () {
        cc.director.loadScene("Game");
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, { title: '结算界面', content: '点击重玩' }, function () { });
        if (appGame.gameServerRoom.gameConfigData && appGame.gameServerRoom.gameConfigData.winAgain) {
            appGame.videoBanner.playVideoAd(3, 0, function () {
                //  UserInfo.currentLevel = UserInfo.currentLevel ;
            });
        }
        //ViewManager.instance.show("Game/ShopDialog");
    };
    WinDialog.prototype.click_next = function () {
        var btn3 = this.node.getChildByName("btn3").getComponent(cc.Button);
        btn3.enabled = false;
        this.scheduleOnce(function () {
            btn3.enabled = true;
        }.bind(this), 2);
        Info_1.UserInfo.currentLevel = Info_1.UserInfo.currentLevel + 1;
        cc.director.loadScene("Game");
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, { title: '结算界面', content: '点击下一关' }, function () { });
        if (appGame.gameServerRoom.gameConfigData && appGame.gameServerRoom.gameConfigData.winNextLevel) {
            appGame.videoBanner.playVideoAd(2, 0, function () {
                cc.log("win1");
                btn3.enabled = true;
            }.bind(this));
        }
    };
    WinDialog.prototype.click_home = function () {
        cc.director.loadScene("Main");
    };
    WinDialog.prototype.click_share = function () {
    };
    __decorate([
        property(cc.ParticleSystem)
    ], WinDialog.prototype, "ps", void 0);
    __decorate([
        property(cc.Label)
    ], WinDialog.prototype, "levelLabel", void 0);
    __decorate([
        property(cc.Node)
    ], WinDialog.prototype, "screenShareAuto", void 0);
    WinDialog = __decorate([
        ccclass
    ], WinDialog);
    return WinDialog;
}(cc.Component));
exports.default = WinDialog;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/ui/LevelDialog.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4c94fc8PDtI1o3JM9m3WRKN', 'LevelDialog');
// Game/Scripts/ui/LevelDialog.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Info_1 = require("../Info");
var LevelSelector_1 = require("../../../framework/plugin_boosts/ui/game/LevelSelector");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LevelDialog = /** @class */ (function (_super) {
    __extends(LevelDialog, _super);
    function LevelDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LevelDialog.prototype.onLoad = function () { };
    LevelDialog.prototype.start = function () { };
    LevelDialog.prototype.onShown = function () {
        this.selector.currentLevel = Info_1.UserInfo.level;
        this.selector.refresh();
        this.scheduleOnce(this.refreshLevels, 0.1);
        appGame.banner.playBanner(1);
    };
    LevelDialog.prototype.refreshLevels = function () {
        this.selector.scrollToCurrentLevel();
    };
    LevelDialog.prototype.select_level = function (lvnode) {
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, { title: '选择关卡界面', content: '点击关卡' + lvnode.name }, function () { });
        this.gotoLevel(lvnode.name);
    };
    LevelDialog.prototype.refreshLevelItem = function (data) {
    };
    LevelDialog.prototype.gotoLevel = function (lv) {
        lv = parseInt(lv);
        console.log("enter level", lv);
        Info_1.UserInfo.currentLevel = lv;
        cc.director.loadScene("Game");
    };
    LevelDialog.prototype.click_continue = function () {
        this.gotoLevel(Info_1.UserInfo.level);
        httpUtils.httpPost(consts.HTTP_RECORD_SERVER, { title: '选择关卡界面', content: '点击继续游戏' }, function () { });
        if (appGame.gameServerRoom.gameConfigData && appGame.gameServerRoom.gameConfigData.LevelDialogContinue) {
            appGame.videoBanner.playVideoAd(1, 0, function () {
            }.bind(this));
        }
    };
    __decorate([
        property(LevelSelector_1.default)
    ], LevelDialog.prototype, "selector", void 0);
    LevelDialog = __decorate([
        ccclass
    ], LevelDialog);
    return LevelDialog;
}(cc.Component));
exports.default = LevelDialog;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcdWlcXExldmVsRGlhbG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxnQ0FBbUM7QUFDbkMsd0ZBQW1GO0FBRzdFLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXlDLCtCQUFZO0lBQXJEOztJQWtEQSxDQUFDO0lBaERHLDRCQUFNLEdBQU4sY0FBVyxDQUFDO0lBQ1osMkJBQUssR0FBTCxjQUFVLENBQUM7SUFJWCw2QkFBTyxHQUFQO1FBRUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEdBQUcsZUFBUSxDQUFDLEtBQUssQ0FBQztRQUM1QyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFBO1FBRXZCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxHQUFHLENBQUMsQ0FBQTtRQUMxQyxPQUFPLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQsbUNBQWEsR0FBYjtRQUVJLElBQUksQ0FBQyxRQUFRLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztJQUN6QyxDQUFDO0lBRUQsa0NBQVksR0FBWixVQUFhLE1BQU07UUFFZixTQUFTLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsRUFBQyxFQUFDLEtBQUssRUFBQyxRQUFRLEVBQUMsT0FBTyxFQUFDLE1BQU0sR0FBQyxNQUFNLENBQUMsSUFBSSxFQUFDLEVBQUMsY0FBVyxDQUFDLENBQUMsQ0FBQztRQUN2RyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUMvQixDQUFDO0lBRUQsc0NBQWdCLEdBQWhCLFVBQWlCLElBQUk7SUFFckIsQ0FBQztJQUVELCtCQUFTLEdBQVQsVUFBVSxFQUFFO1FBRVIsRUFBRSxHQUFJLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBSSxFQUFFLENBQUMsQ0FBQztRQUNqQyxlQUFRLENBQUMsWUFBWSxHQUFHLEVBQUUsQ0FBQztRQUMzQixFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUNqQyxDQUFDO0lBRUQsb0NBQWMsR0FBZDtRQUVJLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBQzlCLFNBQVMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLGtCQUFrQixFQUFDLEVBQUMsS0FBSyxFQUFDLFFBQVEsRUFBQyxPQUFPLEVBQUMsUUFBUSxFQUFDLEVBQUMsY0FBVyxDQUFDLENBQUMsQ0FBQztRQUM3RixJQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsY0FBYyxJQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDLG1CQUFtQixFQUFDO1lBQ2pHLE9BQU8sQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUM7WUFFcEMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBO1NBQ2hCO0lBRUwsQ0FBQztJQTVDRDtRQURDLFFBQVEsQ0FBQyx1QkFBYSxDQUFDO2lEQUNEO0lBTE4sV0FBVztRQUQvQixPQUFPO09BQ2EsV0FBVyxDQWtEL0I7SUFBRCxrQkFBQztDQWxERCxBQWtEQyxDQWxEd0MsRUFBRSxDQUFDLFNBQVMsR0FrRHBEO2tCQWxEb0IsV0FBVyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVzZXJJbmZvIH0gZnJvbSBcIi4uL0luZm9cIjtcbmltcG9ydCBMZXZlbFNlbGVjdG9yIGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvcGx1Z2luX2Jvb3N0cy91aS9nYW1lL0xldmVsU2VsZWN0b3JcIjtcblxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExldmVsRGlhbG9nIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblxuICAgIG9uTG9hZCAoKSB7fVxuICAgIHN0YXJ0ICgpIHt9XG4gICAgQHByb3BlcnR5KExldmVsU2VsZWN0b3IpXG4gICAgc2VsZWN0b3I6TGV2ZWxTZWxlY3RvcjtcblxuICAgIG9uU2hvd24oKVxuICAgIHtcbiAgICAgICAgdGhpcy5zZWxlY3Rvci5jdXJyZW50TGV2ZWwgPSBVc2VySW5mby5sZXZlbDtcbiAgICAgICAgdGhpcy5zZWxlY3Rvci5yZWZyZXNoKClcblxuICAgICAgICB0aGlzLnNjaGVkdWxlT25jZSh0aGlzLnJlZnJlc2hMZXZlbHMsIDAuMSlcbiAgICAgICAgYXBwR2FtZS5iYW5uZXIucGxheUJhbm5lcigxKTtcbiAgICB9XG5cbiAgICByZWZyZXNoTGV2ZWxzKClcbiAgICB7XG4gICAgICAgIHRoaXMuc2VsZWN0b3Iuc2Nyb2xsVG9DdXJyZW50TGV2ZWwoKTtcbiAgICB9XG5cbiAgICBzZWxlY3RfbGV2ZWwobHZub2RlKVxuICAgIHtcbiAgICAgICAgaHR0cFV0aWxzLmh0dHBQb3N0KGNvbnN0cy5IVFRQX1JFQ09SRF9TRVJWRVIse3RpdGxlOifpgInmi6nlhbPljaHnlYzpnaInLGNvbnRlbnQ6J+eCueWHu+WFs+WNoScrbHZub2RlLm5hbWV9LGZ1bmN0aW9uKCl7fSk7XG4gICAgICAgIHRoaXMuZ290b0xldmVsKGx2bm9kZS5uYW1lKVxuICAgIH1cblxuICAgIHJlZnJlc2hMZXZlbEl0ZW0oZGF0YSlcbiAgICB7XG4gICAgfVxuXG4gICAgZ290b0xldmVsKGx2KVxuICAgIHtcbiAgICAgICAgbHYgPSAgcGFyc2VJbnQobHYpXG4gICAgICAgIGNvbnNvbGUubG9nKFwiZW50ZXIgbGV2ZWxcIiAgLCBsdik7XG4gICAgICAgIFVzZXJJbmZvLmN1cnJlbnRMZXZlbCA9IGx2O1xuICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJHYW1lXCIpXG4gICAgfVxuXG4gICAgY2xpY2tfY29udGludWUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5nb3RvTGV2ZWwoVXNlckluZm8ubGV2ZWwpXG4gICAgICAgIGh0dHBVdGlscy5odHRwUG9zdChjb25zdHMuSFRUUF9SRUNPUkRfU0VSVkVSLHt0aXRsZTon6YCJ5oup5YWz5Y2h55WM6Z2iJyxjb250ZW50Oifngrnlh7vnu6fnu63muLjmiI8nfSxmdW5jdGlvbigpe30pO1xuICAgICAgICBpZihhcHBHYW1lLmdhbWVTZXJ2ZXJSb29tLmdhbWVDb25maWdEYXRhICYmYXBwR2FtZS5nYW1lU2VydmVyUm9vbS5nYW1lQ29uZmlnRGF0YS5MZXZlbERpYWxvZ0NvbnRpbnVlKXtcbiAgICAgICAgICAgIGFwcEdhbWUudmlkZW9CYW5uZXIucGxheVZpZGVvQWQoMSwwLGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9LmJpbmQodGhpcykpXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgfVxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Game/Scripts/ui/DCBackground.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4d867LSTWNEB7LUL3KAjVve', 'DCBackground');
// Game/Scripts/ui/DCBackground.ts

Object.defineProperty(exports, "__esModule", { value: true });
var DCUI_1 = require("../../../framework/plugin_boosts/ui/DCUI");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var DCBackground = /** @class */ (function (_super) {
    __extends(DCBackground, _super);
    function DCBackground() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DCBackground.prototype.onLoad = function () {
        this.sprite = this.getComponent(cc.Sprite);
    };
    DCBackground.prototype.start = function () { };
    DCBackground.prototype.onValueChanged = function (v) {
        // let data = UserInfo.getSkinById(v);
        // console.log(data);
        // SpriteFrameCache.instance.getSpriteFrame("Game/Textures/Bgs/"+data.img+".png").then(sf=>this.sprite.spriteFrame = sf);
    };
    DCBackground = __decorate([
        ccclass
    ], DCBackground);
    return DCBackground;
}(DCUI_1.default));
exports.default = DCBackground;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcR2FtZVxcU2NyaXB0c1xcdWlcXERDQmFja2dyb3VuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaUVBQTREO0FBSXRELElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQTBDLGdDQUFJO0lBQTlDOztJQWdCQSxDQUFDO0lBYkcsNkJBQU0sR0FBTjtRQUVJLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELDRCQUFLLEdBQUwsY0FBVSxDQUFDO0lBRVgscUNBQWMsR0FBZCxVQUFlLENBQUM7UUFFWixzQ0FBc0M7UUFDdEMscUJBQXFCO1FBQ3JCLHlIQUF5SDtJQUM3SCxDQUFDO0lBZmdCLFlBQVk7UUFEaEMsT0FBTztPQUNhLFlBQVksQ0FnQmhDO0lBQUQsbUJBQUM7Q0FoQkQsQUFnQkMsQ0FoQnlDLGNBQUksR0FnQjdDO2tCQWhCb0IsWUFBWSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEQ1VJIGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvcGx1Z2luX2Jvb3N0cy91aS9EQ1VJXCI7XG5pbXBvcnQgU3ByaXRlRnJhbWVDYWNoZSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL3BsdWdpbl9ib29zdHMvbWlzYy9TcHJpdGVGcmFtZUNhY2hlXCI7XG5pbXBvcnQgeyBVc2VySW5mbyB9IGZyb20gXCIuLi9JbmZvXCI7XG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRENCYWNrZ3JvdW5kIGV4dGVuZHMgRENVSSB7XG5cbiAgICBzcHJpdGU6Y2MuU3ByaXRlO1xuICAgIG9uTG9hZCgpXG4gICAge1xuICAgICAgICB0aGlzLnNwcml0ZSA9IHRoaXMuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSk7XG4gICAgfVxuXG4gICAgc3RhcnQgKCkge31cblxuICAgIG9uVmFsdWVDaGFuZ2VkKHYpXG4gICAge1xuICAgICAgICAvLyBsZXQgZGF0YSA9IFVzZXJJbmZvLmdldFNraW5CeUlkKHYpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgLy8gU3ByaXRlRnJhbWVDYWNoZS5pbnN0YW5jZS5nZXRTcHJpdGVGcmFtZShcIkdhbWUvVGV4dHVyZXMvQmdzL1wiK2RhdGEuaW1nK1wiLnBuZ1wiKS50aGVuKHNmPT50aGlzLnNwcml0ZS5zcHJpdGVGcmFtZSA9IHNmKTtcbiAgICB9XG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/network/MessageHandler.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'af7b1a7LUJIBaVXazyQWhWN', 'MessageHandler');
// framework/network/MessageHandler.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageHandler = void 0;
var Message_1 = require("./Message");
var MessageType_1 = require("./MessageType");
var MessageDispatch_1 = require("./MessageDispatch");
var MessageHandler = /** @class */ (function () {
    function MessageHandler(webSocket) {
        this._writeMessage = null;
        this._messages = null;
        this._messages = [];
        this._heartbeatTime = 0;
        this._writeMessage = [];
        this._webSocket = webSocket;
        this.setHeartbeatInterval(30); //30秒
        this._isEnableHeartbeat = false;
    }
    Object.defineProperty(MessageHandler.prototype, "enableHeartbeat", {
        get: function () {
            return this._isEnableHeartbeat;
        },
        set: function (flag) {
            this._isEnableHeartbeat = flag;
        },
        enumerable: false,
        configurable: true
    });
    MessageHandler.prototype.setHeartbeatInterval = function (time) {
        if (time <= 0)
            time = 1;
        this._heartbeatInterval = time * 1000;
    };
    MessageHandler.prototype.onUpdate = function (timeStamp) {
        if (this._writeMessage.length > 0) {
            var msg = this._writeMessage[0];
            var message = msg.pack();
            if (this._webSocket.readyState == WebSocket.OPEN) {
                console.log("size: " + message.byteLength);
                this._webSocket.send(message);
                this._writeMessage.shift();
            }
        }
        if (this._messages.length > 0) {
            var msg = this._messages.shift();
            this.dispatchMessage(msg);
        }
        if (this._isEnableHeartbeat)
            this.checkHeartbeat();
        return false;
    };
    MessageHandler.prototype.checkHeartbeat = function () {
        var diff = new Date().getTime() - this._heartbeatTime;
        if (diff >= this._heartbeatInterval) {
            this.sendMessage(new Message_1.Message(game.Command.Heartbeat));
            this._heartbeatTime = new Date().getTime();
        }
    };
    MessageHandler.prototype.dispatchMessage = function (msg) {
        var dispatch = MessageDispatch_1.MessageDispatch.getInstance();
        if (!dispatch.onMessage(msg)) {
            this._messages.push(msg);
        }
    };
    MessageHandler.prototype.dispatchSocket = function (type) {
        var obj = { type: type };
        this.dispatchMessage(obj);
    };
    MessageHandler.prototype.dispatch = function (type, msg) {
        var _this = this;
        if (type == MessageType_1.SocketTag.KSOCKET_OPEN) {
            // cc.director.getScheduler().unschedule(this.onUpdate,this)
            // cc.director.getScheduler().schedule(this.onUpdate,this,0);
            clearInterval(this.updateTimer);
            this.updateTimer = setInterval(function (dt) { return _this.onUpdate(dt); }, 1000 / 60);
            this.dispatchSocket(type);
        }
        else if (type == MessageType_1.SocketTag.KSOCKET_CLOSE) {
            clearInterval(this.updateTimer);
            this.dispatchSocket(type);
        }
        else if (type == MessageType_1.SocketTag.KSOCKET_ERROR) {
            clearInterval(this.updateTimer);
            this.dispatchSocket(type);
        }
        else if (type == MessageType_1.SocketTag.KSOCKET_MESSAGE) {
            var obj = { type: type, msg: msg };
            this.dispatchMessage(obj);
        }
    };
    MessageHandler.prototype.clearWriteMessage = function () {
        this._writeMessage = [];
    };
    MessageHandler.prototype.clearMessage = function () {
        this._messages = [];
    };
    MessageHandler.prototype.sendMessage = function (msg) {
        this._writeMessage.push(msg);
    };
    return MessageHandler;
}());
exports.MessageHandler = MessageHandler;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/process/browser.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------
