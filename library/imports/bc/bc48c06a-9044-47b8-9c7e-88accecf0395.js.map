{"version":3,"sources":["assets\\framework\\plugin_boosts\\ui\\MessageBoxManager.ts"],"names":[],"mappings":";;;;;;AAAA,6CAAwC;AAElC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAI1C;IAA+C,qCAAY;IAA3D;QAAA,qEASC;QANG,YAAM,GAAa,IAAI,CAAC;;IAM5B,CAAC;0BAToB,iBAAiB;IAMlC,kCAAM,GAAN;QACI,mBAAiB,CAAC,QAAQ,GAAG,IAAI,CAAC;IACtC,CAAC;;IAHM,0BAAQ,GAAqB,IAAI,CAAC;IAFzC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;qDACI;IAHP,iBAAiB;QAHrC,OAAO;OAGa,iBAAiB,CASrC;IAAD,wBAAC;CATD,AASC,CAT8C,EAAE,CAAC,SAAS,GAS1D;kBAToB,iBAAiB;AAWtC;IAAA;IAgCA,CAAC;IAvBG,0BAAK,GAAL;IAEA,CAAC;IAED,0GAA0G;IAC1G,uDAAuD;IAChD,eAAI,GAAX,UAAY,OAAO,EAAE,KAAM,EAAC,OAAQ,EAAC,KAAM;QAEvC,KAAK,GAAG,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,CAAE,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,KAAK,CAAA;QAC3D,OAAO,IAAI,OAAO,CAAS,UAAC,OAAO,EAAC,MAAM;YACtC,qBAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,EAAC,YAAY,EAAC;gBAC/E,KAAK,OAAA;gBACL,OAAO,SAAA;gBACP,OAAO,SAAA;gBACP,KAAK,OAAA;gBACL,QAAQ,EAAC,UAAA,IAAI;oBACT,OAAO,CAAC,IAAI,CAAC,CAAA;gBACjB,CAAC;aACJ,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;IACN,CAAC;IA3BD,wBAAwB;IACxB,eAAe;IACR,aAAE,GAAU,CAAC,CAAC;IACd,iBAAM,GAAU,CAAC,CAAC;IAElB,oBAAS,GAAU,CAAC,CAAC;IAyBhC,iBAAC;CAhCD,AAgCC,IAAA;AAhCY,gCAAU","file":"","sourceRoot":"/","sourcesContent":["import ViewManager from \"./ViewManager\";\n\nconst {ccclass, property} = cc._decorator;\n@ccclass\n\n\nexport default class MessageBoxManager extends cc.Component\n{\n    @property(cc.Prefab)\n    prefab:cc.Prefab = null;\n    \n    static instance:MessageBoxManager = null;\n    onLoad () {\n        MessageBoxManager.instance = this;\n    }\n}\n\nexport class MessageBox  {\n\n    // LIFE-CYCLE CALLBACKS:\n    // onLoad () {}\n    static OK:number = 1;\n    static CANCEL:number = 0;\n\n    static OK_CANCEL:number = 2;\n\n    start () {\n\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // static UIPath:string = \"plugin_boosts/ui/MessageBox\"\n    static show(content ,title?,buttons?,extra?):Promise<number>\n    {\n        title = (title == null || title == undefined )? \"提示\" :title\n        return new Promise<number>((resolve,reject)=>{\n            ViewManager.instance.showFromPrefab(MessageBoxManager.instance.prefab,\"MessageBox\",{\n                title,\n                content,\n                buttons,\n                extra,\n                callback:code=>{\n                    resolve(code)\n                }\n            })\n        })\n    }\n\n    // update (dt) {}\n}\n"]}