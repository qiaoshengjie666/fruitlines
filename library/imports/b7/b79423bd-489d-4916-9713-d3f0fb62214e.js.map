{"version":3,"sources":["assets\\framework\\plugin_boosts\\ui\\game\\LevelSelector.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nconst {ccclass, property,help} = cc._decorator;\n\n@ccclass\nexport default class LevelSelector extends cc.Component {\n\n    @property(cc.PageView)\n    pageview :cc.PageView = null\n\n    @property(cc.Node)\n    template:cc.Node = null;\n\n    @property(cc.Component.EventHandler)\n    onSelectLevel:cc.Component.EventHandler = new cc.Component.EventHandler();\n\n    @property(cc.Component.EventHandler)\n    onRefreshItem:cc.Component.EventHandler = new cc.Component.EventHandler();\n\n    @property\n    index :number = 0;\n\n    @property\n    max: number = 9;\n\n    itemCountPerPage: number = 0;\n\n    pages:cc.Node[] = [];\n\n    currentLevel:number = 1;\n\n    selectLevel(event,msg)\n    {\n        if(this.onSelectLevel)\n            this.onSelectLevel.emit([event.target,Number(event.target.name)])\n        else\n            console.warn(\"LevelSelector: onSelectLevel callback is nil\")\n    }\n\n    autoScrollToCurrentLevel:boolean = true;\n\n    onLoad()\n    {\n        this.pages.splice(0,this.pages.length);\n        this.itemCountPerPage = this.template.childrenCount;\n        let pageCount = Math.floor(this.max/this.itemCountPerPage);\n        let mod = this.max%this.itemCountPerPage \n        if (mod > 0)\n        {\n            pageCount = pageCount + 1;\n        }\n        for (var i = 0 ;i < pageCount -1 ;i++)\n        {\n            let page = cc.instantiate(this.template)\n            this.pageview.addPage(page); \n            this.pages.push(page);\n        }\n        this.pages.push(this.template);\n        for (var pageIdx = 0 ;pageIdx < pageCount; pageIdx++ )\n        {\n            let page = this.pages[pageIdx];\n            for (var itemIdx = 0; itemIdx < page.childrenCount;itemIdx ++ )\n            {\n                let item = page.children[itemIdx];\n                let label = item.getChildByName(\"label\");\n                let level = pageIdx * this.itemCountPerPage + Number(itemIdx) + 1 ;\n                \n                if (level > this.max)\n                {\n                    item.active = false;\n                }\n                item.name = level +\"\";\n                label.getComponent(cc.Label).string = item.name;\n            }\n        }\n    }\n\n\n    private refreshItem(item,level)\n    {\n        let lv = this.currentLevel;\n        if (level > lv)\n        {\n            item.opacity = 100;\n            item.getComponent(cc.Button).enabled = false;\n        }else{\n            item.opacity = 255;\n            item.getComponent(cc.Button).enabled = true;\n        }\n    }\n\n    refresh()\n    {\n        console.log(\"LevelSelctor: refresh\")\n        for (var i = 0; i< this.pages.length;i++)\n        {\n            let page = this.pages[i];\n            for (var itemIdx = 0; itemIdx < page.childrenCount;itemIdx ++ )\n            {\n                let item = page.children[itemIdx];\n                let level = i * this.itemCountPerPage + Number(itemIdx) + 1 ;\n                this.refreshItem(item,level);\n                this.onRefreshItem.emit([item,level])\n            }\n        }\n        if(this.autoScrollToCurrentLevel)\n            this.scrollToCurrentLevel()\n    }\n\n    start () {\n        \n    }\n\n    scrollToCurrentLevel()\n    {\n        let lv = this.currentLevel;\n        let curPage = Math.floor(lv/this.itemCountPerPage);\n        let mod = lv%this.itemCountPerPage \n        if (mod ==  0)\n        {\n            curPage = curPage - 1;\n        }\n        this.pageview.scrollToPage(curPage,0.3);\n    }\n\n    nextPage()\n    {\n        this.pageview.scrollToPage(this.pageview.getCurrentPageIndex()+1,0.3)\n    }\n\n    prevPage()\n    {\n        this.pageview.scrollToPage(this.pageview.getCurrentPageIndex()-1,0.3)\n    }\n\n\n\n    // update (dt) {}\n}\n"]}