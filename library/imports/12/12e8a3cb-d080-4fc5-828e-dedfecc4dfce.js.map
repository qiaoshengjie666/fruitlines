{"version":3,"sources":["assets\\framework\\plugin_boosts\\gamesys\\PsSpawner.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import PsFx from \"./PsFx\";\nimport PoolManager from \"./PoolManager\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PsSpawner extends cc.Component {\n\n    static instance:PsSpawner;\n    \n    poolmgr:PoolManager;\n    onLoad()\n    {\n        this.poolmgr = new PoolManager();\n    }\n\n    start () {\n\n    }\n\n    clear()\n    {\n        if(this.poolmgr)\n            this.poolmgr.clear();\n    }\n\n    getFx(prefabPath):Promise<PsFx>\n    {\n        return new Promise<PsFx>((resolve,reject)=>{\n            let node = this.poolmgr.get(prefabPath)\n            if(node == null)\n            {\n                if(prefabPath instanceof cc.Prefab )\n                {\n                    node = cc.instantiate(prefabPath);\n                    this.poolmgr.tag(node,prefabPath)\n                }else{\n                    cc.loader.loadRes(prefabPath,cc.Prefab,(e,prefab:cc.Prefab) =>{\n                        node = cc.instantiate(prefab);\n                        node.setParent(this.node);\n                        let psfx = node.getComponent(PsFx)\n                        psfx.name = prefabPath;\n                        resolve(psfx);\n                    }) \n                    return;\n                }\n            }\n            node.setParent(this.node);\n            node.active = false;\n            let psfx = node.getComponent(PsFx)\n            psfx.reset();\n            resolve(psfx);\n        })\n    }\n\n    onFxFinshPlay(fx:PsFx)\n    {\n        this.poolmgr.put(fx.node);\n    }\n\n    async play(prefabPath,pos = cc.Vec2.ZERO,rotation = 0,audio?,spriteframe?)\n    {\n        let fx = await this.getFx(prefabPath);\n        fx.node.position = pos;\n        fx.node.rotation = rotation;\n        await fx.play(audio,spriteframe)\n        this.onFxFinshPlay(fx);\n    }\n\n    async play2(prefabPath,pos = cc.Vec2.ZERO,rotation = 0,scale=0)\n    {\n        let fx = await this.getFx(prefabPath);\n        fx.node.position = pos;\n        fx.node.scale = scale;\n        fx.node.rotation = rotation;\n        await fx.play()\n        this.onFxFinshPlay(fx);\n    }\n\n    async play3(prefabPath,pos)\n    {\n        let fx = await this.getFx(prefabPath);\n        fx.node.position = pos;\n        fx.play().then(_=>this.onFxFinshPlay(fx));\n        return fx.node;\n    }\n\n\n    // update (dt) {}\n}\n"]}