{"version":3,"sources":["assets\\gameComon\\scripts\\model\\emitter.js"],"names":["module","exports","Emitter","window","EventEmitter","obj","mixin","key","prototype","on","addEventListener","event","fn","fun","bind","_callbacks","push","once","self","off","apply","arguments","removeListener","removeEventListener","length","callbacks","cb","i","splice","emit","args","slice","call","len","listeners","hasListeners"],"mappings":"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","sourceRoot":"/","sourcesContent":["\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\nwindow.EventEmitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn, obj){\n  var fun = null;\n  if (fn && obj) {\n    fun = fn.bind(obj);\n    fun.fn = fn;\n  } else {\n    fun = fn;\n  }\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fun);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn, obj){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(obj || this, arguments);\n  }\n\n  on.fn = fn;\n\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n      .push(on);\n  //this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\n//Emitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n"]}